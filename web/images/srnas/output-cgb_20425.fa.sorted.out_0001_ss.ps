%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGGGCCAAGACUAGAAUGCUUCCCCAUAACAAUCUCUUUGGACGAAAGUGCGAUCAUUGUUCCUGCUGACAUUGCGAGUUGGGGGACAAUGACUCUGAAAUCUUGACCAAAGAGUG\
) } def
/len { sequence length } bind def

/coor [
[-27.18443298 219.75392151]
[-37.86080551 230.29029846]
[-48.53717804 240.82666016]
[-59.21355438 251.36303711]
[-69.88992310 261.89941406]
[-80.56629944 272.43576050]
[-82.74964905 278.89270020]
[-87.24091339 282.62942505]
[-92.09521484 283.22781372]
[-103.31276703 293.18606567]
[-114.53032684 303.14428711]
[-118.94347382 311.28887939]
[-126.17792511 313.21255493]
[-127.28238678 328.97821045]
[-139.26599121 339.28201294]
[-155.01908875 338.01092529]
[-165.19563293 325.91906738]
[-163.75807190 310.18029785]
[-151.55928040 300.13214111]
[-135.83657837 301.73605347]
[-124.48856354 291.92672729]
[-113.27100372 281.96850586]
[-102.05345154 272.01025391]
[-91.10266876 261.75939941]
[-80.42629242 251.22302246]
[-69.74992371 240.68666077]
[-59.07354736 230.15028381]
[-48.39717484 219.61392212]
[-37.72079849 209.07756042]
[-41.49982071 198.35780334]
[-40.94291687 186.95327759]
[-36.09367752 176.55892944]
[-27.63651848 168.73432922]
[-16.80034447 164.66979980]
[-5.18005800 165.00535583]
[5.49817276 169.73030090]
[16.97468567 160.07164001]
[28.45119858 150.41299438]
[39.92771149 140.75433350]
[51.40422440 131.09567261]
[62.88073730 121.43701935]
[74.35725403 111.77835846]
[85.83376312 102.11970520]
[90.77666473 89.04074097]
[104.50757599 86.40378571]
[115.98409271 76.74512482]
[127.46060181 67.08647156]
[126.00607300 50.29522705]
[134.72019958 36.06224823]
[150.03010559 29.84712791]
[165.87886047 33.89674759]
[166.97192383 18.35831261]
[178.48997498 8.41904449]
[193.29676819 9.55687046]
[204.51432800 -0.40136507]
[215.59945679 -10.50679970]
[226.55023193 -20.75767326]
[237.50102234 -31.00854683]
[248.45179749 -41.25941849]
[259.40258789 -51.51029205]
[270.35336304 -61.76116562]
[281.30413818 -72.01203918]
[292.25491333 -82.26291656]
[303.20568848 -92.51378632]
[314.15649414 -102.76466370]
[325.10726929 -113.01553345]
[335.78363037 -123.55190277]
[346.17816162 -134.36642456]
[356.57269287 -145.18093872]
[352.89559937 -160.16368103]
[357.92413330 -174.74851990]
[370.05368042 -184.28147888]
[385.41378784 -185.72062683]
[399.10305786 -178.60675049]
[406.75329590 -165.20983887]
[405.92337036 -149.80482483]
[396.87811279 -137.30735779]
[382.50378418 -131.70536804]
[367.38720703 -134.78640747]
[356.99267578 -123.97189331]
[346.59814453 -113.15737915]
[345.80804443 -108.33057404]
[341.89642334 -103.99076843]
[335.35812378 -102.06475067]
[324.40734863 -91.81388092]
[313.45657349 -81.56300354]
[302.50579834 -71.31213379]
[291.55502319 -61.06126022]
[280.60421753 -50.81038666]
[269.65344238 -40.55951309]
[258.70266724 -30.30863953]
[247.75189209 -20.05776596]
[236.80110168 -9.80689240]
[225.85032654 0.44398078]
[223.08279419 7.39944601]
[214.47254944 10.81619072]
[203.25500488 20.77442551]
[202.62989807 35.61170578]
[191.39555359 45.87056732]
[175.83709717 45.11430359]
[178.36537170 58.29405594]
[173.98576355 71.09426117]
[163.75054932 80.10640717]
[150.28607178 82.87434387]
[137.11926270 78.56298065]
[125.64274597 88.22164154]
[114.16623688 97.88029480]
[109.22333527 110.95925903]
[95.49242401 113.59621429]
[84.01590729 123.25487518]
[72.53939819 132.91352844]
[61.06288147 142.57218933]
[49.58636856 152.23085022]
[38.10985565 161.88949585]
[26.63334274 171.54815674]
[15.15682983 181.20681763]
[17.41208267 200.07620239]
[8.04365158 216.44026184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[4 26]
[5 25]
[6 24]
[9 23]
[10 22]
[11 21]
[13 20]
[36 116]
[37 115]
[38 114]
[39 113]
[40 112]
[41 111]
[42 110]
[43 109]
[45 107]
[46 106]
[47 105]
[51 100]
[54 97]
[55 96]
[56 94]
[57 93]
[58 92]
[59 91]
[60 90]
[61 89]
[62 88]
[63 87]
[64 86]
[65 85]
[66 84]
[67 81]
[68 80]
[69 79]
] def

init

% Start Annotations
1 29 0.0 1 colorpair
2 28 0.0 1 colorpair
3 27 0.0 1 colorpair
4 26 0.0 1 colorpair
5 25 0.0 1 colorpair
6 24 0.0 1 colorpair
9 23 0.0 1 colorpair
10 22 0.0 1 colorpair
11 21 0.0 1 colorpair
13 20 0.0 1 colorpair
36 116 0.0 1 colorpair
37 115 0.0 1 colorpair
38 114 0.0 1 colorpair
39 113 0.0 1 colorpair
40 112 0.0 1 colorpair
41 111 0.0 1 colorpair
42 110 0.0 1 colorpair
43 109 0.0 1 colorpair
45 107 0.0 1 colorpair
46 106 0.0 1 colorpair
47 105 0.0 1 colorpair
51 100 0.0 1 colorpair
54 97 0.0 1 colorpair
55 96 0.0 1 colorpair
56 94 0.0 1 colorpair
57 93 0.0 1 colorpair
58 92 0.0 1 colorpair
59 91 0.0 1 colorpair
60 90 0.0 1 colorpair
61 89 0.0 1 colorpair
62 88 0.0 1 colorpair
63 87 0.0 1 colorpair
64 86 0.0 1 colorpair
65 85 0.0 1 colorpair
66 84 0.0 1 colorpair
67 81 0.0 1 colorpair
68 80 0.0 1 colorpair
69 79 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
