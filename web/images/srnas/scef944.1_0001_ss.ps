%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_ACACAAACUCACCAAUACAUAAGAGAAAAAUUGCAGACAGGGACGGGGAACCCACCCGCC___U_UU_A__AAAAAGGGCACGGAGGCCAACUCCUUGGGGUGAAGCCG__GAU_UCCUCCGGCAGGGCAAAUCCUCCGCCCUAACCCGACAGCUAACCUCGACGGCGACAGAUGAGAGGAAA_\
) } def
/len { sequence length } bind def

/coor [
[75.80086517 321.22369385]
[64.24018097 330.78146362]
[51.34154510 338.43817139]
[37.41475677 344.00991821]
[22.79430771 347.36291504]
[7.83136225 348.41659546]
[-7.11469841 347.14566040]
[-21.68489456 343.58062744]
[-35.52927780 337.80715942]
[-48.31532669 329.96386719]
[-59.73594284 320.23919678]
[-69.51682281 308.86666870]
[-77.42304993 296.11944580]
[-83.26473236 282.30371094]
[-86.90155029 267.75125122]
[-88.24616241 252.81166077]
[-87.26628113 237.84368896]
[-83.98542786 223.20689392]
[-78.48240662 209.25279236]
[-70.88939667 196.31655884]
[-61.38875961 184.70889282]
[-50.20869446 174.70858765]
[-37.61771774 166.55583191]
[-23.91825104 160.44645691]
[-9.43932629 156.52717590]
[5.47129583 154.89213562]
[20.45548820 155.58059692]
[35.15335464 158.57604980]
[49.21187973 163.80651855]
[62.29340363 171.14639282]
[74.08372498 180.41938782]
[84.29966736 191.40275574]
[92.69586182 203.83271790]
[99.06969452 217.40823364]
[99.82942963 202.42747498]
[87.88979340 195.77308655]
[79.94775391 184.56709290]
[77.60214233 170.96667480]
[81.36765289 157.62028503]
[90.56327820 147.15193176]
[103.43465424 141.64527893]
[104.44729614 126.67949677]
[105.45994568 111.71372223]
[91.70352936 124.31538391]
[65.83293915 117.65721893]
[51.09108353 114.88632965]
[36.34923553 112.11544037]
[21.60738373 109.34454346]
[9.63141918 119.39990997]
[-6.00609350 119.35306549]
[-17.92160034 109.22613525]
[-20.48896408 93.80074310]
[-12.49595261 80.36029053]
[2.28337812 75.25094604]
[16.87067986 80.88518524]
[24.37827492 94.60269928]
[39.12012482 97.37358856]
[53.86197662 100.14447784]
[68.60382843 102.91536713]
[74.12626648 97.84066010]
[62.51751328 88.34136200]
[50.90876007 78.84205627]
[39.30000305 69.34275055]
[27.69124794 59.84344101]
[16.08249283 50.34413910]
[4.47373724 40.84483337]
[-7.13501787 31.34552765]
[-21.17023849 26.05283356]
[-30.84181976 14.58721066]
[-33.69334030 -0.13925627]
[-29.00055313 -14.38628292]
[-17.95535660 -24.53535271]
[-3.36305141 -28.00876808]
[11.07015324 -23.92433357]
[21.67845535 -13.31943130]
[25.76747704 1.11063886]
[34.25371552 13.47929859]
[42.73995590 25.84795761]
[51.22619629 38.21661758]
[59.71243668 50.58527756]
[68.19867706 62.95393753]
[76.68491364 75.32259369]
[85.17115784 87.69125366]
[90.69359589 82.61654663]
[89.17607117 67.69351196]
[87.65854645 52.77046967]
[86.14102173 37.84743118]
[74.66609192 26.63558006]
[76.42066956 10.68876076]
[90.05877686 2.24000859]
[105.11843872 7.77048254]
[110.04717255 23.03767586]
[101.06406403 36.32990646]
[102.58158875 51.25294495]
[104.09911346 66.17598724]
[105.61663818 81.09902191]
[119.24672699 87.36166382]
[131.55818176 78.79264069]
[143.86962891 70.22360992]
[156.18109131 61.65459061]
[168.49253845 53.08556747]
[180.80398560 44.51654434]
[193.11543274 35.94752121]
[205.42689514 27.37849808]
[195.50546265 17.95062256]
[192.06884766 1.53838623]
[198.68855286 -17.66310310]
[209.20521545 -28.35890007]
[219.72186279 -39.05469513]
[230.23851013 -49.75049210]
[232.27325439 -56.07818985]
[236.56278992 -59.84788513]
[241.29559326 -60.62238693]
[240.14724731 -76.21775055]
[249.33395386 -88.87232971]
[264.51803589 -92.61103821]
[278.52999878 -85.66854858]
[284.75387573 -71.32291412]
[280.25091553 -56.34768677]
[267.14727783 -47.81372452]
[251.63009644 -49.75049210]
[240.93431091 -39.23384476]
[230.41764832 -28.53804588]
[219.90100098 -17.84225082]
[209.38435364 -7.14645338]
[213.07936096 -0.61982554]
[224.16441345 18.96005821]
[238.74699402 15.44606113]
[253.32958984 11.93206406]
[261.36108398 -1.67935574]
[276.68557739 -5.54400635]
[290.21130371 2.63094091]
[293.91372681 17.99543571]
[285.59622192 31.43399429]
[270.19345093 34.97375870]
[256.84356689 26.51465034]
[242.26100159 30.02864647]
[227.67840576 33.54264450]
[213.99591064 39.68994904]
[201.68446350 48.25897217]
[189.37301636 56.82799530]
[177.06155396 65.39701843]
[164.75010681 73.96604156]
[152.43865967 82.53506470]
[140.12719727 91.10408783]
[127.81575012 99.67311096]
[120.42572784 112.72636414]
[119.41307831 127.69214630]
[118.40042877 142.65792847]
[132.21650696 151.72244263]
[139.53991699 166.43043518]
[138.45936584 182.73123169]
[129.36367798 196.18840027]
[114.81018066 203.18721008]
[114.05043793 218.16796875]
[116.42121124 221.32606506]
[117.74912262 224.80784607]
[118.04000854 228.30035400]
[117.38708496 231.51847839]
[125.10541534 244.38034058]
[132.82374573 257.24218750]
[140.54206848 270.10406494]
[152.85594177 273.98995972]
[159.01626587 284.87960815]
[156.18991089 296.65542603]
[163.68991089 309.64581299]
[179.13548279 311.13378906]
[190.73425293 321.44146729]
[194.02627563 336.60531616]
[187.74568176 350.79452515]
[174.30749512 358.55307007]
[158.87898254 356.89761353]
[147.39271545 346.46472168]
[144.26539612 331.26605225]
[150.69953918 317.14581299]
[143.19953918 304.15542603]
[127.55456543 296.22601318]
[127.68022156 277.82238770]
[119.96188354 264.96054077]
[112.24355316 252.09866333]
[104.52522278 239.23681641]
[105.28757477 254.21742249]
[103.72607422 269.13592529]
[99.87824249 283.63400269]
[93.83648682 297.36343384]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[34 155]
[35 154]
[41 149]
[42 148]
[43 147]
[45 59]
[46 58]
[47 57]
[48 56]
[84 96]
[85 95]
[86 94]
[87 93]
[97 146]
[98 145]
[99 144]
[100 143]
[101 142]
[102 141]
[103 140]
[104 139]
[107 125]
[108 124]
[109 123]
[110 122]
[113 121]
[127 138]
[128 137]
[129 136]
[159 181]
[160 180]
[161 179]
[162 178]
[165 176]
[166 175]
] def

init

% Start Annotations
34 155 0.0 1 colorpair
35 154 0.0 1 colorpair
41 149 0.0 1 colorpair
42 148 0.0 1 colorpair
43 147 0.0 1 colorpair
45 59 0.0 1 colorpair
46 58 0.16 1 colorpair
47 57 0.0 1 colorpair
48 56 0.0 1 colorpair
84 96 0.0 0.6 colorpair
85 95 0.0 1 colorpair
86 94 0.16 1 colorpair
87 93 0.0 0.6 colorpair
97 146 0.0 1 colorpair
98 145 0.0 1 colorpair
99 144 0.0 1 colorpair
100 143 0.0 1 colorpair
101 142 0.16 1 colorpair
102 141 0.0 1 colorpair
103 140 0.0 1 colorpair
104 139 0.0 1 colorpair
107 125 0.0 1 colorpair
108 124 0.0 1 colorpair
109 123 0.0 1 colorpair
110 122 0.0 1 colorpair
113 121 0.16 1 colorpair
127 138 0.0 1 colorpair
128 137 0.16 1 colorpair
129 136 0.0 1 colorpair
159 181 0.0 1 colorpair
160 180 0.0 1 colorpair
161 179 0.0 1 colorpair
162 178 0.0 1 colorpair
165 176 0.0 1 colorpair
166 175 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
58 cmark
84 96 1 gmark
86 cmark
87 93 1 gmark
142 cmark
121 cmark
128 cmark

% End Annotations
showpage
end
%%EOF
