%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 10:38:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGAGGUGCCUUUCUGGCAGGUGAAUCAGGACUCUAAGCAAGCUUGAUUCUUCCAGUUCAGGAGGGCAUUUCCUAUUUUCCCACGCCGUUACACCUGAAUCACAUCGGUGGAUCCAG\
) } def
/len { sequence length } bind def

/coor [
[312.13214111 235.33460999]
[310.69461060 219.81898499]
[313.30117798 204.44522095]
[299.64166260 198.24703979]
[285.98211670 192.04885864]
[272.32260132 185.85067749]
[258.66308594 179.65249634]
[245.00355530 173.45429993]
[231.34403992 167.25611877]
[217.68452454 161.05793762]
[204.02499390 154.85975647]
[190.36547852 148.66157532]
[176.70594788 142.46339417]
[163.04643250 136.26521301]
[149.38691711 130.06703186]
[135.72738647 123.86884308]
[122.06786346 117.67066193]
[108.32704926 111.65485382]
[94.43050385 113.19682312]
[85.84059143 102.16482544]
[72.02091217 96.33245850]
[53.87363052 99.08320618]
[43.75011063 84.81585693]
[29.78006744 79.35345459]
[15.81002426 73.89104462]
[1.83998168 68.42863464]
[-12.13006115 62.96622467]
[-26.10010338 57.50381851]
[-40.07014465 52.04140854]
[-54.04018784 46.57899857]
[-63.30330658 46.35176849]
[-68.30623627 40.78075027]
[-82.12591553 34.94838715]
[-95.96096802 42.23710251]
[-111.23329926 38.87707520]
[-120.73178864 26.45480919]
[-119.97153473 10.83571625]
[-109.31150818 -0.60534275]
[-93.78504944 -2.46625090]
[-80.72327423 6.13165569]
[-76.29354858 21.12870789]
[-62.47387314 26.96107101]
[-48.57778168 32.60895538]
[-34.60773849 38.07136536]
[-20.63769531 43.53377533]
[-6.66765213 48.99618149]
[7.30239058 54.45859146]
[21.27243233 59.92100143]
[35.24247742 65.38340759]
[49.21251678 70.84581757]
[60.49845886 66.27408600]
[72.23085022 70.81163788]
[77.85327148 82.51277924]
[91.67295074 88.34514618]
[105.56949615 86.80317688]
[114.15940857 97.83517456]
[123.41319275 98.30891418]
[128.26605225 104.01113892]
[141.92556763 110.20932007]
[155.58509827 116.40750885]
[169.24461365 122.60569000]
[182.90412903 128.80386353]
[196.56365967 135.00205994]
[210.22317505 141.20024109]
[223.88270569 147.39842224]
[237.54222107 153.59660339]
[251.20173645 159.79478455]
[264.86126709 165.99296570]
[278.52078247 172.19114685]
[292.18029785 178.38932800]
[305.83984375 184.58750916]
[319.49935913 190.78570557]
[328.60488892 179.41755676]
[340.17141724 170.58100891]
[353.51608276 164.79200745]
[367.85244751 162.38674927]
[382.33679199 163.50212097]
[396.11785889 168.06799316]
[408.38677979 175.81156921]
[418.42459106 186.27368164]
[425.64443970 198.83602905]
[429.62573242 212.75769043]
[430.13882446 227.21885681]
[427.15808105 241.36907959]
[440.64776611 247.92869568]
[454.13745117 254.48829651]
[467.62713623 261.04791260]
[481.11682129 267.60751343]
[491.78622437 256.86309814]
[505.36734009 250.16744995]
[520.38702393 248.24684143]
[535.21594238 251.30961609]
[548.24572754 259.02352905]
[558.06286621 270.55187988]
[563.60247803 284.64410400]
[564.26379395 299.77160645]
[559.97491455 314.29345703]
[551.20123291 326.63446045]
[538.89428711 335.45596313]
[524.38916016 339.80102539]
[509.25918579 339.19836426]
[495.14562988 333.71334839]
[483.57934570 323.94091797]
[475.81500244 310.94116211]
[472.69479370 296.12417603]
[474.55718994 281.09719849]
[461.06750488 274.53759766]
[447.57781982 267.97799683]
[434.08816528 261.41836548]
[420.59848022 254.85876465]
[410.55163574 266.63848877]
[397.80206299 275.44143677]
[383.20571899 280.66967773]
[367.74438477 281.96548462]
[352.45959473 279.23583984]
[338.38241577 272.65905762]
[326.46398926 262.67324829]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 72]
[4 71]
[5 70]
[6 69]
[7 68]
[8 67]
[9 66]
[10 65]
[11 64]
[12 63]
[13 62]
[14 61]
[15 60]
[16 59]
[17 58]
[18 56]
[20 54]
[21 53]
[23 50]
[24 49]
[25 48]
[26 47]
[27 46]
[28 45]
[29 44]
[30 43]
[32 42]
[33 41]
[84 110]
[85 109]
[86 108]
[87 107]
[88 106]
] def

init

% Start Annotations
3 72 0.0 1 colorpair
4 71 0.0 1 colorpair
5 70 0.0 1 colorpair
6 69 0.0 1 colorpair
7 68 0.0 1 colorpair
8 67 0.0 1 colorpair
9 66 0.0 1 colorpair
10 65 0.0 1 colorpair
11 64 0.0 1 colorpair
12 63 0.0 1 colorpair
13 62 0.0 1 colorpair
14 61 0.0 1 colorpair
15 60 0.0 1 colorpair
16 59 0.0 1 colorpair
17 58 0.16 1 colorpair
18 56 0.0 0.6 colorpair
20 54 0.0 1 colorpair
21 53 0.0 1 colorpair
23 50 0.0 1 colorpair
24 49 0.16 1 colorpair
25 48 0.0 1 colorpair
26 47 0.0 0.6 colorpair
27 46 0.0 0.6 colorpair
28 45 0.0 0.6 colorpair
29 44 0.0 1 colorpair
30 43 0.0 0.6 colorpair
32 42 0.0 1 colorpair
33 41 0.0 1 colorpair
84 110 0.0 1 colorpair
85 109 0.0 1 colorpair
86 108 0.0 1 colorpair
87 107 0.0 1 colorpair
88 106 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
58 cmark
18 56 1 gmark
24 cmark
26 47 1 gmark
27 46 1 gmark
28 45 1 gmark
30 43 1 gmark

% End Annotations
showpage
end
%%EOF
