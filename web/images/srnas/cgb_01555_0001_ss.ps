%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGGCCCGAUGAGAGUGUGAGAUCAGGGCGUUCACGAACCAAACCUGCCUGCAUUAAAGCGGUGACUGCGCGGGUGACAGUCGGUUGGGACAGACCUGUGGCCUCGACCAGCUCAUUUCUAAUGAGUUGCUGGCCGAGGCGGAUAUGGUGCAUGCACUUUGCAGCCGGGGUAG\
) } def
/len { sequence length } bind def

/coor [
[-142.87564087 426.66455078]
[-160.53350830 426.73312378]
[-177.13935852 420.79888916]
[-186.34141541 432.64465332]
[-188.69714355 448.28948975]
[-202.61523438 453.59384155]
[-211.81730652 465.43957520]
[-221.01937866 477.28533936]
[-230.22143555 489.13110352]
[-239.31741333 501.05850220]
[-248.30657959 513.06665039]
[-257.29574585 525.07476807]
[-250.65156555 538.86291504]
[-251.18771362 554.15905762]
[-258.78097534 567.44818115]
[-271.68646240 575.67657471]
[-286.93862915 576.95343018]
[-301.03259277 570.98529053]
[-310.72970581 559.14361572]
[-313.80160522 544.14959717]
[-309.54241943 529.44860840]
[-298.93084717 518.41894531]
[-284.40539551 513.59509277]
[-269.30386353 516.08557129]
[-260.31469727 504.07748413]
[-251.32553101 492.06936646]
[-249.82937622 484.80682373]
[-242.06719971 479.92904663]
[-232.86512756 468.08328247]
[-223.66307068 456.23751831]
[-214.46099854 444.39175415]
[-212.76345825 429.59420776]
[-198.18717957 423.44259644]
[-188.98510742 411.59683228]
[-196.43223572 401.69509888]
[-201.27897644 390.28070068]
[-203.23495483 378.02395630]
[-202.17965698 365.64593506]
[-198.16993713 353.87615967]
[-191.43690491 343.40969849]
[-182.37268066 334.86587524]
[-171.50749207 328.75186157]
[-159.47872925 325.43246460]
[-146.99346924 325.10830688]
[-134.78700256 327.80386353]
[-123.57948303 333.36557007]
[-113.55579376 322.20645142]
[-103.53210449 311.04736328]
[-93.50841522 299.88824463]
[-90.75956726 285.24948120]
[-75.78156281 280.15341187]
[-65.75788116 268.99429321]
[-55.73419189 257.83517456]
[-45.71050644 246.67607117]
[-35.68681717 235.51696777]
[-40.77271271 222.82356262]
[-39.88219833 209.11184692]
[-33.13245010 197.06735229]
[-21.79380035 189.07377625]
[-8.05104065 186.74127197]
[5.41748142 190.58233643]
[15.63875008 179.60391235]
[25.86001968 168.62550354]
[22.82970428 154.06681824]
[29.02650261 140.35317993]
[42.26493835 132.83007812]
[57.57170105 134.56474304]
[67.79296875 123.58632660]
[78.01424408 112.60791016]
[74.73059082 86.47019196]
[97.86012268 68.08886719]
[97.05725861 53.11036682]
[96.25439453 38.13186646]
[95.45153046 23.15336800]
[94.64866638 8.17487049]
[93.84580231 -6.80362749]
[93.04293823 -21.78212547]
[82.79023743 -27.87612534]
[76.82649231 -38.06624222]
[76.54042816 -49.74964905]
[81.88735199 -60.00645065]
[91.42926025 -66.32944489]
[91.16152191 -81.32704926]
[90.89379120 -96.32466125]
[79.34817505 -107.11699677]
[78.89903259 -122.91490173]
[89.81282806 -134.34576416]
[105.61460114 -134.62785339]
[116.92943573 -123.59381104]
[117.04444885 -107.78993988]
[105.89139557 -96.59239960]
[106.15913391 -81.59478760]
[106.42686462 -66.59717560]
[120.33794403 -54.73374557]
[121.20754242 -36.15280533]
[108.02143860 -22.58498955]
[108.82430267 -7.60649204]
[109.62716675 7.37200642]
[110.43003082 22.35050392]
[111.23289490 37.32900238]
[112.03575897 52.30750275]
[112.83862305 67.28599548]
[125.31066895 75.61955261]
[139.45623779 70.62928009]
[153.60180664 65.63900757]
[167.74737549 60.64873123]
[181.89294434 55.65845871]
[196.03852844 50.66818619]
[206.47853088 38.78050995]
[221.05491638 41.84290695]
[235.20048523 36.85263443]
[249.34605408 31.86236000]
[263.49163818 26.87208748]
[277.63720703 21.88181305]
[291.64410400 16.51462746]
[305.50228882 10.77437592]
[319.36047363 5.03412485]
[333.21868896 -0.70612669]
[347.07687378 -6.44637823]
[359.39648438 -18.09384155]
[373.99917603 -9.48001862]
[369.76440430 6.93653059]
[352.81710815 7.41181469]
[338.95892334 13.15206623]
[325.10073853 18.89231873]
[311.24255371 24.63256836]
[297.38433838 30.37281990]
[295.70223999 33.50637817]
[292.40209961 35.96904755]
[287.82147217 37.00168991]
[282.62747192 36.02738571]
[268.48190308 41.01765823]
[254.33631897 46.00793076]
[240.19075012 50.99820328]
[226.04518127 55.98847580]
[216.61695862 67.51921844]
[201.02879333 64.81375885]
[186.88322449 69.80403137]
[172.73765564 74.79430389]
[158.59208679 79.78457642]
[144.44651794 84.77484894]
[130.30093384 89.76512146]
[131.03308105 100.29091644]
[128.31845093 110.16058350]
[122.66390991 118.31268311]
[114.87991333 123.94219208]
[105.97024536 126.57872772]
[97.00498199 126.12150574]
[88.99266052 122.82917786]
[78.77139282 133.80760193]
[68.55011749 144.78601074]
[71.37234497 159.93003845]
[64.81282043 173.67143250]
[51.57620621 180.83076477]
[36.83843613 178.84677124]
[26.61716843 189.82518005]
[16.39589882 200.80360413]
[21.40565872 216.54487610]
[17.82328987 232.57490540]
[6.71667624 244.54847717]
[-8.81997490 249.26879883]
[-24.52770996 245.54064941]
[-34.55139542 256.69976807]
[-44.57508469 267.85885620]
[-54.59877014 279.01797485]
[-64.62245941 290.17709351]
[-68.08827209 305.61401367]
[-82.34931183 309.91192627]
[-92.37300110 321.07104492]
[-102.39668274 332.23013306]
[-112.42037201 343.38925171]
[-103.64282227 358.87454224]
[-100.66033173 376.39889526]
[-103.81275940 393.86941528]
[-112.70826721 409.20523071]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 34]
[4 33]
[6 31]
[7 30]
[8 29]
[9 28]
[10 26]
[11 25]
[12 24]
[46 171]
[47 170]
[48 169]
[49 168]
[51 166]
[52 165]
[53 164]
[54 163]
[55 162]
[61 157]
[62 156]
[63 155]
[67 151]
[68 150]
[69 149]
[71 102]
[72 101]
[73 100]
[74 99]
[75 98]
[76 97]
[77 96]
[82 93]
[83 92]
[84 91]
[103 142]
[104 141]
[105 140]
[106 139]
[107 138]
[108 137]
[110 135]
[111 134]
[112 133]
[113 132]
[114 131]
[115 127]
[116 126]
[117 125]
[118 124]
[119 123]
] def

init

% Start Annotations
3 34 0.0 1 colorpair
4 33 0.0 1 colorpair
6 31 0.0 1 colorpair
7 30 0.0 1 colorpair
8 29 0.0 1 colorpair
9 28 0.0 1 colorpair
10 26 0.0 1 colorpair
11 25 0.0 1 colorpair
12 24 0.0 1 colorpair
46 171 0.0 1 colorpair
47 170 0.0 1 colorpair
48 169 0.0 1 colorpair
49 168 0.0 1 colorpair
51 166 0.0 1 colorpair
52 165 0.0 1 colorpair
53 164 0.0 1 colorpair
54 163 0.0 1 colorpair
55 162 0.0 1 colorpair
61 157 0.0 1 colorpair
62 156 0.0 1 colorpair
63 155 0.0 1 colorpair
67 151 0.0 1 colorpair
68 150 0.0 1 colorpair
69 149 0.0 1 colorpair
71 102 0.0 1 colorpair
72 101 0.0 1 colorpair
73 100 0.0 1 colorpair
74 99 0.0 1 colorpair
75 98 0.0 1 colorpair
76 97 0.0 1 colorpair
77 96 0.0 1 colorpair
82 93 0.0 1 colorpair
83 92 0.0 1 colorpair
84 91 0.0 1 colorpair
103 142 0.0 1 colorpair
104 141 0.0 1 colorpair
105 140 0.0 1 colorpair
106 139 0.0 1 colorpair
107 138 0.0 1 colorpair
108 137 0.0 1 colorpair
110 135 0.0 1 colorpair
111 134 0.0 1 colorpair
112 133 0.0 1 colorpair
113 132 0.0 1 colorpair
114 131 0.0 1 colorpair
115 127 0.0 1 colorpair
116 126 0.0 1 colorpair
117 125 0.0 1 colorpair
118 124 0.0 1 colorpair
119 123 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
