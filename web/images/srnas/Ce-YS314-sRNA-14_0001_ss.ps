%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 16:15:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGUGAGUUUUCCAAAUCGCUAUCGCAUUGCAAUGUGAGUUAGGUAACUUCACAUUCACACGUUUAGCUGUGAUCGACAACAUACUUCGUGGUCGUCGGCCAGAUGUGGUGAGAAACAU\
) } def
/len { sequence length } bind def

/coor [
[120.29727936 156.21405029]
[119.36432648 141.24308777]
[113.00561523 154.82862854]
[106.64689636 168.41415405]
[100.28817749 181.99969482]
[105.90727997 196.77133179]
[99.35932159 211.15534973]
[84.52909851 216.61795044]
[70.21511841 209.91828918]
[64.90961456 195.03114319]
[71.76023865 180.78878784]
[86.70264435 175.64097595]
[93.06136322 162.05545044]
[99.42008209 148.46990967]
[105.77879333 134.88436890]
[100.82765198 129.25088501]
[93.17207336 142.15019226]
[78.53840637 138.85537720]
[77.14992523 123.91978455]
[90.92536926 117.98390961]
[85.97422791 112.35041809]
[71.68470001 116.91213989]
[61.05515289 129.39991760]
[44.97669983 126.17263031]
[39.98947906 110.55022430]
[51.22391129 98.60369110]
[67.12297821 102.62261200]
[81.41250610 98.06089020]
[83.22900391 90.78418732]
[68.80886841 94.91452026]
[58.02190399 84.49140167]
[61.65521240 69.93807983]
[76.07543945 65.80806732]
[86.86199951 76.23078918]
[88.67849731 68.95409393]
[78.20933533 58.21181107]
[67.74016571 47.46952820]
[57.27100754 36.72724533]
[46.80184555 25.98496056]
[36.33268356 15.24267864]
[25.72607994 4.63607645]
[14.98379803 -5.83308601]
[4.24151516 -16.30224800]
[-11.77682781 -19.81575584]
[-16.48466301 -35.52461624]
[-5.03897429 -47.26890182]
[10.78589535 -42.96709824]
[14.71067715 -27.04453087]
[25.45296097 -16.57536888]
[36.19524384 -6.10620642]
[43.26515961 -3.66217303]
[47.07496643 4.77351570]
[57.54412842 15.51579857]
[68.01329041 26.25808144]
[78.48245239 37.00036621]
[88.95161438 47.74264908]
[99.42077637 58.48493195]
[113.92619324 62.30499649]
[128.32844543 58.11271286]
[142.73068237 53.92042923]
[157.13293457 49.72814178]
[171.48001099 45.35077667]
[185.76954651 40.78905487]
[200.05908203 36.22733307]
[214.34860229 31.66560936]
[228.63813782 27.10388756]
[242.92767334 22.54216385]
[253.72117615 10.97450161]
[268.19863892 14.47477531]
[282.48818970 9.91305256]
[296.77770996 5.35133028]
[311.06723022 0.78960782]
[325.29684448 -3.95571470]
[339.46420288 -8.88385010]
[353.63153076 -13.81198597]
[367.79885864 -18.74012184]
[381.96621704 -23.66825676]
[396.13354492 -28.59639359]
[397.37103271 -43.77494812]
[404.68087769 -57.13480759]
[416.79666138 -66.36128998]
[431.61920166 -69.85585785]
[446.58044434 -67.01304626]
[459.08822632 -58.32540512]
[466.97552490 -45.29810715]
[468.87579346 -30.18821526]
[464.45983887 -15.61360931]
[454.49270630 -4.09942865]
[440.70129395 2.35942626]
[425.47503662 2.64391923]
[411.45196533 -3.29523945]
[401.06167603 -14.42905521]
[386.89434814 -9.50091934]
[372.72702026 -4.57278347]
[358.55966187 0.35535237]
[344.39233398 5.28348827]
[330.22500610 10.21162415]
[324.87792969 15.44286156]
[315.62896729 15.07913876]
[301.33944702 19.64086151]
[287.04989624 24.20258331]
[272.76037598 28.76430511]
[262.98895264 40.00568390]
[247.48939514 36.83169556]
[233.19985962 41.39341736]
[218.91032410 45.95513916]
[204.62080383 50.51686096]
[190.33126831 55.07858658]
[176.04173279 59.64030838]
[170.56173706 64.73213196]
[161.32522583 64.13039398]
[146.92297363 68.32267761]
[132.52072144 72.51496124]
[118.11847687 76.70724487]
[132.76753235 79.93297577]
[146.77539062 85.29766083]
[157.68566895 95.59162903]
[163.85491943 109.26424408]
[164.35382080 124.25594330]
[159.10723877 138.30845642]
[148.90547180 149.30500793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[21 28]
[22 27]
[35 57]
[36 56]
[37 55]
[38 54]
[39 53]
[40 52]
[41 50]
[42 49]
[43 48]
[58 114]
[59 113]
[60 112]
[61 111]
[62 109]
[63 108]
[64 107]
[65 106]
[66 105]
[67 104]
[69 102]
[70 101]
[71 100]
[72 99]
[73 97]
[74 96]
[75 95]
[76 94]
[77 93]
[78 92]
] def

init

% Start Annotations
2 15 0.16 1 colorpair
3 14 0.0 0.6 colorpair
4 13 0.16 1 colorpair
5 12 0.16 1 colorpair
21 28 0.0 1 colorpair
22 27 0.0 1 colorpair
35 57 0.0 1 colorpair
36 56 0.0 1 colorpair
37 55 0.0 1 colorpair
38 54 0.0 1 colorpair
39 53 0.0 1 colorpair
40 52 0.0 1 colorpair
41 50 0.0 1 colorpair
42 49 0.0 1 colorpair
43 48 0.0 1 colorpair
58 114 0.0 1 colorpair
59 113 0.0 1 colorpair
60 112 0.0 1 colorpair
61 111 0.0 1 colorpair
62 109 0.0 1 colorpair
63 108 0.0 1 colorpair
64 107 0.0 1 colorpair
65 106 0.0 1 colorpair
66 105 0.16 1 colorpair
67 104 0.0 1 colorpair
69 102 0.0 1 colorpair
70 101 0.0 1 colorpair
71 100 0.0 1 colorpair
72 99 0.0 1 colorpair
73 97 0.0 1 colorpair
74 96 0.0 1 colorpair
75 95 0.0 1 colorpair
76 94 0.16 1 colorpair
77 93 0.0 1 colorpair
78 92 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
15 cmark
3 14 1 gmark
4 cmark
13 cmark
5 cmark
105 cmark
76 cmark
92 cmark

% End Annotations
showpage
end
%%EOF
