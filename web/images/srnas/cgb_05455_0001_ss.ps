%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCCUCCUGUUACGACAGUGAAGGAAGAAGACCCUAGGACCCCAGCCGGACGACUGGACCUAGGGUCUUCGCUUUGUUUUAUUCUCAUAGUGAUUCCGGGGUUAAUGAAUUGAGAACAACUCUGUCUU\
) } def
/len { sequence length } bind def

/coor [
[194.04180908 296.66693115]
[200.14974976 282.87869263]
[209.90525818 271.35870361]
[201.68507385 258.81164551]
[193.46487427 246.26460266]
[185.24468994 233.71754456]
[177.02450562 221.17050171]
[160.46910095 218.48396301]
[150.74751282 204.40606689]
[154.23352051 187.31312561]
[145.71253967 174.96836853]
[137.19157410 162.62361145]
[128.67060852 150.27885437]
[120.14963531 137.93409729]
[111.18687439 125.90625763]
[101.79409027 114.21114349]
[88.83198547 108.96944427]
[86.51078796 95.18163300]
[77.11801147 83.48651886]
[67.72523499 71.79140472]
[58.33245850 60.09628677]
[48.93967819 48.40117264]
[39.54690170 36.70605850]
[30.15412331 25.01094246]
[15.48008537 19.09628487]
[13.54303074 4.32817364]
[4.15025282 -7.36694145]
[-5.66019964 -18.71396828]
[-15.87543774 -29.69799805]
[-26.09067535 -40.68202972]
[-36.30591202 -51.66605759]
[-46.52115250 -62.65008926]
[-56.73638916 -73.63411713]
[-66.95162964 -84.61814880]
[-77.16686249 -95.60218048]
[-87.38210297 -106.58621216]
[-97.59734344 -117.57023621]
[-107.81257629 -128.55427551]
[-118.02781677 -139.53829956]
[-129.03001404 -139.31140137]
[-138.12344360 -145.10772705]
[-142.38407898 -154.77313232]
[-140.60414124 -164.96078491]
[-150.27677917 -176.42552185]
[-159.94940186 -187.89025879]
[-169.62203979 -199.35499573]
[-185.08801270 -198.09674072]
[-198.32229614 -206.19821167]
[-204.23600769 -220.54420471]
[-200.55522156 -235.61840820]
[-188.69528198 -245.62446594]
[-173.21656799 -246.71485901]
[-160.07095337 -238.47030640]
[-154.31321716 -224.06100464]
[-158.15730286 -209.02763367]
[-148.48468018 -197.56289673]
[-138.81204224 -186.09815979]
[-129.13940430 -174.63342285]
[-110.54880524 -169.53672791]
[-107.04378510 -149.75354004]
[-96.82855225 -138.76950073]
[-86.61331177 -127.78547668]
[-76.39807129 -116.80144501]
[-66.18283844 -105.81741333]
[-55.96759796 -94.83338928]
[-45.75235748 -83.84935760]
[-35.53712082 -72.86532593]
[-25.32188416 -61.88129807]
[-15.10664558 -50.89726639]
[-4.89140749 -39.91323471]
[5.32383013 -28.92920685]
[8.91651344 -28.46792793]
[12.44753933 -26.18009758]
[15.03111172 -22.12271690]
[15.84536839 -16.75971985]
[25.23814583 -5.06460428]
[39.24034882 0.01354030]
[41.84923935 15.61816406]
[51.24201584 27.31327820]
[60.63479614 39.00839615]
[70.02757263 50.70351028]
[79.42034912 62.39862442]
[88.81312561 74.09374237]
[98.20590973 85.78885651]
[111.16801453 91.03055573]
[113.48921204 104.81836700]
[122.88198853 116.51348114]
[127.94293213 118.46580505]
[131.34722900 121.86402893]
[132.81922913 125.80554962]
[132.49438477 129.41313171]
[141.01536560 141.75788879]
[149.53633118 154.10264587]
[158.05731201 166.44740295]
[166.57827759 178.79216003]
[180.07775879 179.69454956]
[190.42114258 188.11006165]
[193.94551086 200.76774597]
[189.57156372 212.95031738]
[197.79174805 225.49736023]
[206.01193237 238.04441833]
[214.23211670 250.59146118]
[222.45230103 263.13851929]
[236.90974426 258.79541016]
[251.98999023 258.70223999]
[266.47082520 262.85797119]
[279.18109131 270.91760254]
[289.09524536 282.22076416]
[295.41625977 295.84576416]
[297.63964844 310.68481445]
[295.59365845 325.53405762]
[289.45254517 339.19122314]
[279.72180176 350.55300903]
[287.94198608 363.10006714]
[296.16217041 375.64709473]
[311.51147461 380.31387329]
[317.29882812 395.27670288]
[309.08465576 409.05740356]
[293.17019653 411.08456421]
[281.76364136 399.80316162]
[283.61514282 383.86727905]
[275.39495850 371.32025146]
[267.17474365 358.77319336]
[252.87225342 363.15673828]
[237.89892578 363.33267212]
[223.46817017 359.27819824]
[210.75178528 351.31362915]
[200.78488159 340.07720947]
[194.38160706 326.47390747]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 103]
[4 102]
[5 101]
[6 100]
[7 99]
[10 95]
[11 94]
[12 93]
[13 92]
[14 91]
[15 87]
[16 86]
[18 84]
[19 83]
[20 82]
[21 81]
[22 80]
[23 79]
[24 78]
[26 76]
[27 75]
[28 71]
[29 70]
[30 69]
[31 68]
[32 67]
[33 66]
[34 65]
[35 64]
[36 63]
[37 62]
[38 61]
[39 60]
[43 58]
[44 57]
[45 56]
[46 55]
[113 123]
[114 122]
[115 121]
] def

init

% Start Annotations
3 103 0.0 1 colorpair
4 102 0.0 1 colorpair
5 101 0.0 1 colorpair
6 100 0.0 1 colorpair
7 99 0.0 1 colorpair
10 95 0.0 1 colorpair
11 94 0.0 1 colorpair
12 93 0.0 1 colorpair
13 92 0.0 1 colorpair
14 91 0.0 1 colorpair
15 87 0.0 1 colorpair
16 86 0.0 1 colorpair
18 84 0.0 1 colorpair
19 83 0.0 1 colorpair
20 82 0.0 1 colorpair
21 81 0.0 1 colorpair
22 80 0.0 1 colorpair
23 79 0.0 1 colorpair
24 78 0.0 1 colorpair
26 76 0.0 1 colorpair
27 75 0.0 1 colorpair
28 71 0.0 1 colorpair
29 70 0.0 1 colorpair
30 69 0.0 1 colorpair
31 68 0.0 1 colorpair
32 67 0.0 1 colorpair
33 66 0.0 1 colorpair
34 65 0.0 1 colorpair
35 64 0.0 1 colorpair
36 63 0.0 1 colorpair
37 62 0.0 1 colorpair
38 61 0.0 1 colorpair
39 60 0.0 1 colorpair
43 58 0.0 1 colorpair
44 57 0.0 1 colorpair
45 56 0.0 1 colorpair
46 55 0.0 1 colorpair
113 123 0.0 1 colorpair
114 122 0.0 1 colorpair
115 121 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
