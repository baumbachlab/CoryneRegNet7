%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGUCGGCGCUUACUCGGUGCAAACCGCCGGAGCGCAAGCGUCCUAUCCGGACGCGAGCGUUUCACUUCCCUCUGUUUAAAAAAACUAUUUAAGAAGAGGUGAUGUGUAACAAGAUGUCAUCGUGGAGGAUUCGCUCCUCCGACACUUCGAAAAUCUGGUUCAGGUAUUCCACCUGAGCAUCAAAAUCAUGUGCAUUCAUCAUU\
) } def
/len { sequence length } bind def

/coor [
[146.14399719 196.59696960]
[143.63945007 181.80754089]
[141.13491821 167.01811218]
[138.63038635 152.22868347]
[136.12583923 137.43923950]
[116.21380615 144.62982178]
[96.97058868 142.83389282]
[81.93961334 133.88554382]
[72.43476868 145.48976135]
[62.92992783 157.09397888]
[53.42508698 168.69819641]
[43.92024231 180.30242920]
[34.41540146 191.90664673]
[38.19186401 206.84132385]
[32.51652908 220.97085571]
[19.76033020 228.95480347]
[4.92644262 227.90896606]
[-4.57840014 239.51318359]
[-14.08324337 251.11740112]
[-23.58808517 262.72161865]
[-25.70862198 278.98309326]
[-40.95352554 285.02667236]
[-53.64014816 274.63525391]
[-50.71757889 258.49862671]
[-35.19230652 253.21678162]
[-25.68746567 241.61256409]
[-16.18262100 230.00834656]
[-6.67777872 218.40412903]
[-10.62481022 204.06678772]
[-5.30971622 189.98796082]
[7.42523956 181.64083862]
[22.81117821 182.40179443]
[32.31602097 170.79757690]
[41.82086563 159.19335938]
[51.32570648 147.58914185]
[60.83055115 135.98490906]
[70.33539581 124.38069153]
[67.46178436 120.38802338]
[65.12220764 116.06072235]
[63.35507965 111.46982574]
[48.44047165 113.06808472]
[33.52586365 114.66634369]
[18.61125183 116.26460266]
[3.69664311 117.86286163]
[-11.21796608 119.46111298]
[-22.36755753 130.99655151]
[-38.32363892 129.32829285]
[-46.84606934 115.73609924]
[-41.39716721 100.64673615]
[-26.15686989 95.63545990]
[-12.81622410 104.54650879]
[2.09838557 102.94824982]
[17.01299477 101.34999084]
[31.92760468 99.75173187]
[46.84221268 98.15348053]
[61.75682449 96.55522156]
[65.25820160 77.99615479]
[77.77734375 62.19881439]
[97.36007690 53.49967575]
[120.01467133 54.94453812]
[140.51965332 67.36671448]
[133.28532410 54.22652435]
[126.05100250 41.08633423]
[112.61737061 32.72881699]
[113.25713348 17.84795761]
[106.02281189 4.70776844]
[98.78849030 -8.43242073]
[85.35485840 -16.78993797]
[85.99461365 -31.67079735]
[78.76029205 -44.81098557]
[71.42598724 -57.89563370]
[63.99211884 -70.92397308]
[56.55825424 -83.95230865]
[49.12438583 -96.98065186]
[41.69051743 -110.00898743]
[28.13099670 -118.16067505]
[28.54375267 -133.04956055]
[21.10988617 -146.07789612]
[13.67601871 -159.10623169]
[6.24215174 -172.13458252]
[-1.19171548 -185.16291809]
[-8.62558270 -198.19125366]
[-24.04288673 -200.80673218]
[-34.13258743 -212.75378418]
[-34.13063812 -228.39135742]
[-24.03795815 -240.33589172]
[-8.62000275 -242.94752502]
[4.84334230 -234.99313354]
[9.99509525 -220.22853088]
[4.40275669 -205.62512207]
[11.83662415 -192.59678650]
[19.27049065 -179.56843567]
[26.70435715 -166.54010010]
[34.13822556 -153.51176453]
[41.57209015 -140.48342896]
[54.59989166 -133.26361084]
[54.71885681 -117.44285583]
[62.15272522 -104.41452026]
[69.58659363 -91.38617706]
[77.02046204 -78.35784149]
[84.45432281 -65.32949829]
[90.50202942 -61.07614517]
[91.90048218 -52.04531097]
[99.13480377 -38.90512085]
[112.05099487 -31.48747635]
[111.92868042 -15.66674328]
[119.16300201 -2.52655387]
[126.39732361 10.61363602]
[139.31350708 18.03127861]
[139.19119263 33.85201263]
[146.42552185 46.99220276]
[153.65983582 60.13239288]
[168.42974854 62.74962997]
[179.73870850 52.89532089]
[191.04766846 43.04101562]
[195.46408081 35.04057693]
[202.60505676 33.12426758]
[214.06297302 23.44356537]
[225.52090454 13.76286602]
[236.97882080 4.08216524]
[222.48413086 0.22162637]
[216.32183838 -13.45412636]
[223.03199768 -26.86956024]
[237.67091370 -30.14092827]
[249.45347595 -20.85807037]
[249.69839478 -5.85892534]
[261.86047363 -14.63864899]
[274.02258301 -23.41837311]
[286.18466187 -32.19809723]
[298.34677124 -40.97782135]
[310.50885010 -49.75754547]
[314.47604370 -65.30235291]
[329.16156006 -71.76107788]
[343.29992676 -64.17913818]
[346.04541016 -48.37274933]
[335.29190063 -36.46722031]
[319.28857422 -37.59545517]
[307.12649536 -28.81573105]
[294.96438599 -20.03600693]
[282.80230713 -11.25628281]
[270.64019775 -2.47655892]
[258.47811890 6.30316496]
[246.65953064 15.54009056]
[235.20159912 25.22079086]
[223.74366760 34.90148926]
[212.28575134 44.58219147]
[200.90197754 54.34997940]
[189.59301758 64.20428467]
[178.28404236 74.05859375]
[179.19680786 81.50284576]
[193.84576416 78.27667999]
[208.49472046 75.05052185]
[221.64041138 67.82621002]
[234.99253845 74.66147614]
[236.81817627 89.54996490]
[225.51307678 99.40870667]
[211.01119995 95.57436371]
[196.01676941 95.98285675]
[181.02232361 96.39134216]
[181.93508911 103.83559418]
[195.28977966 110.66582489]
[208.64448547 117.49605560]
[221.99917603 124.32629395]
[235.35386658 131.15652466]
[248.70857239 137.98675537]
[262.06326294 144.81698608]
[275.41796875 151.64721680]
[291.06414795 148.10095215]
[303.50146484 158.23468018]
[303.18908691 174.27470398]
[290.36657715 183.91645813]
[274.87036133 179.76362610]
[268.58773804 165.00192261]
[255.23303223 158.17167664]
[241.87834167 151.34144592]
[228.52363586 144.51121521]
[215.16894531 137.68098450]
[201.81423950 130.85075378]
[188.45954895 124.02052307]
[175.10485840 117.19029236]
[169.05746460 121.62639618]
[177.92965698 133.72119141]
[186.80186462 145.81597900]
[198.97723389 154.57730103]
[194.40693665 168.86408997]
[179.40708923 168.93214417]
[174.70707703 154.68818665]
[165.83486938 142.59339905]
[156.96266174 130.49859619]
[150.91526794 134.93470764]
[153.41981506 149.72413635]
[155.92434692 164.51356506]
[158.42889404 179.30299377]
[160.93342590 194.09243774]
[175.61192322 198.27627563]
[187.01579285 208.42095947]
[192.88076782 222.51225281]
[192.04237366 237.75233459]
[184.66708374 251.11524963]
[172.21923828 259.94781494]
[157.17037964 262.49627686]
[142.50846863 258.25466919]
[131.14465332 248.06515503]
[125.33519745 233.95086670]
[126.23359680 218.71420288]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[4 191]
[5 190]
[8 37]
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[17 28]
[18 27]
[19 26]
[20 25]
[40 56]
[41 55]
[42 54]
[43 53]
[44 52]
[45 51]
[61 112]
[62 111]
[63 110]
[65 108]
[66 107]
[67 106]
[69 104]
[70 103]
[71 101]
[72 100]
[73 99]
[74 98]
[75 97]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[113 149]
[114 148]
[115 147]
[117 146]
[118 145]
[119 144]
[120 143]
[126 142]
[127 141]
[128 140]
[129 139]
[130 138]
[131 137]
[160 180]
[161 179]
[162 178]
[163 177]
[164 176]
[165 175]
[166 174]
[167 173]
] def

init

% Start Annotations
1 194 0.0 1 colorpair
2 193 0.0 1 colorpair
3 192 0.0 1 colorpair
4 191 0.0 1 colorpair
5 190 0.0 1 colorpair
8 37 0.0 1 colorpair
9 36 0.0 1 colorpair
10 35 0.0 1 colorpair
11 34 0.0 1 colorpair
12 33 0.0 1 colorpair
13 32 0.0 1 colorpair
17 28 0.0 1 colorpair
18 27 0.0 1 colorpair
19 26 0.0 1 colorpair
20 25 0.0 1 colorpair
40 56 0.0 1 colorpair
41 55 0.0 1 colorpair
42 54 0.0 1 colorpair
43 53 0.0 1 colorpair
44 52 0.0 1 colorpair
45 51 0.0 1 colorpair
61 112 0.0 1 colorpair
62 111 0.0 1 colorpair
63 110 0.0 1 colorpair
65 108 0.0 1 colorpair
66 107 0.0 1 colorpair
67 106 0.0 1 colorpair
69 104 0.0 1 colorpair
70 103 0.0 1 colorpair
71 101 0.0 1 colorpair
72 100 0.0 1 colorpair
73 99 0.0 1 colorpair
74 98 0.0 1 colorpair
75 97 0.0 1 colorpair
77 95 0.0 1 colorpair
78 94 0.0 1 colorpair
79 93 0.0 1 colorpair
80 92 0.0 1 colorpair
81 91 0.0 1 colorpair
82 90 0.0 1 colorpair
113 149 0.0 1 colorpair
114 148 0.0 1 colorpair
115 147 0.0 1 colorpair
117 146 0.0 1 colorpair
118 145 0.0 1 colorpair
119 144 0.0 1 colorpair
120 143 0.0 1 colorpair
126 142 0.0 1 colorpair
127 141 0.0 1 colorpair
128 140 0.0 1 colorpair
129 139 0.0 1 colorpair
130 138 0.0 1 colorpair
131 137 0.0 1 colorpair
160 180 0.0 1 colorpair
161 179 0.0 1 colorpair
162 178 0.0 1 colorpair
163 177 0.0 1 colorpair
164 176 0.0 1 colorpair
165 175 0.0 1 colorpair
166 174 0.0 1 colorpair
167 173 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
