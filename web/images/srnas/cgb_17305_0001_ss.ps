%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUACAAUCGCGGUCGUGCCUUGGAUAUCAAUGACACUGACAAUUUCACCUUCCGCGAAGGUGUGUGUGGGAUCCAUGCUGCGGGCGGACCAAAUUGAACCAUCCAGGCGGAC\
) } def
/len { sequence length } bind def

/coor [
[33.75115585 392.60125732]
[32.54405212 407.81655884]
[24.84739685 420.99700928]
[12.18936729 429.52563477]
[-2.91677523 431.70901489]
[-17.47169495 427.11367798]
[-28.58550453 416.65203857]
[-34.05154419 402.40124512]
[-32.78453445 387.19082642]
[-25.03603363 374.04077148]
[-12.34451771 365.56207275]
[2.77010560 363.43820190]
[7.28621626 349.13418579]
[11.80232716 334.83016968]
[10.80114269 327.39984131]
[16.64789963 320.19442749]
[21.55989075 306.02148438]
[26.47187996 291.84854126]
[31.38386917 277.67559814]
[36.29586029 263.50265503]
[35.50161362 256.04736328]
[41.54640579 249.00727844]
[46.85047913 234.97636414]
[52.15455246 220.94543457]
[57.45862579 206.91450500]
[52.82309723 188.22828674]
[68.30778503 175.46888733]
[72.82389832 161.16487122]
[77.34000397 146.86085510]
[81.85611725 132.55683899]
[86.37223053 118.25283813]
[75.43596649 103.89046478]
[77.98352051 84.43741608]
[94.71044159 71.43291473]
[90.19432831 57.12890625]
[85.67821503 42.82489395]
[80.90715790 37.92190552]
[79.63243866 32.20008469]
[81.33260345 27.59894753]
[77.61840820 13.06606102]
[73.90422058 -1.46682549]
[70.50410461 -4.66840887]
[68.58617401 -8.43100739]
[68.13846588 -12.18789387]
[68.95558929 -15.44063759]
[70.68101501 -17.81943703]
[68.60259247 -32.67474365]
[66.52417755 -47.53005219]
[64.44575500 -62.38536072]
[62.36733627 -77.24066925]
[60.28891754 -92.09597778]
[58.21049881 -106.95128632]
[50.02779388 -121.79984283]
[62.03086472 -133.77325439]
[76.85913086 -125.55384064]
[73.06581116 -109.02970123]
[75.14422607 -94.17439270]
[77.22264862 -79.31909180]
[79.30106354 -64.46378326]
[81.37948608 -49.60847092]
[83.45790100 -34.75316620]
[85.53632355 -19.89785576]
[88.43711090 -5.18101454]
[92.15129852 9.35187244]
[95.86548615 23.88475990]
[99.98223114 38.30878067]
[104.49833679 52.61279297]
[109.01445007 66.91680908]
[122.27385712 73.93022156]
[136.63926697 69.61338043]
[144.08215332 64.07210541]
[151.46429443 65.38219452]
[165.94413757 61.46634674]
[180.42399597 57.55050659]
[185.52162170 52.98800278]
[191.29161072 51.95293427]
[195.81787109 53.84344482]
[210.49296570 50.73836899]
[225.16807556 47.63328934]
[239.41250610 38.43913269]
[252.19059753 49.58169174]
[245.02082825 64.94498444]
[228.27314758 62.30838776]
[213.59805298 65.41346741]
[198.92294312 68.51853943]
[184.33984375 72.03035736]
[169.85998535 75.94620514]
[155.38012695 79.86204529]
[140.95610046 83.97878265]
[126.59070587 88.29563141]
[126.20606995 106.33728790]
[115.66931152 119.31321716]
[100.67623901 122.76894379]
[96.16012573 137.07295227]
[91.64402008 151.37696838]
[87.12790680 165.68098450]
[82.61179352 179.98498535]
[88.25793457 189.48880005]
[87.67202759 200.30606079]
[81.29808044 208.79028320]
[71.48954773 212.21858215]
[66.18547821 226.24951172]
[60.88140106 240.28042603]
[55.57733154 254.31135559]
[50.46880341 268.41464233]
[45.55681610 282.58758545]
[40.64482498 296.76052856]
[35.73283386 310.93347168]
[30.82084465 325.10641479]
[26.10633850 339.34628296]
[21.59022713 353.65029907]
[17.07411766 367.95431519]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 112]
[13 111]
[14 110]
[16 109]
[17 108]
[18 107]
[19 106]
[20 105]
[22 104]
[23 103]
[24 102]
[25 101]
[27 97]
[28 96]
[29 95]
[30 94]
[31 93]
[34 68]
[35 67]
[36 66]
[39 65]
[40 64]
[41 63]
[46 62]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[69 90]
[70 89]
[72 88]
[73 87]
[74 86]
[77 85]
[78 84]
[79 83]
] def

init

% Start Annotations
12 112 0.0 1 colorpair
13 111 0.0 1 colorpair
14 110 0.0 1 colorpair
16 109 0.0 1 colorpair
17 108 0.0 1 colorpair
18 107 0.0 1 colorpair
19 106 0.0 1 colorpair
20 105 0.0 1 colorpair
22 104 0.0 1 colorpair
23 103 0.0 1 colorpair
24 102 0.0 1 colorpair
25 101 0.0 1 colorpair
27 97 0.0 1 colorpair
28 96 0.0 1 colorpair
29 95 0.0 1 colorpair
30 94 0.0 1 colorpair
31 93 0.0 1 colorpair
34 68 0.0 1 colorpair
35 67 0.0 1 colorpair
36 66 0.0 1 colorpair
39 65 0.0 1 colorpair
40 64 0.0 1 colorpair
41 63 0.0 1 colorpair
46 62 0.0 1 colorpair
47 61 0.0 1 colorpair
48 60 0.0 1 colorpair
49 59 0.0 1 colorpair
50 58 0.0 1 colorpair
51 57 0.0 1 colorpair
52 56 0.0 1 colorpair
69 90 0.0 1 colorpair
70 89 0.0 1 colorpair
72 88 0.0 1 colorpair
73 87 0.0 1 colorpair
74 86 0.0 1 colorpair
77 85 0.0 1 colorpair
78 84 0.0 1 colorpair
79 83 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
