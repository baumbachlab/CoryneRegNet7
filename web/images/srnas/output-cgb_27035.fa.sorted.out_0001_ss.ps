%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACGGUGAAACCGAAGGCUGAGAUGAAACCUUCGCGUUGGGAGAAAGCUUUGACGUAGUUGUCUAUGCCAACCCACUUGGCGUUGGUGAUAGUGGUGAACUUCGUAAAGGAGAGGAAGAAACCCACGAUGAACGGCACCAAGAAGGCAAUCAUGAAUGCCAGAAGGGUGGGCAAGACAAAGACUGGGAAGUACUUCUU\
) } def
/len { sequence length } bind def

/coor [
[-85.81522369 432.33242798]
[-78.50872040 445.43261719]
[-78.02989960 460.42495728]
[-84.48558807 473.96469116]
[-96.43552399 483.03106689]
[-111.21366882 485.60137939]
[-125.52301025 481.10220337]
[-136.17114258 470.53729248]
[-140.78245544 456.26367188]
[-138.32907104 441.46795654]
[-148.76776123 452.23983765]
[-159.20645142 463.01171875]
[-169.56021118 473.86529541]
[-179.82843018 484.79980469]
[-190.09663391 495.73434448]
[-200.36483765 506.66885376]
[-210.63304138 517.60339355]
[-220.90124512 528.53790283]
[-215.83085632 542.97918701]
[-218.06388855 558.12091064]
[-227.08723450 570.48364258]
[-240.82737732 577.22656250]
[-256.12695312 576.80017090]
[-269.47021484 569.30242920]
[-277.79098511 556.45629883]
[-279.17718506 541.21368408]
[-273.31033325 527.07727051]
[-261.53854370 517.29547119]
[-246.56690979 514.11608887]
[-231.83578491 518.26971436]
[-221.56758118 507.33520508]
[-211.29936218 496.40066528]
[-201.03115845 485.46612549]
[-190.76295471 474.53161621]
[-180.49475098 463.59707642]
[-178.20556641 456.56280518]
[-169.97834778 452.57302856]
[-159.53965759 441.80114746]
[-149.10096741 431.02926636]
[-139.63066101 419.39682007]
[-131.19941711 406.99060059]
[-122.76816559 394.58441162]
[-114.33691406 382.17819214]
[-105.90566254 369.77197266]
[-108.71699524 359.93670654]
[-105.58021545 349.96978760]
[-97.30209351 343.23992920]
[-86.46752167 342.16012573]
[-77.65074158 330.02487183]
[-68.83396149 317.88961792]
[-60.01718521 305.75436401]
[-51.20040894 293.61911011]
[-55.97121811 279.53445435]
[-51.48048401 265.17138672]
[-39.25036621 256.10070801]
[-23.84618187 255.96923828]
[-15.02940273 243.83398438]
[-17.60582924 229.20874023]
[-8.83723259 216.77627563]
[6.52053213 214.17304993]
[15.33731079 202.03778076]
[24.15408897 189.90252686]
[32.97086716 177.76727295]
[41.78764725 165.63201904]
[50.60442734 153.49676514]
[51.99393463 146.23104858]
[59.65622711 141.24160767]
[68.66252899 129.24633789]
[77.66883087 117.25106812]
[86.67514038 105.25579834]
[88.54536438 91.39961243]
[101.32958984 85.73789978]
[110.33589935 73.74263000]
[119.34220123 61.74735641]
[128.34849548 49.75208664]
[126.32084656 34.30778885]
[135.62539673 22.27117729]
[150.36167908 20.43329811]
[159.36798096 8.43802738]
[168.37428284 -3.55724263]
[177.38058472 -15.55251217]
[186.38688660 -27.54778290]
[195.39318848 -39.54305267]
[204.39949036 -51.53832245]
[213.40579224 -63.53359222]
[215.50430298 -79.21501160]
[229.33340454 -84.74718475]
[238.33972168 -96.74245453]
[247.34602356 -108.73772430]
[256.35232544 -120.73299408]
[265.35861206 -132.72825623]
[267.45712280 -148.40968323]
[281.28622437 -153.94184875]
[290.29254150 -165.93711853]
[298.72378540 -178.34332275]
[306.56127930 -191.13293457]
[314.39874268 -203.92253113]
[322.23623657 -216.71214294]
[316.46276855 -230.99404907]
[320.16271973 -245.76441956]
[331.71392822 -255.40982056]
[346.55215454 -256.39212036]
[354.38964844 -269.18173218]
[362.22711182 -281.97134399]
[370.06460571 -294.76092529]
[377.90206909 -307.55053711]
[372.12860107 -321.83245850]
[375.82855225 -336.60281372]
[387.37976074 -346.24822998]
[402.21798706 -347.23052979]
[410.05548096 -360.02011108]
[401.74725342 -372.82388306]
[399.82565308 -387.96554565]
[404.67224121 -402.43875122]
[415.32467651 -413.36981201]
[429.66796875 -418.58834839]
[444.85418701 -417.05825806]
[457.86813354 -409.08331299]
[466.12588501 -396.24691772]
[467.98782349 -381.09780884]
[463.08428955 -366.64379883]
[452.38888550 -355.75479126]
[438.02517700 -350.59274292]
[422.84509277 -352.18264771]
[415.00759888 -339.39303589]
[420.86877441 -325.72613525]
[417.51879883 -311.05502319]
[406.03805542 -301.05270386]
[390.69168091 -299.71304321]
[382.85418701 -286.92346191]
[375.01672363 -274.13385010]
[367.17922974 -261.34423828]
[359.34176636 -248.55464172]
[365.20294189 -234.88772583]
[361.85296631 -220.21661377]
[350.37222290 -210.21430969]
[335.02581787 -208.87466431]
[327.18835449 -196.08505249]
[319.35086060 -183.29545593]
[311.51339722 -170.50585938]
[326.32327271 -172.88652039]
[338.56347656 -164.21604919]
[341.23092651 -149.45512390]
[332.79946899 -137.04905701]
[318.09304810 -134.09584045]
[305.52581787 -142.28512573]
[302.28781128 -156.93081665]
[293.28149414 -144.93554688]
[291.82720947 -130.11210632]
[277.35388184 -123.72196198]
[268.34759521 -111.72668457]
[259.34127808 -99.73141479]
[250.33499146 -87.73614502]
[241.32867432 -75.74087524]
[239.87437439 -60.91744232]
[225.40106201 -54.52729034]
[216.39476013 -42.53202057]
[207.38845825 -30.53674889]
[198.38215637 -18.54147911]
[189.37585449 -6.54620886]
[180.36955261 5.44906092]
[171.36325073 17.44433022]
[162.35694885 29.43959999]
[164.70332336 44.10350418]
[155.74053955 56.39671326]
[140.34378052 58.75839233]
[131.33746338 70.75366211]
[122.33116913 82.74893188]
[113.32485962 94.74420166]
[111.45463562 108.60038757]
[98.67041016 114.26210022]
[89.66410065 126.25737000]
[80.65779877 138.25263977]
[71.65149689 150.24790955]
[62.73968124 162.31355286]
[53.92290115 174.44880676]
[45.10612488 186.58406067]
[36.28934479 198.71931458]
[27.47256660 210.85456848]
[18.65578651 222.98982239]
[20.92577934 238.40036011]
[11.81144047 250.58164978]
[-2.89414811 252.65075684]
[-11.71092701 264.78601074]
[-7.07579756 279.47689819]
[-11.92323017 293.91143799]
[-24.19559288 302.62078857]
[-39.06515121 302.43588257]
[-47.88193130 314.57113647]
[-56.69871140 326.70639038]
[-65.51548767 338.84164429]
[-74.33226776 350.97689819]
[-75.52307892 371.09426880]
[-93.49945831 378.20324707]
[-101.93070984 390.60943604]
[-110.36196136 403.01565552]
[-118.79321289 415.42184448]
[-127.22445679 427.82806396]
[-113.23136902 422.42495728]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 39]
[11 38]
[12 37]
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[40 198]
[41 197]
[42 196]
[43 195]
[44 194]
[48 192]
[49 191]
[50 190]
[51 189]
[52 188]
[56 184]
[57 183]
[60 180]
[61 179]
[62 178]
[63 177]
[64 176]
[65 175]
[67 174]
[68 173]
[69 172]
[70 171]
[72 169]
[73 168]
[74 167]
[75 166]
[78 163]
[79 162]
[80 161]
[81 160]
[82 159]
[83 158]
[84 157]
[85 156]
[87 154]
[88 153]
[89 152]
[90 151]
[91 150]
[93 148]
[94 147]
[95 140]
[96 139]
[97 138]
[98 137]
[102 133]
[103 132]
[104 131]
[105 130]
[106 129]
[110 125]
[111 124]
] def

init

% Start Annotations
10 39 0.0 1 colorpair
11 38 0.0 1 colorpair
12 37 0.0 1 colorpair
13 35 0.0 1 colorpair
14 34 0.0 1 colorpair
15 33 0.0 1 colorpair
16 32 0.0 1 colorpair
17 31 0.0 1 colorpair
18 30 0.0 1 colorpair
40 198 0.0 1 colorpair
41 197 0.0 1 colorpair
42 196 0.0 1 colorpair
43 195 0.0 1 colorpair
44 194 0.0 1 colorpair
48 192 0.0 1 colorpair
49 191 0.0 1 colorpair
50 190 0.0 1 colorpair
51 189 0.0 1 colorpair
52 188 0.0 1 colorpair
56 184 0.0 1 colorpair
57 183 0.0 1 colorpair
60 180 0.0 1 colorpair
61 179 0.0 1 colorpair
62 178 0.0 1 colorpair
63 177 0.0 1 colorpair
64 176 0.0 1 colorpair
65 175 0.0 1 colorpair
67 174 0.0 1 colorpair
68 173 0.0 1 colorpair
69 172 0.0 1 colorpair
70 171 0.0 1 colorpair
72 169 0.0 1 colorpair
73 168 0.0 1 colorpair
74 167 0.0 1 colorpair
75 166 0.0 1 colorpair
78 163 0.0 1 colorpair
79 162 0.0 1 colorpair
80 161 0.0 1 colorpair
81 160 0.0 1 colorpair
82 159 0.0 1 colorpair
83 158 0.0 1 colorpair
84 157 0.0 1 colorpair
85 156 0.0 1 colorpair
87 154 0.0 1 colorpair
88 153 0.0 1 colorpair
89 152 0.0 1 colorpair
90 151 0.0 1 colorpair
91 150 0.0 1 colorpair
93 148 0.0 1 colorpair
94 147 0.0 1 colorpair
95 140 0.0 1 colorpair
96 139 0.0 1 colorpair
97 138 0.0 1 colorpair
98 137 0.0 1 colorpair
102 133 0.0 1 colorpair
103 132 0.0 1 colorpair
104 131 0.0 1 colorpair
105 130 0.0 1 colorpair
106 129 0.0 1 colorpair
110 125 0.0 1 colorpair
111 124 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
