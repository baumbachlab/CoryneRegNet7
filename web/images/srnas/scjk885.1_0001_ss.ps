%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__AAGGAGUGUGCGCAGGCCCUUACCUGCGUGGACGACG_G_ACGCUUGAUGUACUUCCCCAAUGUCAAACCC_CACCCACGCAGGUGAGGCCCUGUACGCACUCCCUUACCUU_\
) } def
/len { sequence length } bind def

/coor [
[95.84188080 352.34982300]
[93.80956268 337.28536987]
[97.70170593 322.59115601]
[106.92478180 310.50796509]
[120.07234192 302.87841797]
[118.04734039 288.01571655]
[116.02233887 273.15304565]
[113.99733734 258.29034424]
[111.97233582 243.42767334]
[109.94733429 228.56498718]
[107.92234039 213.70230103]
[105.89733887 198.83961487]
[96.51268768 187.27339172]
[102.31613159 172.55502319]
[100.29113007 157.69233704]
[98.26612854 142.82965088]
[96.24112701 127.96696472]
[94.21613312 113.10428619]
[85.80718231 101.93373108]
[90.92118835 88.92071533]
[88.89618683 74.05802917]
[86.87118530 59.19534683]
[84.84618378 44.33266449]
[82.82118225 29.46998024]
[80.79618073 14.60729694]
[78.77118683 -0.25538719]
[76.74618530 -15.11807156]
[74.72118378 -29.98075485]
[72.69618225 -44.84343719]
[70.67118073 -59.70612335]
[68.64618683 -74.56880951]
[66.62118530 -89.43148804]
[64.59618378 -104.29417419]
[54.55149460 -108.52907562]
[47.28007889 -116.54072571]
[44.08428192 -126.79206848]
[45.49329376 -137.35493469]
[51.17686844 -146.27267456]
[60.01940155 -151.92260742]
[59.20731735 -166.90060425]
[58.39523697 -181.87860107]
[49.77037430 -188.77751160]
[46.50616455 -199.09689331]
[49.47107315 -209.27595520]
[57.42719269 -215.94392395]
[57.42719269 -230.94392395]
[57.42719269 -245.94392395]
[57.42719269 -260.94390869]
[57.42719269 -275.94390869]
[57.42719269 -290.94390869]
[57.42719269 -305.94390869]
[57.42719269 -320.94390869]
[57.42719269 -335.94390869]
[44.39356613 -344.19790649]
[37.91214371 -358.19769287]
[40.05112457 -373.47607422]
[50.12796783 -385.15771484]
[64.92719269 -389.51504517]
[79.72641754 -385.15771484]
[89.80326080 -373.47607422]
[91.94224548 -358.19769287]
[85.46082306 -344.19790649]
[72.42719269 -335.94390869]
[72.42719269 -320.94390869]
[72.42719269 -305.94390869]
[72.42719269 -290.94390869]
[72.42719269 -275.94390869]
[72.42719269 -260.94390869]
[72.42719269 -245.94392395]
[72.42719269 -230.94392395]
[72.42719269 -215.94392395]
[83.36664581 -200.09541321]
[73.37323761 -182.69068909]
[74.18531799 -167.71269226]
[74.99740601 -152.73468018]
[90.41205597 -141.01254272]
[92.47662354 -121.45614624]
[79.45886993 -106.31917572]
[81.48386383 -91.45648956]
[83.50886536 -76.59380341]
[85.53386688 -61.73112488]
[87.55886841 -46.86843872]
[89.58386993 -32.00575638]
[91.60887146 -17.14307213]
[93.63386536 -2.28038740]
[95.65886688 12.58229637]
[97.68386841 27.44498062]
[99.70886993 42.30766296]
[101.73387146 57.17034912]
[103.75887299 72.03303528]
[105.78386688 86.89571381]
[114.19281769 98.06626892]
[109.07881165 111.07928467]
[111.10381317 125.94197083]
[113.12881470 140.80465698]
[115.15381622 155.66732788]
[117.17881775 170.53001404]
[126.70830536 183.15931702]
[120.76001740 196.81462097]
[122.78501892 211.67730713]
[124.81002045 226.53999329]
[126.83502197 241.40267944]
[128.86001587 256.26535034]
[130.88502502 271.12805176]
[132.91001892 285.99072266]
[134.93502808 300.85339355]
[149.64447021 304.68753052]
[161.76396179 313.86285400]
[169.44535828 326.98019409]
[171.51728821 342.03924561]
[167.66381836 356.74365234]
[158.47256470 368.85107422]
[145.34512329 376.51519775]
[130.28335571 378.56732178]
[115.58403778 374.69451904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 106]
[6 105]
[7 104]
[8 103]
[9 102]
[10 101]
[11 100]
[12 99]
[14 97]
[15 96]
[16 95]
[17 94]
[18 93]
[20 91]
[21 90]
[22 89]
[23 88]
[24 87]
[25 86]
[26 85]
[27 84]
[28 83]
[29 82]
[30 81]
[31 80]
[32 79]
[33 78]
[39 75]
[40 74]
[41 73]
[45 71]
[46 70]
[47 69]
[48 68]
[49 67]
[50 66]
[51 65]
[52 64]
[53 63]
] def

init

% Start Annotations
5 106 0.16 1 colorpair
6 105 0.0 1 colorpair
7 104 0.16 1 colorpair
8 103 0.16 1 colorpair
9 102 0.0 1 colorpair
10 101 0.0 1 colorpair
11 100 0.16 1 colorpair
12 99 0.0 1 colorpair
14 97 0.0 1 colorpair
15 96 0.0 1 colorpair
16 95 0.0 0.6 colorpair
17 94 0.0 1 colorpair
18 93 0.0 1 colorpair
20 91 0.0 1 colorpair
21 90 0.0 1 colorpair
22 89 0.0 1 colorpair
23 88 0.16 1 colorpair
24 87 0.0 1 colorpair
25 86 0.16 1 colorpair
26 85 0.0 1 colorpair
27 84 0.0 1 colorpair
28 83 0.0 1 colorpair
29 82 0.0 1 colorpair
30 81 0.0 1 colorpair
31 80 0.16 1 colorpair
32 79 0.0 1 colorpair
33 78 0.0 1 colorpair
39 75 0.0 0.6 colorpair
40 74 0.16 0.6 colorpair
41 73 0.0 0.6 colorpair
45 71 0.0 0.6 colorpair
46 70 0.16 0.6 colorpair
47 69 0.0 1 colorpair
48 68 0.0 1 colorpair
49 67 0.0 1 colorpair
50 66 0.0 1 colorpair
51 65 0.32 1 colorpair
52 64 0.16 1 colorpair
53 63 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 cmark
106 cmark
7 cmark
104 cmark
8 cmark
103 cmark
100 cmark
16 95 1 gmark
23 cmark
25 cmark
31 cmark
80 cmark
39 75 1 gmark
40 74 1 gmark
40 cmark
74 cmark
41 73 1 gmark
45 71 1 gmark
46 70 1 gmark
46 cmark
70 cmark
51 cmark
65 cmark
64 cmark

% End Annotations
showpage
end
%%EOF
