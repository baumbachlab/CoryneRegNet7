%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAAAUAGACGCUUAAUCGCAAGCAUAGUUUAGAGAAAUUCUUUAAAUCGUGCGGCGAGCCGGGGAACCAAACGUGUUCCUGGGGUGAGUUUCCCACAAGGGUUCUCUCGCAGAGAGAGAAGGAGUGGGGAUAGGGGCCUUCCGCUCCGAACCCGACAGCUAACUCGGUCAGCAAACAGGAAGAAUUU\
) } def
/len { sequence length } bind def

/coor [
[72.15454865 317.32629395]
[60.56122208 307.71334839]
[51.30579758 295.83264160]
[44.82117081 282.23986816]
[41.41063309 267.57077026]
[41.23371124 252.51145935]
[44.29867172 237.76629639]
[50.46216583 224.02491760]
[59.43591309 211.93003845]
[70.80019379 202.04737854]
[84.02348328 194.83914185]
[98.48730469 190.64248657]
[97.49594879 175.67527771]
[96.50459290 160.70806885]
[80.26575470 157.51736450]
[65.48860168 150.06646729]
[53.26763153 138.90724182]
[44.50803757 124.86624908]
[30.16749954 129.26499939]
[15.82696342 133.66374207]
[1.48642659 138.06250000]
[-5.24496460 149.07859802]
[-17.29351807 152.44073486]
[-28.04356766 146.86976624]
[-42.45487213 151.03080750]
[-56.86617661 155.19184875]
[-71.27748108 159.35289001]
[-82.38970184 170.61474609]
[-96.76382446 166.71168518]
[-111.17512512 170.87272644]
[-125.58643341 175.03376770]
[-139.99774170 179.19482422]
[-154.40904236 183.35586548]
[-168.82034302 187.51690674]
[-183.23165894 191.67794800]
[-197.64295959 195.83898926]
[-212.05426025 200.00003052]
[-225.59449768 210.20289612]
[-239.14694214 200.01626587]
[-233.11007690 184.17350769]
[-216.21530151 185.58872986]
[-201.80400085 181.42768860]
[-187.39270020 177.26664734]
[-172.98138428 173.10560608]
[-158.57008362 168.94454956]
[-144.15878296 164.78350830]
[-129.74748230 160.62246704]
[-115.33617401 156.46142578]
[-100.92486572 152.30038452]
[-90.84344482 141.33616638]
[-75.43852234 144.94158936]
[-61.02722168 140.78054810]
[-46.61591721 136.61950684]
[-32.20460892 132.45846558]
[-20.74780464 119.17538452]
[-2.91232395 123.72196198]
[11.42821312 119.32321167]
[25.76874924 114.92446136]
[40.10928726 110.52571106]
[41.44043732 83.61508179]
[54.26837540 59.92124176]
[44.29300690 48.71892166]
[29.33717155 43.55815125]
[26.65160561 28.90765572]
[16.67623711 17.70533371]
[6.70086861 6.50301123]
[-3.27449989 -4.69931078]
[-13.24986839 -15.90163326]
[-23.22523689 -27.10395432]
[-33.29287720 -38.22342682]
[-49.09730530 -42.59973526]
[-52.94703293 -58.54061508]
[-40.88178635 -69.64745331]
[-25.31326103 -64.49449158]
[-22.25701904 -48.38264847]
[-15.40135860 -45.58581924]
[-12.02291489 -37.07932281]
[-2.04754615 -25.87700081]
[7.92782259 -14.67467976]
[17.90319061 -3.47235727]
[27.87855911 7.72996473]
[37.85392761 18.93228722]
[52.09626007 23.29179192]
[55.49533081 38.74355316]
[65.47069550 49.94587326]
[73.27910614 45.37690735]
[81.67897797 42.01700211]
[90.48436737 39.94052124]
[99.50038910 39.19343185]
[108.52746582 39.79227066]
[117.36578369 41.72378159]
[125.81972504 44.94520950]
[133.81520081 32.25378036]
[141.81068420 19.56235313]
[149.80615234 6.87092447]
[157.80163574 -5.82050419]
[165.79710388 -18.51193237]
[173.79258728 -31.20336151]
[165.77755737 -44.14633942]
[164.18339539 -59.22432327]
[169.27305603 -73.44106293]
[179.98658752 -83.99479675]
[194.16142273 -88.83040619]
[208.96879578 -87.03948212]
[216.96426392 -99.73091125]
[224.95974731 -112.42234039]
[232.95521545 -125.11376953]
[240.95069885 -137.80519104]
[248.94616699 -150.49662781]
[256.94165039 -163.18804932]
[260.26861572 -179.81236267]
[277.16424561 -181.21746826]
[283.19161987 -165.37109375]
[269.63308716 -155.19258118]
[261.63760376 -142.50114441]
[253.64212036 -129.80972290]
[245.64665222 -117.11829376]
[237.65116882 -104.42686462]
[229.65570068 -91.73543549]
[221.66021729 -79.04400635]
[229.66876221 -66.46113586]
[231.42713928 -51.58774948]
[226.53337097 -37.36761856]
[215.90748596 -26.63865662]
[201.61898804 -21.56658173]
[186.48400879 -23.20788574]
[178.48854065 -10.51645660]
[170.49305725 2.17497182]
[162.49758911 14.86640072]
[154.50210571 27.55782890]
[146.50663757 40.24925995]
[138.51115417 52.94068527]
[148.89372253 63.84627533]
[156.27828979 76.96868134]
[160.21208191 91.50329590]
[175.21002197 91.25528717]
[190.20797729 91.00727844]
[205.20593262 90.75926971]
[220.20387268 90.51126099]
[232.34741211 80.02727509]
[248.08830261 83.12631989]
[255.35147095 97.43107605]
[248.56523132 111.96815491]
[232.93542480 115.58595276]
[220.45188904 105.50920868]
[205.45393372 105.75721741]
[190.45597839 106.00522614]
[175.45803833 106.25323486]
[160.46008301 106.50124359]
[159.75271606 111.28279877]
[158.66780090 115.99306488]
[157.21218872 120.60227966]
[155.39508057 125.08131409]
[153.22798157 129.40188599]
[165.36323547 138.21865845]
[177.49848938 147.03543091]
[189.63374329 155.85221863]
[204.34918213 150.92927551]
[219.13769531 155.62815857]
[228.31280518 168.14204407]
[228.34646606 183.65908813]
[219.22575378 196.21266174]
[204.45777893 200.97567749]
[189.72109985 196.11663818]
[180.68229675 183.50396729]
[180.81697083 167.98747253]
[168.68170166 159.17068481]
[156.54644775 150.35391235]
[144.41119385 141.53713989]
[134.79277039 149.87135315]
[123.65026855 156.02101135]
[111.47179413 159.71672058]
[112.46315002 174.68391418]
[113.45451355 189.65112305]
[128.34548950 191.90345764]
[142.40396118 197.30467224]
[154.97242737 205.60214233]
[165.46299744 216.40779114]
[173.38502502 229.21620178]
[178.36798096 243.42831421]
[180.17880249 258.37939453]
[178.73280334 273.37017822]
[174.09761047 287.69949341]
[166.49000549 300.69711304]
[156.26583862 311.75515747]
[143.90327454 320.35641479]
[129.98057556 326.09854126]
[115.14890289 328.71304321]
[100.10196686 328.07757568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 174]
[13 173]
[14 172]
[18 59]
[19 58]
[20 57]
[21 56]
[24 54]
[25 53]
[26 52]
[27 51]
[29 49]
[30 48]
[31 47]
[32 46]
[33 45]
[34 44]
[35 43]
[36 42]
[37 41]
[61 85]
[62 84]
[64 82]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[70 75]
[92 132]
[93 131]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
[104 120]
[105 119]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[135 149]
[136 148]
[137 147]
[138 146]
[139 145]
[154 169]
[155 168]
[156 167]
[157 166]
] def

init

% Start Annotations
12 174 0.0 1 colorpair
13 173 0.0 1 colorpair
14 172 0.0 1 colorpair
18 59 0.0 1 colorpair
19 58 0.0 1 colorpair
20 57 0.0 1 colorpair
21 56 0.0 1 colorpair
24 54 0.0 1 colorpair
25 53 0.0 1 colorpair
26 52 0.0 1 colorpair
27 51 0.0 1 colorpair
29 49 0.16 1 colorpair
30 48 0.16 1 colorpair
31 47 0.16 1 colorpair
32 46 0.0 1 colorpair
33 45 0.0 1 colorpair
34 44 0.0 1 colorpair
35 43 0.16 1 colorpair
36 42 0.0 1 colorpair
37 41 0.0 1 colorpair
61 85 0.0 1 colorpair
62 84 0.0 1 colorpair
64 82 0.0 1 colorpair
65 81 0.0 1 colorpair
66 80 0.0 1 colorpair
67 79 0.0 1 colorpair
68 78 0.0 1 colorpair
69 77 0.0 1 colorpair
70 75 0.0 1 colorpair
92 132 0.0 1 colorpair
93 131 0.16 1 colorpair
94 130 0.0 1 colorpair
95 129 0.0 1 colorpair
96 128 0.0 1 colorpair
97 127 0.0 1 colorpair
98 126 0.0 1 colorpair
104 120 0.0 1 colorpair
105 119 0.16 1 colorpair
106 118 0.0 1 colorpair
107 117 0.0 1 colorpair
108 116 0.0 1 colorpair
109 115 0.0 1 colorpair
110 114 0.0 0.6 colorpair
135 149 0.0 1 colorpair
136 148 0.0 1 colorpair
137 147 0.16 1 colorpair
138 146 0.0 1 colorpair
139 145 0.0 1 colorpair
154 169 0.0 1 colorpair
155 168 0.0 1 colorpair
156 167 0.0 1 colorpair
157 166 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
29 cmark
49 cmark
30 cmark
48 cmark
47 cmark
35 cmark
131 cmark
105 cmark
119 cmark
110 114 1 gmark
137 cmark

% End Annotations
showpage
end
%%EOF
