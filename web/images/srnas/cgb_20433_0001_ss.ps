%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAAAUAGCGAUAAAAGUCCUCUGCCGAUUCAACGAAUUCAGACGAAGAAGUCAUGUUUCUACUCCCUACAGUAAGCAUUAAACUAUCAUAAACCCUAAAUUUAAAUUUAGACUC\
) } def
/len { sequence length } bind def

/coor [
[107.94724274 202.51823425]
[97.37719727 213.16127014]
[84.40071869 220.68528748]
[69.91284180 224.57135010]
[54.91285324 224.55139160]
[40.43536758 220.62680054]
[27.47895241 213.06828308]
[16.93726349 202.39715576]
[9.53740692 189.34947205]
[5.78977776 174.82516479]
[5.95286608 159.82606506]
[10.01542282 145.38668823]
[17.69723701 132.50297546]
[28.46846390 122.06359863]
[41.58616638 114.78858185]
[56.14556503 111.17971802]
[71.14273071 111.48596954]
[85.29649353 106.51898193]
[70.49410248 104.09224701]
[55.62396622 109.49500275]
[44.31611252 99.80058289]
[29.51371574 97.37385559]
[14.71131802 94.94712830]
[-0.09108023 92.52039337]
[-6.60744286 94.56072235]
[-12.28014278 93.12309265]
[-15.62016201 89.54062653]
[-30.26947021 86.31607056]
[-44.91877747 83.09151459]
[-59.56808853 79.86695862]
[-74.21739197 76.64240265]
[-90.98600006 79.14243317]
[-98.03034973 63.72122955]
[-85.16188049 52.68316650]
[-70.99283600 61.99309158]
[-56.34352875 65.21765137]
[-41.69422150 68.44220734]
[-27.04491425 71.66676331]
[-12.39560509 74.89131927]
[2.33564973 77.71799469]
[17.13804817 80.14472961]
[31.94044495 82.57145691]
[46.74284363 84.99819183]
[60.55420685 79.42185974]
[72.92082977 89.28984833]
[87.72322845 91.71658325]
[92.17208099 83.44281006]
[102.04719543 78.27741241]
[109.78050232 65.42455292]
[117.33906555 52.46815872]
[124.72148895 39.41060257]
[132.10391235 26.35304451]
[130.88421631 6.32043791]
[147.72624207 -3.01727033]
[154.39093018 -16.45535469]
[161.05560303 -29.89343834]
[167.72027588 -43.33152008]
[174.38494873 -56.76960754]
[174.34719849 -63.59781647]
[177.38656616 -68.59867096]
[181.79159546 -70.74003601]
[189.17402649 -83.79759216]
[196.55645752 -96.85514832]
[203.93887329 -109.91270447]
[199.46981812 -125.07196045]
[207.10218811 -138.91113281]
[222.30784607 -143.21966553]
[236.06553650 -135.44140625]
[240.21307373 -120.19104004]
[232.28979492 -106.51634979]
[216.99642944 -102.53028107]
[209.61401367 -89.47272491]
[202.23158264 -76.41516876]
[194.84916687 -63.35761261]
[187.82302856 -50.10493088]
[181.15835571 -36.66684723]
[174.49368286 -23.22876167]
[167.82901001 -9.79067898]
[161.16433716 3.64740539]
[165.32934570 13.15604496]
[163.46284485 23.59253311]
[155.95350647 31.38705063]
[145.16146851 33.73546982]
[137.77903748 46.79302597]
[130.39662170 59.85058212]
[129.83648682 67.32112122]
[122.63336182 73.15785980]
[114.90005493 86.01071930]
[125.32305145 75.22364044]
[140.16819763 73.07388306]
[153.22305298 80.46109009]
[159.02436829 94.29383850]
[155.14437866 108.78334045]
[143.20680237 117.86597443]
[128.20732117 117.74081421]
[116.42228699 108.45916748]
[125.81993866 120.15036774]
[135.21759033 131.84156799]
[144.61523438 143.53277588]
[154.01289368 155.22396851]
[163.41053772 166.91517639]
[178.88655090 172.33967590]
[181.66049194 188.50250244]
[168.87878418 198.77673340]
[153.69013977 192.59310913]
[151.71934509 176.31282043]
[142.32168579 164.62162781]
[132.92404175 152.93041992]
[123.52639008 141.23921204]
[114.12873840 129.54801941]
[104.73108673 117.85681915]
[107.37324524 132.62228394]
[115.02075195 145.52638245]
[119.04487610 159.97651672]
[119.16805267 174.97601318]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[18 46]
[19 45]
[21 43]
[22 42]
[23 41]
[24 40]
[27 39]
[28 38]
[29 37]
[30 36]
[31 35]
[48 88]
[49 87]
[50 85]
[51 84]
[52 83]
[54 79]
[55 78]
[56 77]
[57 76]
[58 75]
[61 74]
[62 73]
[63 72]
[64 71]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
] def

init

% Start Annotations
18 46 0.0 1 colorpair
19 45 0.0 1 colorpair
21 43 0.0 1 colorpair
22 42 0.0 1 colorpair
23 41 0.0 1 colorpair
24 40 0.0 1 colorpair
27 39 0.0 1 colorpair
28 38 0.0 1 colorpair
29 37 0.0 1 colorpair
30 36 0.0 1 colorpair
31 35 0.0 1 colorpair
48 88 0.0 1 colorpair
49 87 0.0 1 colorpair
50 85 0.0 1 colorpair
51 84 0.0 1 colorpair
52 83 0.0 1 colorpair
54 79 0.0 1 colorpair
55 78 0.0 1 colorpair
56 77 0.0 1 colorpair
57 76 0.0 1 colorpair
58 75 0.0 1 colorpair
61 74 0.0 1 colorpair
62 73 0.0 1 colorpair
63 72 0.0 1 colorpair
64 71 0.0 1 colorpair
96 111 0.0 1 colorpair
97 110 0.0 1 colorpair
98 109 0.0 1 colorpair
99 108 0.0 1 colorpair
100 107 0.0 1 colorpair
101 106 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
