%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUCCGAAAGUGGGGCGGAACGGAUUGCGAGCUGACAUAGAAGACACCUUGGAUGGUCUAGUCGGGUUUGCGGAAUGCAGUGCUGGCUUGUGUUGGAACUGAACUUUAGAUCUUUUAGAAGUCUAGCGUGAGU\
) } def
/len { sequence length } bind def

/coor [
[107.89032745 155.90571594]
[95.24303436 156.25901794]
[82.83463287 153.78713989]
[76.41637421 167.34463501]
[69.99811554 180.90214539]
[63.57986069 194.45965576]
[69.13410187 209.25579834]
[62.52310181 223.61094666]
[47.66905594 229.00843811]
[33.38460922 222.24604797]
[28.14446259 207.33576965]
[35.05750656 193.12361145]
[50.02235413 188.04139709]
[56.44061279 174.48388672]
[62.85886765 160.92637634]
[69.27712250 147.36888123]
[62.66455460 142.35292053]
[56.85879517 136.42172241]
[51.98531342 129.70346069]
[48.14942551 122.34330750]
[45.43401718 114.50032043]
[43.89777756 106.34397888]
[43.57389832 98.05055237]
[44.46937561 89.79924774]
[46.56486511 81.76837921]
[49.81508255 74.13149261]
[54.14978790 67.05362701]
[43.23918533 56.76000214]
[32.32857895 46.46637726]
[21.41797447 36.17275238]
[10.50737000 25.87912750]
[-0.40323490 15.58550262]
[-11.31383991 5.29187822]
[-22.22444344 -5.00174665]
[-33.25407791 -15.16772652]
[-44.40125275 -25.20468521]
[-55.54842377 -35.24164581]
[-64.10321808 -38.70238876]
[-66.83472443 -45.64419174]
[-77.74533081 -55.93781662]
[-88.65593719 -66.23144531]
[-99.56653595 -76.52506256]
[-102.26701355 -61.77015305]
[-115.37225342 -54.47270203]
[-129.33740234 -59.94760895]
[-133.99131775 -74.20737457]
[-125.94446564 -86.86628723]
[-111.05720520 -88.70446014]
[-120.69902039 -100.19512939]
[-136.46302795 -101.32270813]
[-146.74926758 -113.32141876]
[-145.45507812 -129.07263184]
[-133.34829712 -139.23143005]
[-117.61164856 -137.77078247]
[-107.58141327 -125.55726624]
[-109.20835114 -109.83694458]
[-99.56653595 -98.34627533]
[-89.27291107 -87.43566895]
[-78.36231232 -77.14204407]
[-67.45170593 -66.84841919]
[-56.54109955 -56.55479813]
[-45.51146317 -46.38881683]
[-34.36429214 -36.35185623]
[-23.21712112 -26.31489944]
[-16.07609940 -24.15722084]
[-11.93081951 -15.91235161]
[-1.02021492 -5.61872673]
[9.89038944 4.67489815]
[20.80099487 14.96852303]
[31.71159935 25.26214790]
[42.62220383 35.55577087]
[53.53280640 45.84939575]
[64.44341278 56.14302063]
[83.36734009 46.04576111]
[104.69179535 43.73551178]
[125.33909607 49.54570770]
[142.32929993 62.63778305]
[153.21028137 81.12220764]
[156.41162109 102.33119202]
[171.18373108 104.93591309]
[180.27252197 103.33744049]
[186.26757812 107.77694702]
[200.97508240 110.72469330]
[215.68258667 113.67244720]
[230.39009094 116.62019348]
[245.09761047 119.56793976]
[259.80511475 122.51569366]
[274.54592896 125.29211426]
[289.31802368 127.89683533]
[304.09014893 130.50155640]
[319.02423096 125.27818298]
[330.21459961 135.10800171]
[344.98669434 137.71272278]
[357.84249878 128.91693115]
[372.78643799 131.76892090]
[381.09265137 144.07917786]
[395.86477661 146.68389893]
[410.63687134 149.28862000]
[425.57095337 144.06524658]
[436.76132202 153.89506531]
[451.53341675 156.49978638]
[466.30554199 159.10450745]
[481.07766724 161.70922852]
[497.72610474 158.50518799]
[505.41366577 173.61602783]
[493.02151489 185.18626404]
[478.47293091 176.48135376]
[463.70083618 173.87663269]
[448.92871094 171.27191162]
[434.15658569 168.66719055]
[420.27911377 174.07687378]
[408.03216553 164.06074524]
[393.26004028 161.45602417]
[378.48791504 158.85130310]
[366.47229004 167.57826233]
[351.45416260 165.14712524]
[342.38198853 152.48484802]
[327.60986328 149.88012695]
[313.73239136 155.28981018]
[301.48544312 145.27368164]
[286.71331787 142.66896057]
[271.94119263 140.06423950]
[264.74188232 142.01858521]
[256.85736084 137.22320557]
[242.14985657 134.27545166]
[227.44235229 131.32769775]
[212.73483276 128.37995911]
[198.02732849 125.43220520]
[183.31982422 122.48445129]
[168.57901001 119.70803070]
[153.80690002 117.10330963]
[148.64727783 128.65567017]
[141.04472351 138.76901245]
[131.38098145 146.93547058]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 16]
[4 15]
[5 14]
[6 13]
[27 73]
[28 72]
[29 71]
[30 70]
[31 69]
[32 68]
[33 67]
[34 66]
[35 64]
[36 63]
[37 62]
[39 61]
[40 60]
[41 59]
[42 58]
[48 57]
[49 56]
[79 131]
[80 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 125]
[87 124]
[88 122]
[89 121]
[90 120]
[92 118]
[93 117]
[96 114]
[97 113]
[98 112]
[100 110]
[101 109]
[102 108]
[103 107]
] def

init

% Start Annotations
3 16 0.0 1 colorpair
4 15 0.0 1 colorpair
5 14 0.0 1 colorpair
6 13 0.0 1 colorpair
27 73 0.0 1 colorpair
28 72 0.0 1 colorpair
29 71 0.0 1 colorpair
30 70 0.0 1 colorpair
31 69 0.0 1 colorpair
32 68 0.0 1 colorpair
33 67 0.0 1 colorpair
34 66 0.0 1 colorpair
35 64 0.0 1 colorpair
36 63 0.0 1 colorpair
37 62 0.0 1 colorpair
39 61 0.0 1 colorpair
40 60 0.0 1 colorpair
41 59 0.0 1 colorpair
42 58 0.0 1 colorpair
48 57 0.0 1 colorpair
49 56 0.0 1 colorpair
79 131 0.0 1 colorpair
80 130 0.0 1 colorpair
82 129 0.0 1 colorpair
83 128 0.0 1 colorpair
84 127 0.0 1 colorpair
85 126 0.0 1 colorpair
86 125 0.0 1 colorpair
87 124 0.0 1 colorpair
88 122 0.0 1 colorpair
89 121 0.0 1 colorpair
90 120 0.0 1 colorpair
92 118 0.0 1 colorpair
93 117 0.0 1 colorpair
96 114 0.0 1 colorpair
97 113 0.0 1 colorpair
98 112 0.0 1 colorpair
100 110 0.0 1 colorpair
101 109 0.0 1 colorpair
102 108 0.0 1 colorpair
103 107 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
