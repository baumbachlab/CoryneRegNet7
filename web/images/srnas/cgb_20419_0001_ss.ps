%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCAAAGUGCGUGACUGUACCAACAUCCCUCUACACCACUUUCUGAAUUAGAAAUCCUCUAUUCUCCCUCAUACUAUAGGGACAGGGUGUCUCAAUAUCAUUGUGGUAUCGAACUGAC\
) } def
/len { sequence length } bind def

/coor [
[-3.83103633 365.86486816]
[-17.15944862 369.45422363]
[-30.88903618 370.85113525]
[-44.66165924 370.02008057]
[-58.11820602 366.98364258]
[-70.90794373 361.82183838]
[-82.69767761 354.67013550]
[-92.50698090 366.01815796]
[-102.31627655 377.36618042]
[-112.12557983 388.71420288]
[-110.72937012 404.45669556]
[-120.93765259 416.52178955]
[-136.69403076 417.75149536]
[-148.65052795 407.41622925]
[-149.71356201 391.64770508]
[-139.25245667 379.80114746]
[-123.47360229 378.90490723]
[-113.66429901 367.55688477]
[-103.85500336 356.20886230]
[-94.04570007 344.86083984]
[-104.21904755 332.17785645]
[-111.80598450 317.79284668]
[-116.53005219 302.22659302]
[-118.21846008 286.04290771]
[-116.80842590 269.82843018]
[-112.34949493 254.17112732]
[-105.00180054 239.63906860]
[-95.03032684 226.75982666]
[-82.79531860 216.00129700]
[-68.73931885 207.75473022]
[-53.37110901 202.32043457]
[-37.24733734 199.89695740]
[-20.95232201 200.57369995]
[-5.07690191 204.32769775]
[9.80300713 211.02442932]
[18.36154175 198.70568848]
[26.92007828 186.38693237]
[35.47861481 174.06819153]
[44.03714752 161.74945068]
[39.59133148 151.08349609]
[40.91742325 139.48295593]
[47.79629517 129.89938354]
[58.58114243 124.82862091]
[70.59043884 125.66131592]
[79.78717041 113.81142426]
[88.98390198 101.96152496]
[98.02342224 89.99126434]
[106.90415192 77.90273285]
[115.78488159 65.81419373]
[124.50527191 53.60949707]
[133.06381226 41.29075241]
[141.62234497 28.97200584]
[143.14204407 13.22395515]
[156.75808716 7.18635178]
[165.31661987 -5.13239288]
[173.87515259 -17.45113754]
[182.43368530 -29.76988220]
[190.99223328 -42.08862686]
[187.89436340 -49.29270554]
[187.56663513 -57.05884171]
[190.00299072 -64.36766052]
[194.83782959 -70.27721405]
[201.39987183 -74.04438019]
[208.80506897 -75.21813202]
[216.07565308 -73.69308472]
[226.18107605 -84.77822113]
[236.28651428 -95.86334991]
[246.39195251 -106.94848633]
[256.49737549 -118.03362274]
[253.23298645 -133.20343018]
[259.53939819 -147.38119507]
[272.99169922 -155.11524963]
[288.41717529 -153.43170166]
[299.88442993 -142.97792053]
[302.98406982 -127.77358246]
[296.52423096 -113.66507721]
[282.98883057 -106.07740784]
[267.58251953 -107.92818451]
[257.47708130 -96.84304810]
[247.37165833 -85.75791931]
[237.26622009 -74.67278290]
[227.16078186 -63.58765030]
[225.15040588 -41.23781586]
[203.31097412 -33.53009033]
[194.75244141 -21.21134567]
[186.19389343 -8.89260197]
[177.63536072 3.42614269]
[169.07682800 15.74488735]
[168.16929626 30.61181831]
[153.94108582 37.53054047]
[145.38255310 49.84928513]
[136.82402039 62.16802979]
[135.57608032 69.54911041]
[127.87341309 74.69492340]
[118.99268341 86.78346252]
[110.11195374 98.87199402]
[108.22103882 106.82056427]
[100.83380127 111.15825653]
[91.63706970 123.00815582]
[82.44033051 134.85804749]
[85.58992767 153.43881226]
[74.45305634 168.24850464]
[56.35589218 170.30798340]
[47.79735947 182.62672424]
[39.23882294 194.94548035]
[30.68028641 207.26422119]
[22.12175179 219.58296204]
[31.99068260 229.28546143]
[40.16755676 240.44770813]
[46.43985367 252.77807617]
[50.64480591 265.95458984]
[52.67360687 279.63336182]
[52.47424698 293.45755005]
[50.05281830 307.06665039]
[45.47335815 320.10586548]
[38.85613632 332.23553467]
[30.37450981 343.13967896]
[20.25038147 352.53457642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 20]
[8 19]
[9 18]
[10 17]
[35 107]
[36 106]
[37 105]
[38 104]
[39 103]
[44 100]
[45 99]
[46 98]
[47 96]
[48 95]
[49 94]
[50 92]
[51 91]
[52 90]
[54 88]
[55 87]
[56 86]
[57 85]
[58 84]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
] def

init

% Start Annotations
7 20 0.0 1 colorpair
8 19 0.0 1 colorpair
9 18 0.0 1 colorpair
10 17 0.0 1 colorpair
35 107 0.0 1 colorpair
36 106 0.0 1 colorpair
37 105 0.0 1 colorpair
38 104 0.0 1 colorpair
39 103 0.0 1 colorpair
44 100 0.0 1 colorpair
45 99 0.0 1 colorpair
46 98 0.0 1 colorpair
47 96 0.0 1 colorpair
48 95 0.0 1 colorpair
49 94 0.0 1 colorpair
50 92 0.0 1 colorpair
51 91 0.0 1 colorpair
52 90 0.0 1 colorpair
54 88 0.0 1 colorpair
55 87 0.0 1 colorpair
56 86 0.0 1 colorpair
57 85 0.0 1 colorpair
58 84 0.0 1 colorpair
65 82 0.0 1 colorpair
66 81 0.0 1 colorpair
67 80 0.0 1 colorpair
68 79 0.0 1 colorpair
69 78 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
