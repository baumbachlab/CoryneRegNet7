%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_GUAGUCCCCACGGGCGCCCGAGCACGGGCUGAGAUCGCGCUGAUUGCUGCGCGAGCACCGUUUGAACCUGUCCGGUUAGCACCGGCGAAGGAAGAGAGGAAUGGUGCAAU_\
) } def
/len { sequence length } bind def

/coor [
[147.50326538 145.95903015]
[134.11772156 152.72860718]
[119.12327576 153.13668823]
[105.39168549 147.10688782]
[106.64775085 132.15957642]
[98.37932587 144.67489624]
[90.11089325 157.19020081]
[81.84246826 169.70552063]
[81.39587402 186.09858704]
[66.84886932 193.66935730]
[53.16616821 184.62968445]
[54.42335892 168.27880859]
[69.32715607 161.43708801]
[77.59558105 148.92178345]
[85.86400604 136.40646362]
[94.13243103 123.89114380]
[85.34942627 111.73143005]
[70.86957550 115.64727020]
[56.38971710 119.56311035]
[41.90986252 123.47895813]
[27.43000984 127.39479828]
[16.25074768 139.39297485]
[0.33332911 135.44735718]
[-3.94777012 119.61688232]
[7.81147766 108.18656158]
[23.51416779 112.91494751]
[37.99402237 108.99909973]
[52.47387314 105.08325958]
[66.95372772 101.16741943]
[81.43358612 97.25157166]
[83.98784637 90.19992828]
[68.99619293 89.69956207]
[64.83941650 75.28702545]
[77.26204681 66.87999725]
[89.09637451 76.09662628]
[91.65063477 69.04498291]
[83.03749847 56.76434708]
[74.42436981 44.48371506]
[65.81123352 32.20308304]
[57.19810104 19.92244911]
[48.58496857 7.64181662]
[33.06838989 7.51764441]
[20.60823631 -1.73028505]
[15.99569035 -16.54595375]
[21.00437164 -31.23243523]
[33.70833969 -40.14247894]
[49.22265625 -39.84998703]
[61.58175278 -30.46743393]
[66.03330994 -15.60259914]
[60.86560059 -0.97131634]
[69.47873688 11.30931664]
[78.09186554 23.58994865]
[86.70500183 35.87058258]
[95.31813049 48.15121460]
[103.93126678 60.43184662]
[117.72885895 66.31626129]
[132.55384827 64.03155518]
[147.37882996 61.74683762]
[162.20381165 59.46212387]
[177.02879333 57.17741394]
[191.85377502 54.89270020]
[206.67875671 52.60798645]
[221.50373840 50.32327271]
[236.32872009 48.03855896]
[244.31028748 29.89822388]
[261.39172363 20.12826347]
[280.79528809 22.41282654]
[294.93554688 35.69058228]
[309.41540527 31.77473831]
[323.89526367 27.85889626]
[332.26034546 12.57238865]
[348.75042725 8.08500576]
[363.13134766 16.68040276]
[377.49676514 12.36356068]
[391.86218262 8.04671764]
[406.22756958 3.72987485]
[420.59298706 -0.58696795]
[431.43438721 -12.89126587]
[447.45535278 -9.38965797]
[452.17483521 6.31570244]
[440.73788452 18.06848526]
[424.90982056 13.77843761]
[410.54443359 18.09527969]
[396.17901611 22.41212273]
[381.81359863 26.72896576]
[367.44821167 31.04580879]
[362.94567871 43.20592880]
[352.07458496 50.62670517]
[338.71896362 50.38304138]
[327.81109619 42.33874893]
[313.33126831 46.25459290]
[298.85140991 50.17043686]
[297.32308960 60.71316910]
[292.29010010 70.14602661]
[284.32638550 77.33750153]
[274.35925293 81.41490173]
[263.56127930 81.87018585]
[253.21253967 78.62312317]
[244.54864502 72.03395081]
[238.61343384 62.86354065]
[223.78845215 65.14825439]
[208.96347046 67.43296814]
[194.13848877 69.71768188]
[179.31350708 72.00239563]
[164.48852539 74.28710938]
[149.66354370 76.57182312]
[134.83856201 78.85653687]
[120.01357269 81.14124298]
[134.11906433 86.24369812]
[147.50433350 93.01382446]
[156.71896362 104.84981537]
[159.99955750 119.48667908]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 16]
[6 15]
[7 14]
[8 13]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[36 55]
[37 54]
[38 53]
[39 52]
[40 51]
[41 50]
[56 108]
[57 107]
[58 106]
[59 105]
[60 104]
[61 103]
[62 102]
[63 101]
[64 100]
[68 92]
[69 91]
[70 90]
[73 86]
[74 85]
[75 84]
[76 83]
[77 82]
] def

init

% Start Annotations
5 16 0.0 0.6 colorpair
6 15 0.16 1 colorpair
7 14 0.0 1 colorpair
8 13 0.0 1 colorpair
17 30 0.0 1 colorpair
18 29 0.0 1 colorpair
19 28 0.0 1 colorpair
20 27 0.0 1 colorpair
21 26 0.0 1 colorpair
36 55 0.0 1 colorpair
37 54 0.16 1 colorpair
38 53 0.0 1 colorpair
39 52 0.0 1 colorpair
40 51 0.16 1 colorpair
41 50 0.0 1 colorpair
56 108 0.0 0.6 colorpair
57 107 0.0 0.6 colorpair
58 106 0.0 0.6 colorpair
59 105 0.0 0.6 colorpair
60 104 0.0 1 colorpair
61 103 0.16 1 colorpair
62 102 0.16 1 colorpair
63 101 0.0 1 colorpair
64 100 0.0 1 colorpair
68 92 0.0 1 colorpair
69 91 0.0 1 colorpair
70 90 0.0 1 colorpair
73 86 0.0 1 colorpair
74 85 0.16 1 colorpair
75 84 0.0 1 colorpair
76 83 0.0 1 colorpair
77 82 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
5 16 1 gmark
6 cmark
37 cmark
54 cmark
51 cmark
56 108 1 gmark
57 107 1 gmark
58 106 1 gmark
59 105 1 gmark
103 cmark
102 cmark
74 cmark
85 cmark

% End Annotations
showpage
end
%%EOF
