%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCAUUUCGAGGCCUGAUAUGUAAAUUUUGUAGGGGUCGGACUGUGCCGCGAGACGGGUUUCUUGGCGUUGUUGGAGUGAACUCGGAUCCCGUUUAAGCGCUGCUAUUAUUGAACGCUGUUCGAUGUCGGUGAGGGUAUCGAAGUACUCGUAGGGGUCAUGAGAAUCGUACAUAGUUGU\
) } def
/len { sequence length } bind def

/coor [
[29.56223679 285.10848999]
[24.27327347 290.14941406]
[17.62168121 293.00387573]
[10.46043777 293.35757446]
[3.48959017 306.63940430]
[-3.48125744 319.92123413]
[-10.45210457 333.20309448]
[-10.01432610 349.01821899]
[-22.78002357 356.69195557]
[-29.75086975 369.97381592]
[-36.72171783 383.25564575]
[-33.34083557 398.93841553]
[-43.60531998 411.26803589]
[-59.64113617 410.78631592]
[-69.14698029 397.86276245]
[-64.83078003 382.41122437]
[-50.00355911 376.28479004]
[-43.03271103 363.00296021]
[-36.06186295 349.72113037]
[-36.99824524 334.85598755]
[-23.73394585 326.23223877]
[-16.76309776 312.95037842]
[-9.79225063 299.66854858]
[-2.82140255 286.38671875]
[-6.21907949 264.19479370]
[13.39114094 251.81762695]
[19.19114113 237.98432922]
[24.99114227 224.15103149]
[30.79114342 210.31774902]
[28.57686806 195.58865356]
[41.04842377 185.85362244]
[46.84842682 172.02032471]
[52.64842606 158.18702698]
[58.44842911 144.35374451]
[56.23414993 129.62464905]
[68.70571136 119.88961029]
[63.38663483 105.86436462]
[47.59601974 106.84776306]
[39.48623276 94.35453796]
[25.97170067 87.84628296]
[10.18108654 88.82968140]
[2.07129931 76.33645630]
[-11.44323349 69.82820129]
[-24.95776749 63.31994629]
[-39.71533585 68.30511475]
[-53.32828140 61.51229858]
[-57.98993301 47.41249084]
[-71.50446320 40.90423584]
[-85.01899719 34.39598083]
[-98.53353119 27.88772392]
[-112.04806519 21.37946701]
[-127.83868408 22.36286354]
[-135.94847107 9.86964035]
[-149.46299744 3.36138463]
[-162.97753906 -3.14687133]
[-176.49206543 -9.65512753]
[-192.79602051 -7.89071274]
[-202.25628662 -21.28605652]
[-195.14097595 -36.06118011]
[-178.76968384 -37.01669693]
[-169.98381042 -23.16966057]
[-156.46928406 -16.66140366]
[-142.95474243 -10.15314865]
[-129.44021606 -3.64489222]
[-114.61624908 -5.09380245]
[-105.53981018 7.86493444]
[-92.02527618 14.37319088]
[-78.51074219 20.88144684]
[-64.99620819 27.38970184]
[-51.48167801 33.89796066]
[-37.55150986 28.75149918]
[-23.75313950 35.15927887]
[-18.44951057 49.80541229]
[-4.93497753 56.31366730]
[8.57955551 62.82192230]
[23.40352058 61.37301254]
[32.47995758 74.33174896]
[45.99449158 80.84000397]
[60.81845474 79.39109802]
[69.89488983 92.34983063]
[79.20394897 78.85836029]
[93.49478149 72.51026917]
[108.25044250 74.45693970]
[119.23014832 83.35096741]
[132.96127319 77.31305695]
[146.69239807 71.27514648]
[160.42350769 65.23723602]
[174.10200500 59.08104706]
[187.72686768 52.80702972]
[201.35171509 46.53301239]
[214.97657776 40.25899506]
[228.60144043 33.98498154]
[242.22628784 27.71096230]
[241.29962158 15.34128094]
[244.26046753 3.32468534]
[250.79780579 -7.15039158]
[260.24786377 -15.05363274]
[271.66137695 -19.61416817]
[283.89901733 -20.39574432]
[295.74508667 -17.33839607]
[306.02819824 -10.76264477]
[317.91534424 -19.91117477]
[329.80252075 -29.05970383]
[341.68966675 -38.20823288]
[353.57681274 -47.35676575]
[353.53930664 -56.83185959]
[357.81661987 -65.13189697]
[365.32974243 -70.44072723]
[374.30859375 -71.66322327]
[382.70806885 -68.64925385]
[395.05282593 -77.17021942]
[407.39758301 -85.69119263]
[419.74234009 -94.21216583]
[432.08709717 -102.73313904]
[444.43185425 -111.25410461]
[456.77661133 -119.77507782]
[469.12136841 -128.29605103]
[478.72198486 -142.26974487]
[494.80731201 -136.91259766]
[494.11239624 -119.97290802]
[477.64233398 -115.95129395]
[465.29757690 -107.43032074]
[452.95281982 -98.90934753]
[440.60806274 -90.38838196]
[428.26330566 -81.86740875]
[415.91854858 -73.34643555]
[403.57379150 -64.82546234]
[391.22903442 -56.30449295]
[384.08621216 -36.95567322]
[362.72534180 -35.46961212]
[350.83819580 -26.32108116]
[338.95104980 -17.17255211]
[327.06387329 -8.02402210]
[315.17672729 1.12450814]
[318.38775635 10.37752533]
[319.17294312 20.14033127]
[333.73709106 23.73006630]
[348.30120850 27.31980133]
[362.86532593 30.90953636]
[377.42944336 34.49927139]
[391.99359131 38.08900833]
[407.58615112 33.00923920]
[419.59909058 44.17263794]
[415.67449951 60.09525681]
[399.84970093 64.39727020]
[388.40383911 52.65313339]
[373.83972168 49.06340027]
[359.27560425 45.47366333]
[344.71145630 41.88393021]
[330.14733887 38.29419327]
[315.58322144 34.70446014]
[302.90335083 50.12346649]
[284.14779663 57.22704315]
[264.25192261 54.04741287]
[248.50030518 41.33581924]
[234.87545776 47.60983658]
[221.25059509 53.88385391]
[207.62573242 60.15787125]
[194.00088501 66.43188477]
[180.37602234 72.70590210]
[175.60310364 78.37425995]
[166.46142578 78.96836090]
[152.73030090 85.00627136]
[138.99917603 91.04417419]
[125.26805878 97.08208466]
[124.10311890 111.81345367]
[114.63027191 124.16522980]
[99.22066498 129.64518738]
[82.53900146 125.68961334]
[84.33842468 141.40815735]
[72.28172302 150.15373230]
[66.48171997 163.98703003]
[60.68171692 177.82032776]
[54.88171768 191.65361023]
[56.68113708 207.37216187]
[44.62443542 216.11773682]
[38.82443619 229.95103455]
[33.02443314 243.78433228]
[27.22443390 257.61761475]
[31.59511948 263.80990601]
[33.51611328 271.07122803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 24]
[5 23]
[6 22]
[7 21]
[9 19]
[10 18]
[11 17]
[26 179]
[27 178]
[28 177]
[29 176]
[31 174]
[32 173]
[33 172]
[34 171]
[36 169]
[37 80]
[39 78]
[40 77]
[42 75]
[43 74]
[44 73]
[47 70]
[48 69]
[49 68]
[50 67]
[51 66]
[53 64]
[54 63]
[55 62]
[56 61]
[84 165]
[85 164]
[86 163]
[87 162]
[88 160]
[89 159]
[90 158]
[91 157]
[92 156]
[93 155]
[101 134]
[102 133]
[103 132]
[104 131]
[105 130]
[110 128]
[111 127]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
[117 121]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[141 146]
] def

init

% Start Annotations
4 24 0.0 1 colorpair
5 23 0.0 1 colorpair
6 22 0.0 1 colorpair
7 21 0.0 1 colorpair
9 19 0.0 1 colorpair
10 18 0.0 1 colorpair
11 17 0.0 1 colorpair
26 179 0.0 1 colorpair
27 178 0.0 1 colorpair
28 177 0.0 1 colorpair
29 176 0.0 1 colorpair
31 174 0.0 1 colorpair
32 173 0.0 1 colorpair
33 172 0.0 1 colorpair
34 171 0.0 1 colorpair
36 169 0.0 1 colorpair
37 80 0.0 1 colorpair
39 78 0.0 1 colorpair
40 77 0.0 1 colorpair
42 75 0.0 1 colorpair
43 74 0.0 1 colorpair
44 73 0.0 1 colorpair
47 70 0.0 1 colorpair
48 69 0.0 1 colorpair
49 68 0.0 1 colorpair
50 67 0.0 1 colorpair
51 66 0.0 1 colorpair
53 64 0.0 1 colorpair
54 63 0.0 1 colorpair
55 62 0.0 1 colorpair
56 61 0.0 1 colorpair
84 165 0.0 1 colorpair
85 164 0.0 1 colorpair
86 163 0.0 1 colorpair
87 162 0.0 1 colorpair
88 160 0.0 1 colorpair
89 159 0.0 1 colorpair
90 158 0.0 1 colorpair
91 157 0.0 1 colorpair
92 156 0.0 1 colorpair
93 155 0.0 1 colorpair
101 134 0.0 1 colorpair
102 133 0.0 1 colorpair
103 132 0.0 1 colorpair
104 131 0.0 1 colorpair
105 130 0.0 1 colorpair
110 128 0.0 1 colorpair
111 127 0.0 1 colorpair
112 126 0.0 1 colorpair
113 125 0.0 1 colorpair
114 124 0.0 1 colorpair
115 123 0.0 1 colorpair
116 122 0.0 1 colorpair
117 121 0.0 1 colorpair
136 151 0.0 1 colorpair
137 150 0.0 1 colorpair
138 149 0.0 1 colorpair
139 148 0.0 1 colorpair
140 147 0.0 1 colorpair
141 146 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
