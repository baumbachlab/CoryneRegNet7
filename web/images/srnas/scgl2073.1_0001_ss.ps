%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCAGUAUUGGAGGGGAGUACCCCACAAGCAGCGUUGAUCGUCAACACGGAAAUCAGACUCAAAAAACUUUCAAGAU___GUGAAU_GGUGGUUUCCCGGUCACACUGGCCCAUUUUUGUUUUCAAAU___UGU_________G__UUAAAAGACAAGGGUGGGGGAGACCUCCGGUUCUUAA\
) } def
/len { sequence length } bind def

/coor [
[84.21321869 473.11355591]
[71.89849091 464.15435791]
[64.29809570 450.95761108]
[62.72884369 435.80975342]
[67.46261597 421.33526611]
[77.67925262 410.04190063]
[91.60867310 403.88629150]
[91.60867310 388.88629150]
[91.60867310 373.88629150]
[91.60867310 358.88629150]
[91.60867310 343.88629150]
[91.60867310 328.88629150]
[91.60867310 313.88629150]
[91.60867310 298.88629150]
[80.02854156 293.77001953]
[71.21707153 284.61468506]
[66.51315308 272.76028442]
[66.65082550 259.96069336]
[71.64501953 248.12405396]
[80.78398895 239.02836609]
[92.73058319 234.05445862]
[93.24269867 219.06320190]
[93.75481415 204.07194519]
[94.26692963 189.08068848]
[94.77904510 174.08943176]
[95.29116058 159.09817505]
[89.55498505 154.26638794]
[81.91837311 167.17692566]
[74.35723877 180.13182068]
[59.46367645 178.34805298]
[55.17564774 163.97402954]
[66.65735626 154.32199097]
[78.08263397 144.60278320]
[72.34645844 139.77098083]
[57.66019440 142.82283020]
[42.97393036 145.87466431]
[28.28767014 148.92651367]
[13.60140991 151.97834778]
[-0.67626888 161.12078857]
[-13.41387463 149.93196106]
[-6.18843746 134.59477234]
[10.54956913 137.29208374]
[25.23583031 134.24024963]
[39.92209244 131.18840027]
[54.60835266 128.13656616]
[69.29461670 125.08472443]
[64.55756378 108.43209076]
[67.57100677 92.82123566]
[76.47468567 81.38957977]
[67.41114044 69.43750763]
[58.34759521 57.48542786]
[49.28404617 45.53335190]
[40.22050095 33.58127594]
[31.15695572 21.62919998]
[22.09341049 9.67712307]
[13.02986431 -2.27495384]
[3.76358104 -14.07054615]
[-5.70273829 -25.70621490]
[-15.16905689 -37.34188461]
[-24.63537598 -48.97755432]
[-34.10169601 -60.61322403]
[-54.14807892 -61.57840729]
[-66.85589600 -76.71705627]
[-64.40943146 -96.02367401]
[-74.45907593 -107.15941620]
[-84.50872040 -118.29515076]
[-99.92411804 -116.52175903]
[-113.42124176 -124.17730713]
[-119.81015778 -138.31808472]
[-116.63420105 -153.50665283]
[-105.11459351 -163.90272522]
[-89.68085480 -165.50878906]
[-76.26757812 -157.70727539]
[-70.03244019 -143.49803162]
[-73.37297821 -128.34478760]
[-63.32333374 -117.20905304]
[-53.27369308 -106.07331085]
[-43.21883011 -108.33454132]
[-33.05593872 -106.18908691]
[-24.64300537 -99.96038055]
[-19.54660988 -90.72452545]
[-18.75041962 -80.12483215]
[-22.46602631 -70.07954407]
[-12.99970722 -58.44387436]
[-3.53338790 -46.80820465]
[5.93293142 -35.17253494]
[15.39925003 -23.53686523]
[19.99667549 -22.16553307]
[23.77194595 -17.87753868]
[24.98194122 -11.33850002]
[34.04548645 0.61357707]
[43.10903168 12.56565380]
[52.17257690 24.51773071]
[61.23612595 36.46980667]
[70.29966736 48.42188263]
[79.36321259 60.37395859]
[88.42676544 72.32603455]
[96.93243408 70.16079712]
[105.70073700 70.55021667]
[112.14299011 57.00409698]
[118.58524323 43.45797729]
[125.02749634 29.91185570]
[131.46974182 16.36573410]
[132.81208801 -0.53498858]
[149.42393494 -3.92368531]
[157.27880859 11.10086823]
[145.01586914 22.80798531]
[138.57360840 36.35410690]
[132.13136292 49.90022659]
[125.68910980 63.44635010]
[119.24685669 76.99246979]
[129.87817383 87.44286346]
[134.71580505 102.72857666]
[131.65209961 119.61297607]
[120.37690735 134.01243591]
[135.36816406 133.50032043]
[150.35942078 132.98820496]
[165.35067749 132.47608948]
[180.34191895 131.96397400]
[195.33317566 131.45185852]
[210.32443237 130.93974304]
[225.31568909 130.42762756]
[240.30203247 129.78755188]
[255.28234863 129.01956177]
[270.26269531 128.25157166]
[285.24301147 127.48358154]
[288.73767090 112.78786469]
[296.23220825 99.67266846]
[307.11911011 89.20118713]
[320.51583862 82.22229004]
[335.33630371 79.30172729]
[350.37918091 80.67626190]
[364.42492676 86.23445892]
[376.33493042 95.52574158]
[385.14373779 107.79691315]
[390.13723755 122.05319214]
[390.91064453 137.13890076]
[387.40121460 151.83110046]
[379.89349365 164.93876648]
[368.99609375 175.39930725]
[355.59237671 182.36473083]
[340.76895142 185.27040100]
[325.72750854 183.88076782]
[311.68734741 178.30845642]
[299.78665161 169.00521851]
[290.99017334 156.72520447]
[286.01098633 142.46391296]
[271.03067017 143.23190308]
[256.05035400 143.99987793]
[241.07002258 144.76786804]
[234.53529358 148.25866699]
[225.82780457 145.41888428]
[210.83654785 145.93099976]
[195.84529114 146.44311523]
[180.85404968 146.95523071]
[165.86279297 147.46734619]
[150.87153625 147.97946167]
[135.88027954 148.49157715]
[120.88902283 149.00369263]
[110.28241730 159.61029053]
[109.77030182 174.60154724]
[109.25818634 189.59280396]
[108.74607086 204.58406067]
[108.23395538 219.57531738]
[107.72183228 234.56657410]
[122.83300018 243.49812317]
[131.30882263 258.76794434]
[130.90008545 276.13870239]
[121.80894470 290.84173584]
[106.60867310 298.88629150]
[106.60867310 313.88629150]
[106.60867310 328.88629150]
[106.60867310 343.88629150]
[106.60867310 358.88629150]
[106.60867310 373.88629150]
[106.60867310 388.88629150]
[106.60867310 403.88629150]
[120.53809357 410.04190063]
[130.75473022 421.33526611]
[135.48851013 435.80975342]
[133.91925049 450.95761108]
[126.31884766 464.15435791]
[114.00412750 473.11355591]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 177]
[8 176]
[9 175]
[10 174]
[11 173]
[12 172]
[13 171]
[14 170]
[21 165]
[22 164]
[23 163]
[24 162]
[25 161]
[26 160]
[34 46]
[35 45]
[36 44]
[37 43]
[38 42]
[49 97]
[50 96]
[51 95]
[52 94]
[53 93]
[54 92]
[55 91]
[56 90]
[57 87]
[58 86]
[59 85]
[60 84]
[61 83]
[64 77]
[65 76]
[66 75]
[99 111]
[100 110]
[101 109]
[102 108]
[103 107]
[115 159]
[116 158]
[117 157]
[118 156]
[119 155]
[120 154]
[121 153]
[122 152]
[123 150]
[124 149]
[125 148]
[126 147]
] def

init

% Start Annotations
7 177 0.0 1 colorpair
8 176 0.0 1 colorpair
9 175 0.0 1 colorpair
10 174 0.0 1 colorpair
11 173 0.0 1 colorpair
12 172 0.0 1 colorpair
13 171 0.0 1 colorpair
14 170 0.0 1 colorpair
21 165 0.0 1 colorpair
22 164 0.0 1 colorpair
23 163 0.0 1 colorpair
24 162 0.0 1 colorpair
25 161 0.0 1 colorpair
26 160 0.0 1 colorpair
34 46 0.0 1 colorpair
35 45 0.0 1 colorpair
36 44 0.0 0.6 colorpair
37 43 0.0 1 colorpair
38 42 0.0 1 colorpair
49 97 0.0 1 colorpair
50 96 0.0 1 colorpair
51 95 0.0 0.6 colorpair
52 94 0.0 0.6 colorpair
53 93 0.0 0.6 colorpair
54 92 0.0 0.6 colorpair
55 91 0.0 0.6 colorpair
56 90 0.0 0.6 colorpair
57 87 0.16 0.6 colorpair
58 86 0.16 1 colorpair
59 85 0.16 0.6 colorpair
60 84 0.0 0.6 colorpair
61 83 0.16 0.6 colorpair
64 77 0.16 1 colorpair
65 76 0.32 1 colorpair
66 75 0.16 0.6 colorpair
99 111 0.0 1 colorpair
100 110 0.0 1 colorpair
101 109 0.0 1 colorpair
102 108 0.0 1 colorpair
103 107 0.0 1 colorpair
115 159 0.0 1 colorpair
116 158 0.0 1 colorpair
117 157 0.0 1 colorpair
118 156 0.0 0.6 colorpair
119 155 0.0 0.6 colorpair
120 154 0.16 1 colorpair
121 153 0.16 1 colorpair
122 152 0.16 1 colorpair
123 150 0.16 0.6 colorpair
124 149 0.32 1 colorpair
125 148 0.0 0.6 colorpair
126 147 0.32 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
36 44 1 gmark
51 95 1 gmark
52 94 1 gmark
53 93 1 gmark
54 92 1 gmark
55 91 1 gmark
56 90 1 gmark
57 87 1 gmark
87 cmark
58 cmark
86 cmark
59 85 1 gmark
59 cmark
85 cmark
60 84 1 gmark
61 83 1 gmark
61 cmark
64 cmark
65 cmark
76 cmark
66 75 1 gmark
66 cmark
75 cmark
118 156 1 gmark
119 155 1 gmark
154 cmark
153 cmark
152 cmark
123 150 1 gmark
123 cmark
150 cmark
124 cmark
149 cmark
125 148 1 gmark
126 cmark
147 cmark

% End Annotations
showpage
end
%%EOF
