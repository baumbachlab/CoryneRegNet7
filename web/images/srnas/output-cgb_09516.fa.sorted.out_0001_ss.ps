%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGUGAGUUUUCCAAAUCGCUAUCGCAUUGCAAUGUGAGUUAGGUAACUUCACAUUCACACGUUUAGCUGUGAUCGACAACAUACUUCGUGGUCGUCGGCCAGAUGUGGUGAGAAACAU\
) } def
/len { sequence length } bind def

/coor [
[44.07494736 244.11642456]
[38.06814194 257.86117554]
[32.06133270 271.60592651]
[26.05452347 285.35067749]
[20.04771423 299.09542847]
[24.53739357 314.49746704]
[15.17747498 327.52709961]
[-0.85191315 328.18914795]
[-11.25439548 315.97570801]
[-8.05007744 300.25592041]
[6.30296135 293.08862305]
[12.30976963 279.34387207]
[18.31657791 265.59912109]
[24.32338715 251.85437012]
[30.33019638 238.10961914]
[19.40139961 228.86727905]
[11.52497578 216.89736938]
[7.35200357 203.17289734]
[7.23207617 188.81256104]
[11.18403053 174.98959351]
[18.89366722 162.83584595]
[29.73871803 153.34916687]
[42.83905411 147.31144714]
[57.12811279 145.22421265]
[71.43974304 147.26692200]
[77.79846191 133.68139648]
[84.15718079 120.09585571]
[90.51589203 106.51032257]
[87.98981476 103.83843231]
[86.28829956 100.23457336]
[85.73855591 95.97419739]
[74.99626923 85.50503540]
[66.56058502 81.69522858]
[64.11655426 74.62531281]
[53.64738846 63.88302612]
[43.17822647 53.14074326]
[32.70906448 42.39846039]
[22.23990059 31.65617943]
[11.77073860 20.91389656]
[1.30157673 10.17161369]
[-9.30502510 -0.43498805]
[-20.04730797 -10.90415001]
[-30.78959084 -21.37331200]
[-46.80793381 -24.88681984]
[-51.51576996 -40.59568024]
[-40.07007980 -52.33996582]
[-24.24521065 -48.03816223]
[-20.32042885 -32.11559677]
[-9.57814598 -21.64643288]
[1.16413736 -11.17727089]
[8.23405457 -8.73323727]
[12.04385948 -0.29754865]
[22.51302147 10.44473457]
[32.98218536 21.18701744]
[43.45134735 31.92930031]
[53.92050934 42.67158127]
[64.38967133 53.41386414]
[74.85883331 64.15615082]
[85.46543884 74.76274872]
[96.20771790 85.23191071]
[110.80668640 88.67723083]
[125.09621429 84.11550903]
[139.38574219 79.55378723]
[153.67527771 74.99205780]
[167.96481323 70.43033600]
[182.25433350 65.86861420]
[196.54386902 61.30689240]
[207.33737183 49.73923111]
[221.81484985 53.23950577]
[236.10438538 48.67778015]
[250.39390564 44.11605835]
[264.68344116 39.55433655]
[278.91305542 34.80901337]
[293.08038330 29.88087845]
[307.24774170 24.95274353]
[321.41506958 20.02460670]
[335.58239746 15.09647179]
[342.76177979 9.25419712]
[350.17843628 10.22895718]
[364.46795654 5.66723442]
[367.66015625 -9.35626602]
[377.94833374 -20.76016426]
[392.56503296 -25.47687149]
[407.57846069 -22.23761559]
[418.95004272 -11.91373920]
[423.62091064 2.71768522]
[420.33462524 17.72087860]
[409.97515869 29.06005669]
[395.32916260 33.68503952]
[380.33633423 30.35172653]
[369.02969360 19.95676422]
[354.74017334 24.51848793]
[340.51055908 29.26380920]
[326.34320068 34.19194412]
[312.17587280 39.12008286]
[298.00854492 44.04821777]
[283.84118652 48.97635269]
[278.49411011 54.20759201]
[269.24517822 53.84386826]
[254.95562744 58.40559006]
[240.66610718 62.96731186]
[226.37657166 67.52903748]
[216.60514832 78.77041626]
[201.10559082 75.59642792]
[186.81605530 80.15814972]
[172.52653503 84.71987152]
[158.23699951 89.28159332]
[143.94746399 93.84331512]
[129.65794373 98.40503693]
[115.36840820 102.96675873]
[104.10142517 112.86904144]
[97.74271393 126.45457458]
[91.38399506 140.04011536]
[85.02527618 153.62564087]
[96.59243774 164.33457947]
[104.29115295 178.06774902]
[107.38388824 193.48516846]
[105.58185577 209.08662415]
[99.07197571 223.35783386]
[88.49752045 234.91722107]
[74.89461517 242.64987183]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 15]
[2 14]
[3 13]
[4 12]
[5 11]
[25 114]
[26 113]
[27 112]
[28 111]
[31 60]
[32 59]
[34 58]
[35 57]
[36 56]
[37 55]
[38 54]
[39 53]
[40 52]
[41 50]
[42 49]
[43 48]
[61 110]
[62 109]
[63 108]
[64 107]
[65 106]
[66 105]
[67 104]
[69 102]
[70 101]
[71 100]
[72 99]
[73 97]
[74 96]
[75 95]
[76 94]
[77 93]
[79 92]
[80 91]
] def

init

% Start Annotations
1 15 0.0 1 colorpair
2 14 0.0 1 colorpair
3 13 0.0 1 colorpair
4 12 0.0 1 colorpair
5 11 0.0 1 colorpair
25 114 0.0 1 colorpair
26 113 0.0 1 colorpair
27 112 0.0 1 colorpair
28 111 0.0 1 colorpair
31 60 0.0 1 colorpair
32 59 0.0 1 colorpair
34 58 0.0 1 colorpair
35 57 0.0 1 colorpair
36 56 0.0 1 colorpair
37 55 0.0 1 colorpair
38 54 0.0 1 colorpair
39 53 0.0 1 colorpair
40 52 0.0 1 colorpair
41 50 0.0 1 colorpair
42 49 0.0 1 colorpair
43 48 0.0 1 colorpair
61 110 0.0 1 colorpair
62 109 0.0 1 colorpair
63 108 0.0 1 colorpair
64 107 0.0 1 colorpair
65 106 0.0 1 colorpair
66 105 0.0 1 colorpair
67 104 0.0 1 colorpair
69 102 0.0 1 colorpair
70 101 0.0 1 colorpair
71 100 0.0 1 colorpair
72 99 0.0 1 colorpair
73 97 0.0 1 colorpair
74 96 0.0 1 colorpair
75 95 0.0 1 colorpair
76 94 0.0 1 colorpair
77 93 0.0 1 colorpair
79 92 0.0 1 colorpair
80 91 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
