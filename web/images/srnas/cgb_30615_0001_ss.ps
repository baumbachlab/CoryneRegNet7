%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:35:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AACGUGAAUACUUCCACUACUUUCCGAGUCGACGUAAAUCUCUUGCGAAGCUCGCCUUUCAACGGCUAGGUACACCUAGAGUCCACUUCUCCCGAAAUUCUAUAUUCCGGGAAAUUACUGCUAGAUAAGUACACGUU\
) } def
/len { sequence length } bind def

/coor [
[81.64914703 192.81800842]
[81.64914703 177.81800842]
[81.64914703 162.81800842]
[81.64914703 147.81800842]
[81.64914703 132.81800842]
[81.64914703 117.81800842]
[74.45776367 130.98175049]
[67.26638031 144.14547729]
[66.46559143 159.12409973]
[60.64299011 172.94789124]
[50.48571014 183.98553467]
[37.19239807 190.93449402]
[22.33179665 192.97470093]
[7.65759039 189.86540222]
[-5.09852362 181.97354126]
[-14.43120480 170.23042297]
[-19.23910904 156.02182007]
[-18.95485878 141.02452087]
[-13.61199760 127.00831604]
[-3.84103322 115.62727356]
[9.20496845 108.22444153]
[23.98645592 105.67343903]
[38.75499344 108.27382660]
[53.20212173 104.23892212]
[67.64925385 100.20401001]
[53.03626633 96.81865692]
[38.42327881 93.43329620]
[23.81029129 90.04794312]
[14.65515423 91.16149902]
[8.90502453 86.41562653]
[-4.58060408 94.21149445]
[-19.26530647 90.23479462]
[-26.61436844 77.33026886]
[-41.14650726 73.61315155]
[-55.67864609 69.89603424]
[-70.21078491 66.17891693]
[-84.74291992 62.46179962]
[-99.22193146 69.37106323]
[-113.58776093 62.22946548]
[-116.82018280 46.51542664]
[-106.43955231 34.28341293]
[-90.40900421 34.91678238]
[-81.02580261 47.92966080]
[-66.49366760 51.64677811]
[-51.96152878 55.36389542]
[-37.42938995 59.08101273]
[-22.89725304 62.79813004]
[-10.25458336 55.00720215]
[4.53602266 58.56987381]
[12.62214184 71.88349152]
[27.19564819 75.43495941]
[41.80863571 78.82031250]
[56.42161942 82.20566559]
[71.03460693 85.59102631]
[80.63275146 74.06385803]
[74.65673828 60.30568695]
[59.61434937 56.03244400]
[50.88083649 43.06094742]
[52.57989120 27.51594162]
[63.90927505 16.73730278]
[79.51959991 15.81437492]
[92.04014587 25.18293571]
[95.55909729 40.41943741]
[88.41490936 54.32967377]
[94.39092255 68.08784485]
[109.27349854 66.21462250]
[111.65373993 51.40467453]
[114.03397369 36.59473038]
[116.41421509 21.78478432]
[118.79444885 6.97483969]
[112.44998169 -8.14732265]
[122.58798981 -21.03735352]
[138.77935791 -18.43509483]
[144.36779785 -3.01752758]
[133.60440063 9.35507774]
[131.22415161 24.16502190]
[128.84391785 38.97496796]
[126.46368408 53.78491211]
[124.08344269 68.59485626]
[129.26464844 74.01750183]
[138.45376587 62.16170120]
[147.64289856 50.30590057]
[154.92745972 37.19349670]
[169.80519104 35.28223801]
[180.16748047 46.12764740]
[177.58071899 60.90291977]
[164.15057373 67.58282471]
[151.88882446 76.22280884]
[139.62705994 84.86280060]
[144.80827332 90.28544617]
[159.71119690 88.58174133]
[174.61413574 86.87803650]
[189.51705933 85.17433929]
[204.41999817 83.47063446]
[217.25205994 74.21597290]
[230.77578735 80.45764160]
[245.67871094 78.75393677]
[260.58163452 77.05023193]
[271.64938354 65.43623352]
[287.61685181 66.99159241]
[296.23519897 80.52317047]
[290.89315796 95.65070343]
[275.68869019 100.76963806]
[262.28533936 91.95317078]
[247.38241577 93.65686798]
[232.47947693 95.36057281]
[220.71337891 104.49337006]
[206.12370300 98.37356567]
[191.22076416 100.07727051]
[176.31784058 101.78096771]
[161.41490173 103.48467255]
[146.51197815 105.18837738]
[140.53405762 105.06633759]
[134.56858826 104.78688049]
[128.61868286 104.35031128]
[122.68746185 103.75701141]
[131.88645935 115.60515594]
[141.08546448 127.45329285]
[150.28446960 139.30142212]
[165.78878784 138.67237854]
[178.68309021 147.30468750]
[184.00924683 161.87902832]
[179.71925354 176.79129028]
[167.46269226 186.30740356]
[151.95245361 186.76821899]
[139.15255737 177.99655151]
[133.98481750 163.36528015]
[138.43632507 148.50042725]
[129.23731995 136.65229797]
[120.03832245 124.80415344]
[110.83932495 112.95601654]
[96.64914703 117.81800842]
[96.64914703 132.81800842]
[96.64914703 147.81800842]
[96.64914703 162.81800842]
[96.64914703 177.81800842]
[96.64914703 192.81800842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 137]
[2 136]
[3 135]
[4 134]
[5 133]
[6 132]
[25 54]
[26 53]
[27 52]
[28 51]
[30 50]
[33 47]
[34 46]
[35 45]
[36 44]
[37 43]
[55 65]
[56 64]
[66 79]
[67 78]
[68 77]
[69 76]
[70 75]
[90 112]
[91 111]
[92 110]
[93 109]
[94 108]
[96 106]
[97 105]
[98 104]
[116 131]
[117 130]
[118 129]
[119 128]
] def

init

% Start Annotations
1 137 0.0 1 colorpair
2 136 0.0 1 colorpair
3 135 0.0 1 colorpair
4 134 0.0 1 colorpair
5 133 0.0 1 colorpair
6 132 0.0 1 colorpair
25 54 0.0 1 colorpair
26 53 0.0 1 colorpair
27 52 0.0 1 colorpair
28 51 0.0 1 colorpair
30 50 0.0 1 colorpair
33 47 0.0 1 colorpair
34 46 0.0 1 colorpair
35 45 0.0 1 colorpair
36 44 0.0 1 colorpair
37 43 0.0 1 colorpair
55 65 0.0 1 colorpair
56 64 0.0 1 colorpair
66 79 0.0 1 colorpair
67 78 0.0 1 colorpair
68 77 0.0 1 colorpair
69 76 0.0 1 colorpair
70 75 0.0 1 colorpair
90 112 0.0 1 colorpair
91 111 0.0 1 colorpair
92 110 0.0 1 colorpair
93 109 0.0 1 colorpair
94 108 0.0 1 colorpair
96 106 0.0 1 colorpair
97 105 0.0 1 colorpair
98 104 0.0 1 colorpair
116 131 0.0 1 colorpair
117 130 0.0 1 colorpair
118 129 0.0 1 colorpair
119 128 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
