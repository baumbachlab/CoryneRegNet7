%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCGGCAAUCCUAGUAUUUCGGCGAUUGUAUGUCUUGUGGUGGGCACCAUUCUUAUUCUGAUUUCGGUGCGUGCCAUGAGUUCUCAGAUCCGAACCAUUACGGCAGCGACCGU\
) } def
/len { sequence length } bind def

/coor [
[96.53346252 324.72064209]
[82.51576233 316.91784668]
[80.01857758 301.07034302]
[90.95752716 289.33496094]
[91.77666473 274.35736084]
[92.59580231 259.37973022]
[93.21028900 244.39231873]
[82.81523132 233.78674316]
[83.01714325 218.57444763]
[94.21173096 207.74305725]
[94.41661072 192.74446106]
[94.41661072 177.74446106]
[94.21173096 162.74586487]
[93.80200958 147.75146484]
[93.39228821 132.75704956]
[92.98256683 117.76265717]
[82.53332520 107.72473907]
[82.13755035 93.24062347]
[92.02303314 82.64707184]
[91.61331177 67.65266418]
[91.20359039 52.65826035]
[90.79386902 37.66386032]
[90.38414764 22.66945457]
[79.54708862 14.53527451]
[75.47502899 1.81650615]
[79.45464325 -10.72661686]
[89.80254364 -18.53579140]
[89.80254364 -33.53579330]
[89.80254364 -48.53579330]
[77.28189087 -54.93588638]
[68.80436707 -66.07121277]
[65.99414062 -79.71348572]
[69.34848022 -93.16380310]
[78.15084076 -103.78658295]
[90.62303162 -109.52600098]
[91.03275299 -124.52040863]
[91.44247437 -139.51481628]
[91.85219574 -154.50921631]
[92.26191711 -169.50361633]
[92.67163849 -184.49801636]
[93.08135986 -199.49241638]
[93.49108124 -214.48683167]
[93.90080261 -229.48123169]
[86.54334259 -243.48759460]
[94.62539673 -255.99877930]
[95.03511810 -270.99316406]
[95.44483948 -285.98757935]
[95.85456085 -300.98199463]
[96.26428223 -315.97637939]
[82.73858643 -329.08810425]
[82.94589996 -347.60906982]
[96.29886627 -359.98541260]
[95.88913727 -374.97982788]
[83.52832031 -384.55813599]
[80.26673889 -399.85180664]
[87.64441681 -413.63961792]
[102.17784882 -419.41140747]
[117.00478363 -414.44189453]
[125.12439728 -401.07754517]
[122.70285797 -385.62857056]
[110.88354492 -375.38955688]
[111.29326630 -360.39514160]
[121.20553589 -354.43325806]
[127.01458740 -344.29129028]
[127.14473724 -332.48345947]
[121.44532013 -322.00372314]
[111.25868988 -315.56668091]
[110.84896851 -300.57226562]
[110.43924713 -285.57785034]
[110.02952576 -270.58346558]
[109.61980438 -255.58905029]
[117.00656891 -242.65518188]
[108.89521027 -229.07150269]
[108.48548889 -214.07710266]
[108.07576752 -199.08270264]
[107.66604614 -184.08830261]
[107.25632477 -169.09388733]
[106.84659576 -154.09948730]
[106.43687439 -139.10508728]
[106.02715302 -124.11068726]
[105.61743164 -109.11627960]
[119.54541016 -101.04773712]
[127.58403778 -86.99473572]
[127.47746277 -70.71196747]
[119.16069794 -56.60443878]
[104.80254364 -48.53579330]
[104.80254364 -33.53579330]
[104.80254364 -18.53579140]
[117.17370605 -7.23414755]
[117.61769867 9.85230541]
[105.37854767 22.25973320]
[105.78826904 37.25413513]
[106.19799042 52.24853897]
[106.60771179 67.24294281]
[107.01743317 82.23734283]
[117.46667480 92.27526093]
[117.86244965 106.75937653]
[107.97696686 117.35292816]
[108.38668823 132.34733582]
[108.79640961 147.34173584]
[109.20613098 162.33613586]
[112.60660553 170.96391296]
[109.41661072 177.74446106]
[109.41661072 192.74446106]
[112.58014679 201.46189880]
[109.20613098 208.15278625]
[119.79252625 219.57934570]
[119.16340637 234.77996826]
[108.20469666 244.80204773]
[111.12893677 253.60263062]
[107.57341766 260.19888306]
[106.75428009 275.17648315]
[105.93514252 290.15411377]
[115.52904510 303.01242065]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 113]
[5 112]
[6 111]
[7 109]
[10 106]
[11 104]
[12 103]
[13 101]
[14 100]
[15 99]
[16 98]
[19 95]
[20 94]
[21 93]
[22 92]
[23 91]
[27 88]
[28 87]
[29 86]
[35 81]
[36 80]
[37 79]
[38 78]
[39 77]
[40 76]
[41 75]
[42 74]
[43 73]
[45 71]
[46 70]
[47 69]
[48 68]
[49 67]
[52 62]
[53 61]
] def

init

% Start Annotations
4 113 0.0 1 colorpair
5 112 0.0 1 colorpair
6 111 0.0 1 colorpair
7 109 0.0 1 colorpair
10 106 0.0 1 colorpair
11 104 0.0 1 colorpair
12 103 0.0 1 colorpair
13 101 0.0 1 colorpair
14 100 0.0 1 colorpair
15 99 0.0 1 colorpair
16 98 0.0 1 colorpair
19 95 0.0 1 colorpair
20 94 0.0 1 colorpair
21 93 0.0 1 colorpair
22 92 0.0 1 colorpair
23 91 0.0 1 colorpair
27 88 0.0 1 colorpair
28 87 0.0 1 colorpair
29 86 0.0 1 colorpair
35 81 0.0 1 colorpair
36 80 0.0 1 colorpair
37 79 0.0 1 colorpair
38 78 0.0 1 colorpair
39 77 0.0 1 colorpair
40 76 0.0 1 colorpair
41 75 0.0 1 colorpair
42 74 0.0 1 colorpair
43 73 0.0 1 colorpair
45 71 0.0 1 colorpair
46 70 0.0 1 colorpair
47 69 0.0 1 colorpair
48 68 0.0 1 colorpair
49 67 0.0 1 colorpair
52 62 0.0 1 colorpair
53 61 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
