%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_CCAAACCCCACGGGCACCCGAGGCAUCGGGCUGAGAUCGCGCU__UGACGCCGCGCGAGCACCGUAUGAACCUGUCUGGUUAGCACCAGCGAAGGAAGAGAGGAGACGGUAUUC_\
) } def
/len { sequence length } bind def

/coor [
[192.91662598 224.88342285]
[187.85107422 218.71838379]
[183.51434326 212.01890564]
[179.96234131 204.87075806]
[177.24092102 197.36547852]
[175.38529968 189.59922791]
[174.41957092 181.67156982]
[174.35644531 173.68412781]
[175.19706726 165.73937988]
[176.93095398 157.93925476]
[179.53619385 150.38388062]
[166.34912109 143.23535156]
[153.16206360 136.08682251]
[139.97500610 128.93829346]
[126.69316864 121.96743774]
[113.31894684 115.17552948]
[93.05607605 123.96144104]
[71.50599670 108.38904572]
[56.99137497 112.17398071]
[42.47675323 115.95891571]
[27.96212959 119.74385834]
[13.44750786 123.52879333]
[2.16036391 135.42553711]
[-13.72077942 131.33636475]
[-17.85876274 115.46786499]
[-5.99678421 104.14419556]
[9.66257000 109.01417542]
[24.17719078 105.22923279]
[38.69181442 101.44429779]
[53.20643616 97.65935516]
[67.72105408 93.87442017]
[53.16868210 90.23733521]
[38.61630630 86.60025024]
[24.06393242 82.96316528]
[9.31574917 85.70014954]
[-5.39002848 82.74378204]
[-17.93471909 74.51998901]
[-26.51099014 62.21358871]
[-29.88324738 47.59757233]
[-27.56564713 32.77769852]
[-19.89208603 19.88908005]
[-7.96810722 10.78860092]
[6.48838711 6.78738022]
[21.39462852 8.46187782]
[34.60305786 15.57084751]
[44.21071243 27.09008980]
[48.83353043 41.36100006]
[58.96623611 52.42121124]
[69.09893799 63.48142624]
[79.23164368 74.54164124]
[75.64190674 59.97751236]
[72.05216980 45.41338348]
[62.39097595 31.48149300]
[73.10391998 18.34112740]
[88.69638824 24.99778938]
[86.61629486 41.82365036]
[90.20603180 56.38777542]
[93.79576874 70.95190430]
[116.54067993 81.32449341]
[120.11084747 101.80130005]
[133.48507690 108.59320831]
[142.68496704 109.71857452]
[147.12355042 115.75122833]
[160.31060791 122.89975739]
[173.49766541 130.04829407]
[186.68472290 137.19682312]
[205.22846985 118.88024902]
[229.13539124 108.55818176]
[255.13404846 107.62361908]
[279.67391968 116.18630219]
[299.41009521 133.06018066]
[311.65942383 155.92764282]
[326.35629272 152.92726135]
[341.05316162 149.92687988]
[350.36523438 135.19215393]
[367.11059570 131.75421143]
[380.92098999 141.24752808]
[395.53201294 137.85363770]
[410.14300537 134.45974731]
[424.75402832 131.06587219]
[439.36502075 127.67198181]
[450.96752930 116.08256531]
[466.73315430 120.59664154]
[470.44360352 136.57051086]
[458.28189087 147.57164001]
[442.75891113 142.28298950]
[428.14791870 145.67687988]
[413.53689575 149.07075500]
[398.92590332 152.46464539]
[384.31488037 155.85853577]
[379.05139160 167.70257568]
[367.73770142 174.41746521]
[354.43011475 173.33297729]
[344.05352783 164.62373352]
[329.35668945 167.62413025]
[314.65982056 170.62451172]
[314.97137451 178.56648254]
[314.38278198 186.49415588]
[312.90127563 194.30581665]
[310.54553223 201.90119934]
[307.34548950 209.18280029]
[303.34188843 216.05706787]
[298.58578491 222.43566895]
[293.13796997 228.23660278]
[287.06808472 233.38523865]
[280.45376587 237.81526184]
[273.37969971 241.46961975]
[265.93643188 244.30114746]
[258.21936035 246.27320862]
[250.32740784 247.36019897]
[242.36174011 247.54786682]
[234.42453003 246.83348083]
[226.61761475 245.22589111]
[219.04119873 242.74539185]
[211.79258728 239.42352295]
[204.96487427 235.30256653]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 66]
[12 65]
[13 64]
[14 63]
[15 61]
[16 60]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[50 58]
[51 57]
[52 56]
[72 96]
[73 95]
[74 94]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
] def

init

% Start Annotations
11 66 0.0 0.6 colorpair
12 65 0.0 1 colorpair
13 64 0.0 1 colorpair
14 63 0.0 1 colorpair
15 61 0.16 1 colorpair
16 60 0.0 1 colorpair
18 31 0.0 1 colorpair
19 30 0.0 1 colorpair
20 29 0.0 1 colorpair
21 28 0.0 0.6 colorpair
22 27 0.0 0.6 colorpair
50 58 0.16 1 colorpair
51 57 0.0 0.6 colorpair
52 56 0.0 1 colorpair
72 96 0.0 1 colorpair
73 95 0.0 1 colorpair
74 94 0.0 1 colorpair
77 90 0.0 1 colorpair
78 89 0.0 1 colorpair
79 88 0.0 1 colorpair
80 87 0.0 1 colorpair
81 86 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
11 66 1 gmark
61 cmark
21 28 1 gmark
22 27 1 gmark
50 cmark
51 57 1 gmark
81 86 1 gmark

% End Annotations
showpage
end
%%EOF
