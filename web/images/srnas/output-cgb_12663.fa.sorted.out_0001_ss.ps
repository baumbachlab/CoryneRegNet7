%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUCCAUUGCAUCUCAGAUCGGUAUGAGCCCUUCUGCACGCCACAUUAAGCCUGAGGCUUUGGCGGAACGCAUCGCCGCUCUACCAGAACAAAUGAAGGUUACAGCCCGGGCCAAGA\
) } def
/len { sequence length } bind def

/coor [
[159.00009155 312.78396606]
[156.71112061 305.46264648]
[156.36784363 297.77734375]
[158.00439453 290.23773193]
[161.52319336 283.34680176]
[166.70072937 277.56719971]
[160.19247437 264.05267334]
[153.68421936 250.53813171]
[147.17596436 237.02360535]
[132.51234436 234.55049133]
[121.99231720 223.78976440]
[119.80017090 208.72166443]
[126.98397064 195.09451294]
[120.47571564 181.57997131]
[113.96745300 168.06544495]
[107.24766541 181.47604370]
[93.09198761 186.43756104]
[79.47035217 180.15653992]
[74.05204010 166.16934204]
[79.88767242 152.35104370]
[93.69166565 146.48164368]
[107.69142151 151.86512756]
[103.39640045 137.49317932]
[99.10137177 123.12123871]
[94.80635071 108.74929047]
[89.60279083 102.45022583]
[90.59304047 93.94103241]
[86.67888641 79.46072388]
[82.76473999 64.98041534]
[78.85058594 50.50010300]
[63.90129089 47.62260437]
[51.73339081 38.57665634]
[44.72836304 25.19944572]
[44.22815704 10.16911697]
[50.27845383 -3.53136897]
[61.63021851 -13.20622921]
[57.71606827 -27.68654060]
[53.80191803 -42.16685104]
[37.65028763 -56.12147522]
[43.29886246 -75.89966583]
[38.25134277 -90.02490997]
[33.20381927 -104.15015411]
[28.15629959 -118.27539825]
[23.10877800 -132.40063477]
[19.45680046 -135.25270081]
[17.20883560 -138.79138184]
[16.40542984 -142.46258545]
[16.89330482 -145.76049805]
[18.36041260 -148.28955078]
[14.82985878 -162.86814880]
[11.29930592 -177.44673157]
[7.76875305 -192.02531433]
[4.23820019 -206.60389709]
[-5.36633205 -220.57492065]
[5.39989281 -233.67166138]
[20.96520042 -226.95172119]
[18.81678772 -210.13446045]
[22.34733963 -195.55586243]
[25.87789345 -180.97727966]
[29.40844536 -166.39869690]
[32.93899918 -151.82011414]
[37.23402023 -137.44816589]
[42.28154373 -123.32292175]
[47.32906342 -109.19767761]
[52.37658691 -95.07243347]
[57.42410660 -80.94718933]
[66.16689301 -78.43105316]
[72.82027435 -72.02439117]
[75.75176239 -63.11914825]
[74.15857697 -53.73930359]
[68.28222656 -46.08100510]
[72.19638062 -31.60069275]
[76.11053467 -17.12038231]
[90.79062653 -14.48215485]
[102.91936493 -5.69561768]
[110.05963898 7.53984356]
[110.74809265 22.62447929]
[104.79465485 36.56877899]
[93.33089447 46.58594894]
[97.24504852 61.06626129]
[101.15920258 75.54656982]
[105.07334900 90.02688599]
[109.17829895 104.45426941]
[113.47332001 118.82621002]
[117.76834106 133.19815063]
[122.06336212 147.57009888]
[127.48198700 161.55718994]
[133.99024963 175.07171631]
[140.49850464 188.58625793]
[155.63166809 191.46612549]
[166.04560852 202.57482910]
[167.89955139 217.50891113]
[160.69049072 230.51535034]
[167.19874573 244.02987671]
[173.70700073 257.54440308]
[180.21525574 271.05895996]
[203.20501709 276.15374756]
[215.30590820 296.06466675]
[209.36825562 318.33871460]
[218.56500244 330.18862915]
[227.76173401 342.03851318]
[236.95846558 353.88839722]
[252.46290588 353.26232910]
[265.35556030 361.89709473]
[270.67892456 376.47247314]
[266.38607788 391.38391113]
[254.12770081 400.89767456]
[238.61737061 401.35552979]
[225.81915283 392.58139038]
[220.65420532 377.94912720]
[225.10856628 363.08514404]
[215.91183472 351.23526001]
[206.71510315 339.38534546]
[197.51837158 327.53546143]
[190.27949524 329.63671875]
[182.72183228 329.81909180]
[175.34687805 328.05917358]
[168.64686584 324.46273804]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 96]
[7 95]
[8 94]
[9 93]
[13 89]
[14 88]
[15 87]
[22 86]
[23 85]
[24 84]
[25 83]
[27 82]
[28 81]
[29 80]
[30 79]
[36 73]
[37 72]
[38 71]
[40 66]
[41 65]
[42 64]
[43 63]
[44 62]
[49 61]
[50 60]
[51 59]
[52 58]
[53 57]
[99 114]
[100 113]
[101 112]
[102 111]
] def

init

% Start Annotations
6 96 0.0 1 colorpair
7 95 0.0 1 colorpair
8 94 0.0 1 colorpair
9 93 0.0 1 colorpair
13 89 0.0 1 colorpair
14 88 0.0 1 colorpair
15 87 0.0 1 colorpair
22 86 0.0 1 colorpair
23 85 0.0 1 colorpair
24 84 0.0 1 colorpair
25 83 0.0 1 colorpair
27 82 0.0 1 colorpair
28 81 0.0 1 colorpair
29 80 0.0 1 colorpair
30 79 0.0 1 colorpair
36 73 0.0 1 colorpair
37 72 0.0 1 colorpair
38 71 0.0 1 colorpair
40 66 0.0 1 colorpair
41 65 0.0 1 colorpair
42 64 0.0 1 colorpair
43 63 0.0 1 colorpair
44 62 0.0 1 colorpair
49 61 0.0 1 colorpair
50 60 0.0 1 colorpair
51 59 0.0 1 colorpair
52 58 0.0 1 colorpair
53 57 0.0 1 colorpair
99 114 0.0 1 colorpair
100 113 0.0 1 colorpair
101 112 0.0 1 colorpair
102 111 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
