%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUUGGAAUUCGUGACUCUUUUUCGUUCCUGUAGCGCCAAGACCUUGAUCAAGGUGGUUUAAAAAAACCGAUUUGACAAGGUCAUUCAGUGCUAUCUGGAGUCGUUCAGGG\
) } def
/len { sequence length } bind def

/coor [
[12.90498352 297.92135620]
[6.82934284 311.63583374]
[0.75370175 325.35031128]
[8.65333843 338.70602417]
[7.16046715 354.15112305]
[-3.15087271 365.74664307]
[-18.31575966 369.03384399]
[-32.50298691 362.74877930]
[-40.25727463 349.30813599]
[-38.59694290 333.88015747]
[-28.16041946 322.39718628]
[-12.96076488 319.27465820]
[-6.88512325 305.56018066]
[-0.80948246 291.84573364]
[-4.87752771 280.36007690]
[0.18546915 268.83572388]
[12.13711834 263.74609375]
[18.59164810 250.20582581]
[25.04617691 236.66555786]
[31.50070763 223.12527466]
[24.03668785 211.96228027]
[23.09142685 198.45814514]
[29.02197456 186.16833496]
[40.36077499 178.38238525]
[54.17723846 177.24353027]
[61.00566864 163.88790894]
[67.64778900 150.43865967]
[74.10231781 136.89839172]
[80.55684662 123.35810852]
[87.01137543 109.81783295]
[85.20677185 93.19892120]
[98.99621582 83.74925995]
[105.07186127 70.03479004]
[111.14749908 56.32032776]
[117.22314453 42.60586166]
[123.29878235 28.89139366]
[129.37442017 15.17692757]
[135.45005798 1.46246088]
[125.89749146 -13.80955982]
[127.30314636 -31.61224937]
[138.92997742 -44.96147919]
[156.06762695 -48.73081970]
[161.37170410 -62.76174164]
[166.67578125 -76.79266357]
[171.97984314 -90.82358551]
[177.28392029 -104.85450745]
[182.58799744 -118.88543701]
[187.89207458 -132.91635132]
[188.01606750 -142.19465637]
[193.54353333 -147.26017761]
[199.23558044 -161.13824463]
[204.92764282 -175.01629639]
[210.61970520 -188.89434814]
[216.31175232 -202.77241516]
[214.38993835 -218.47645569]
[226.37814331 -227.31570435]
[232.07019043 -241.19375610]
[237.76225281 -255.07182312]
[243.45431519 -268.94989014]
[249.14636230 -282.82794189]
[254.83842468 -296.70599365]
[252.10639954 -312.87597656]
[264.91473389 -323.11700439]
[280.08728027 -316.89401245]
[282.01583862 -300.60867310]
[268.71649170 -291.01394653]
[263.02441406 -277.13589478]
[257.33236694 -263.25781250]
[251.64030457 -249.37976074]
[245.94825745 -235.50170898]
[240.25619507 -221.62364197]
[242.58515930 -206.91224670]
[230.18981934 -197.08035278]
[224.49775696 -183.20230103]
[218.80570984 -169.32423401]
[213.11364746 -155.44618225]
[207.42158508 -141.56813049]
[201.92298889 -127.61228180]
[196.61892700 -113.58135986]
[191.31484985 -99.55043793]
[186.01077271 -85.51951599]
[180.70669556 -71.48859406]
[175.40263367 -57.45766830]
[170.09855652 -43.42674637]
[178.28260803 -34.24766159]
[181.75413513 -22.37430954]
[179.78092957 -10.08859062]
[172.68350220 0.22032571]
[161.78489685 6.52060890]
[149.16453552 7.53810215]
[143.08888245 21.25256920]
[137.01324463 34.96703339]
[130.93760681 48.68149948]
[124.86196899 62.39596558]
[118.78632355 76.11043549]
[112.71068573 89.82489777]
[116.25016022 101.01313782]
[111.34840393 111.67510223]
[100.55165100 116.27236176]
[94.09712219 129.81263733]
[87.64259338 143.35292053]
[81.18806458 156.89318848]
[80.29153442 166.12890625]
[74.36128998 170.71633911]
[67.53285980 184.07196045]
[75.38938141 198.97456360]
[72.89183807 215.46798706]
[61.20920181 227.14273071]
[45.04098129 229.57980347]
[38.58645248 243.12008667]
[32.13192368 256.66036987]
[25.67739296 270.20062256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[17 112]
[18 111]
[19 110]
[20 109]
[25 105]
[26 104]
[27 102]
[28 101]
[29 100]
[30 99]
[32 96]
[33 95]
[34 94]
[35 93]
[36 92]
[37 91]
[38 90]
[42 84]
[43 83]
[44 82]
[45 81]
[46 80]
[47 79]
[48 78]
[50 77]
[51 76]
[52 75]
[53 74]
[54 73]
[56 71]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
] def

init

% Start Annotations
1 14 0.0 1 colorpair
2 13 0.0 1 colorpair
3 12 0.0 1 colorpair
17 112 0.0 1 colorpair
18 111 0.0 1 colorpair
19 110 0.0 1 colorpair
20 109 0.0 1 colorpair
25 105 0.0 1 colorpair
26 104 0.0 1 colorpair
27 102 0.0 1 colorpair
28 101 0.0 1 colorpair
29 100 0.0 1 colorpair
30 99 0.0 1 colorpair
32 96 0.0 1 colorpair
33 95 0.0 1 colorpair
34 94 0.0 1 colorpair
35 93 0.0 1 colorpair
36 92 0.0 1 colorpair
37 91 0.0 1 colorpair
38 90 0.0 1 colorpair
42 84 0.0 1 colorpair
43 83 0.0 1 colorpair
44 82 0.0 1 colorpair
45 81 0.0 1 colorpair
46 80 0.0 1 colorpair
47 79 0.0 1 colorpair
48 78 0.0 1 colorpair
50 77 0.0 1 colorpair
51 76 0.0 1 colorpair
52 75 0.0 1 colorpair
53 74 0.0 1 colorpair
54 73 0.0 1 colorpair
56 71 0.0 1 colorpair
57 70 0.0 1 colorpair
58 69 0.0 1 colorpair
59 68 0.0 1 colorpair
60 67 0.0 1 colorpair
61 66 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
