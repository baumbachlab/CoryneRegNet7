%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__UCGGCUUUUUCGCAGCGGAACUCGACCGACCCACGACCAAAUGAUCUCCUACAUCGACGCGUACAAAGAUCAAUUUGGGGUCGAGGCCAUCUGCCGAGUCCUUAAACAGGCAGAUCGUGGAUUCA\
) } def
/len { sequence length } bind def

/coor [
[140.22471619 253.57000732]
[128.35188293 262.73712158]
[114.01596069 267.15087891]
[99.04309082 266.24902344]
[85.34057617 260.14648438]
[74.65387726 249.62060547]
[68.34429169 236.01217651]
[67.21556091 221.05470276]
[71.41146851 206.65351868]
[80.39751434 194.64306641]
[93.02904510 186.55328369]
[107.69700623 183.41467285]
[122.53295898 185.62704468]
[135.64521790 192.90707397]
[129.23188782 179.34722900]
[122.81855774 165.78738403]
[116.40523529 152.22755432]
[102.33846283 147.46713257]
[95.64127350 133.80688477]
[100.72980499 119.08464050]
[87.12300110 114.10457611]
[80.92793274 101.00620270]
[85.71035767 87.32868195]
[79.29702759 73.76884460]
[72.88370514 60.20900345]
[66.47037506 46.64916229]
[60.05704880 33.08932495]
[53.64372253 19.52948570]
[47.23039627 5.96964598]
[42.90954590 20.33384514]
[31.62288857 30.21369362]
[16.81320190 32.59553909]
[2.99788857 26.75284195]
[-5.60896254 14.46780491]
[-6.38199949 -0.51226211]
[0.91457748 -13.61798477]
[14.05508995 -20.85171890]
[29.03128433 -20.00695801]
[41.27505112 -11.34127140]
[37.98852921 -25.97680473]
[34.70201111 -40.61233521]
[31.41549301 -55.24786758]
[28.12897491 -69.88339996]
[24.84245682 -84.51892853]
[21.37658501 -99.11302948]
[17.73188210 -113.66349792]
[14.08717918 -128.21397400]
[10.44247627 -142.76443481]
[6.79777384 -157.31491089]
[-8.29716015 -158.11138916]
[-22.48612595 -163.32336426]
[-34.50745010 -172.48738098]
[-43.29220581 -184.78857422]
[-48.05926132 -199.13314819]
[-48.38472748 -214.24557495]
[-44.23966599 -228.78207397]
[-35.99265671 -241.45007324]
[-24.37701225 -251.12313843]
[-10.42559242 -256.94116211]
[4.62105465 -258.38677979]
[19.42498970 -255.33146667]
[32.66985703 -248.04690552]
[43.17793655 -237.18081665]
[50.01484680 -223.69943237]
[52.57266617 -208.80146790]
[50.62394714 -193.81167603]
[44.34196854 -180.06292725]
[34.28532410 -168.77775574]
[21.34824181 -160.95960999]
[24.99294472 -146.40913391]
[28.63764763 -131.85867310]
[32.28235245 -117.30820465]
[35.92705154 -102.75773621]
[40.65388870 -96.97290039]
[39.47798920 -87.80545044]
[42.76450729 -73.16992188]
[46.05102539 -58.53438568]
[49.33754349 -43.89885330]
[52.62406158 -29.26332283]
[55.91057968 -14.62779045]
[60.79023743 -0.44368058]
[67.20355988 13.11615849]
[73.61688995 26.67599869]
[80.03021240 40.23583603]
[86.44354248 53.79567719]
[92.85686493 67.35551453]
[99.27019501 80.91535950]
[112.87699890 85.89542389]
[119.07206726 98.99379730]
[114.28964233 112.67131805]
[128.89822388 118.07752228]
[135.20909119 131.92048645]
[129.96507263 145.81422424]
[136.37840271 159.37406921]
[142.79171753 172.93389893]
[149.20504761 186.49374390]
[157.29368591 192.13722229]
[159.20750427 200.69612122]
[169.81410217 211.30271912]
[180.42070007 221.90933228]
[191.02729797 232.51593018]
[201.63391113 243.12252808]
[212.24050903 253.72912598]
[225.83457947 247.05979919]
[240.85792542 245.16828918]
[255.68092346 248.25978088]
[268.69567871 255.99893188]
[278.49047852 267.54626465]
[284.00283813 281.64916992]
[284.63482666 296.77795410]
[280.31784058 311.29147339]
[271.52023315 323.61544800]
[259.19625854 332.41308594]
[244.68270874 336.73004150]
[229.55395508 336.09808350]
[215.45101929 330.58572388]
[203.90370178 320.79092407]
[196.16455078 307.77615356]
[193.07305908 292.95315552]
[194.96456909 277.92980957]
[201.63391113 264.33572388]
[191.02729797 253.72912598]
[180.42070007 243.12252808]
[169.81410217 232.51593018]
[159.20750427 221.90933228]
[148.60089111 211.30271912]
[151.03793335 226.10342407]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 96]
[15 95]
[16 94]
[17 93]
[20 90]
[23 87]
[24 86]
[25 85]
[26 84]
[27 83]
[28 82]
[29 81]
[39 80]
[40 79]
[41 78]
[42 77]
[43 76]
[44 75]
[45 73]
[46 72]
[47 71]
[48 70]
[49 69]
[98 126]
[99 125]
[100 124]
[101 123]
[102 122]
[103 121]
] def

init

% Start Annotations
14 96 0.0 1 colorpair
15 95 0.0 1 colorpair
16 94 0.0 1 colorpair
17 93 0.0 1 colorpair
20 90 0.0 1 colorpair
23 87 0.0 1 colorpair
24 86 0.0 1 colorpair
25 85 0.0 1 colorpair
26 84 0.0 1 colorpair
27 83 0.0 1 colorpair
28 82 0.0 1 colorpair
29 81 0.0 1 colorpair
39 80 0.0 1 colorpair
40 79 0.0 1 colorpair
41 78 0.0 1 colorpair
42 77 0.0 0.6 colorpair
43 76 0.0 1 colorpair
44 75 0.0 1 colorpair
45 73 0.0 1 colorpair
46 72 0.0 0.6 colorpair
47 71 0.0 1 colorpair
48 70 0.0 1 colorpair
49 69 0.16 1 colorpair
98 126 0.0 1 colorpair
99 125 0.0 1 colorpair
100 124 0.0 1 colorpair
101 123 0.0 1 colorpair
102 122 0.16 1 colorpair
103 121 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
42 77 1 gmark
46 72 1 gmark
69 cmark
102 cmark
103 121 1 gmark

% End Annotations
showpage
end
%%EOF
