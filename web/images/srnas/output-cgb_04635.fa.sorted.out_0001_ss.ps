%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:35:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCCAGUUCCUUGAGUCCGCGGAUUGCUUCGGCGGAGGUGUCUUUGACGGUGUCGCGGACCGUGAUUAUUCCGGAAUCUACGCCGUCAAUCGUGACGACUACGGGGGUUCC\
) } def
/len { sequence length } bind def

/coor [
[77.73184967 391.09140015]
[63.02338028 394.92929077]
[47.96651840 392.84140015]
[34.85732651 385.14608765]
[25.69486237 373.01687622]
[21.87633514 358.30337524]
[23.98404312 343.24926758]
[31.69657516 330.15020752]
[43.83782578 321.00372314]
[58.55634308 317.20455933]
[60.61664581 302.34671021]
[62.67694855 287.48889160]
[64.73725128 272.63107300]
[66.79755402 257.77322388]
[68.85785675 242.91539001]
[70.71324921 228.03059387]
[72.36337280 213.12162781]
[74.01349640 198.21266174]
[75.66362000 183.30371094]
[76.90231323 168.35493469]
[77.72862244 153.37771606]
[78.55493927 138.40049744]
[79.38125610 123.42327118]
[70.83413696 111.09660339]
[56.51806259 106.61888123]
[42.20198822 102.14115906]
[32.93496704 102.55801392]
[27.55619812 97.33779144]
[13.36893940 92.46730042]
[-0.81831920 87.59680939]
[-15.00557804 82.72631836]
[-29.19283676 77.85582733]
[-45.17530823 81.52905273]
[-56.14806366 69.34173584]
[-50.82326889 53.83113861]
[-34.67861938 50.95323563]
[-24.32234383 63.66856766]
[-10.13508606 68.53905487]
[4.05217266 73.40955353]
[18.23943138 78.28004456]
[32.42668915 83.15053558]
[46.67971039 87.82508850]
[60.99578476 92.30281067]
[75.31185913 96.78053284]
[87.53113556 82.27003479]
[103.94235229 81.97234344]
[112.82588196 69.88587189]
[121.70941162 57.79939270]
[130.59294128 45.71291733]
[139.47647095 33.62643814]
[148.36000061 21.53996277]
[157.24353027 9.45348549]
[166.12705994 -2.63299084]
[175.01058960 -14.71946716]
[183.89411926 -26.80594444]
[184.48205566 -32.27502441]
[186.93843079 -36.48293686]
[190.43087769 -38.91553116]
[194.04440308 -39.48273468]
[203.89569092 -50.79433441]
[213.74696350 -62.10593414]
[223.28282166 -73.68468475]
[232.49601746 -85.52178955]
[241.70919800 -97.35890198]
[244.56817627 -106.18373871]
[251.34297180 -109.39060211]
[260.87884521 -120.96935272]
[263.04287720 -137.22509766]
[278.30389404 -143.22785950]
[290.96267700 -132.80253601]
[287.99691772 -116.67378998]
[272.45758057 -111.43350220]
[262.92172241 -99.85475159]
[253.54631042 -88.14570618]
[244.33311462 -76.30860138]
[235.11993408 -64.47149658]
[234.83883667 -59.57682037]
[231.38629150 -54.84352112]
[225.05856323 -52.25465393]
[215.20729065 -40.94305420]
[205.35600281 -29.63145638]
[195.98059082 -17.92241478]
[187.09706116 -5.83593845]
[178.21353149 6.25053787]
[169.33000183 18.33701515]
[160.44647217 30.42349052]
[151.56294250 42.50996780]
[142.67941284 54.59644318]
[133.79588318 66.68292236]
[124.91236115 78.76939392]
[116.02883148 90.85587311]
[117.37966156 112.95266724]
[94.35848236 124.24958801]
[93.53216553 139.22680664]
[92.70584869 154.20404053]
[91.87953186 169.18125916]
[94.60992432 175.44921875]
[93.78413391 181.24940491]
[90.57257843 184.95382690]
[88.92245483 199.86279297]
[87.27233124 214.77174377]
[85.62220764 229.68070984]
[87.80792236 238.69592285]
[83.71569061 244.97569275]
[81.65538788 259.83352661]
[79.59508514 274.69137573]
[77.53478241 289.54919434]
[75.47447968 304.40701294]
[73.41417694 319.26486206]
[86.54356384 326.92562866]
[95.73790741 339.03070068]
[99.59513092 353.73410034]
[97.52703857 368.79370117]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 109]
[11 108]
[12 107]
[13 106]
[14 105]
[15 104]
[16 102]
[17 101]
[18 100]
[19 99]
[20 96]
[21 95]
[22 94]
[23 93]
[24 44]
[25 43]
[26 42]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[46 91]
[47 90]
[48 89]
[49 88]
[50 87]
[51 86]
[52 85]
[53 84]
[54 83]
[55 82]
[59 81]
[60 80]
[61 79]
[62 76]
[63 75]
[64 74]
[66 73]
[67 72]
] def

init

% Start Annotations
10 109 0.0 1 colorpair
11 108 0.0 1 colorpair
12 107 0.0 1 colorpair
13 106 0.0 1 colorpair
14 105 0.0 1 colorpair
15 104 0.0 1 colorpair
16 102 0.0 1 colorpair
17 101 0.0 1 colorpair
18 100 0.0 1 colorpair
19 99 0.0 1 colorpair
20 96 0.0 1 colorpair
21 95 0.0 1 colorpair
22 94 0.0 1 colorpair
23 93 0.0 1 colorpair
24 44 0.0 1 colorpair
25 43 0.0 1 colorpair
26 42 0.0 1 colorpair
28 41 0.0 1 colorpair
29 40 0.0 1 colorpair
30 39 0.0 1 colorpair
31 38 0.0 1 colorpair
32 37 0.0 1 colorpair
46 91 0.0 1 colorpair
47 90 0.0 1 colorpair
48 89 0.0 1 colorpair
49 88 0.0 1 colorpair
50 87 0.0 1 colorpair
51 86 0.0 1 colorpair
52 85 0.0 1 colorpair
53 84 0.0 1 colorpair
54 83 0.0 1 colorpair
55 82 0.0 1 colorpair
59 81 0.0 1 colorpair
60 80 0.0 1 colorpair
61 79 0.0 1 colorpair
62 76 0.0 1 colorpair
63 75 0.0 1 colorpair
64 74 0.0 1 colorpair
66 73 0.0 1 colorpair
67 72 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
