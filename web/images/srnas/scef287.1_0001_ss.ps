%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUUUUUUCGCGGCGGAGCUCGACCGCCCACAGAAGUAAUCGUGCGGUUCAUCGACGACAACCGCGACGAGUUCGGGGUCGAGCCCAUCAUCCGUGUCCUGGCCACCACCAGCGCGAAGAUUGCCCUG\
) } def
/len { sequence length } bind def

/coor [
[105.96409607 285.66256714]
[104.87757874 270.70196533]
[103.79105377 255.74136353]
[92.39087677 246.22445679]
[91.07587433 231.06776428]
[101.13538361 219.17472839]
[100.04885864 204.21414185]
[98.96233368 189.25354004]
[97.87581635 174.29293823]
[96.78929138 159.33235168]
[95.70277405 144.37174988]
[94.61624908 129.41114807]
[93.52972412 114.45055389]
[89.41452789 100.02609253]
[82.44367981 86.74424744]
[75.47283173 73.46240997]
[68.50198364 60.18056870]
[61.53113937 46.89872742]
[53.61653519 34.15671158]
[44.79975510 22.02145576]
[35.98297501 9.88619995]
[27.16619873 -2.24905491]
[18.34941864 -14.38430977]
[9.53264046 -26.51956558]
[0.71586150 -38.65481949]
[-8.10091686 -50.79007339]
[-15.75697708 -55.96031189]
[-16.97992897 -63.32678223]
[-25.50090027 -75.67153931]
[-29.71003151 -77.46672058]
[-32.76581573 -80.26499176]
[-34.49093628 -83.55845642]
[-34.89945602 -86.83519745]
[-34.18026733 -89.64478302]
[-41.47001648 -102.75430298]
[-48.75976944 -115.86382294]
[-61.97048187 -114.14302826]
[-74.94152832 -117.03811646]
[-86.11267090 -124.17833710]
[-94.14788055 -134.68368530]
[-98.09510803 -147.27328491]
[-97.49906158 -160.42156982]
[-92.45359802 -172.54309082]
[-83.58776093 -182.18379211]
[-90.23563385 -195.63020325]
[-96.88350677 -209.07659912]
[-103.53137970 -222.52301025]
[-110.17925262 -235.96940613]
[-116.82712555 -249.41581726]
[-123.47499847 -262.86221313]
[-138.80697632 -263.77120972]
[-151.62150574 -272.23782349]
[-158.47155762 -285.98452759]
[-157.51451111 -301.31359863]
[-149.00778198 -314.10153198]
[-135.23965454 -320.90844727]
[-119.91368866 -319.90335083]
[-107.15248108 -311.35659790]
[-100.38874054 -297.56719971]
[-101.44187164 -282.24444580]
[-110.02859497 -269.51010132]
[-103.38072205 -256.06369019]
[-96.73284912 -242.61727905]
[-90.08497620 -229.17088318]
[-83.43710327 -215.72447205]
[-76.78923035 -202.27807617]
[-70.14135742 -188.83166504]
[-53.34599304 -189.52296448]
[-37.86749649 -182.82762146]
[-26.79846191 -170.03138733]
[-22.37302399 -153.64407349]
[-25.51602745 -136.90737915]
[-35.65024567 -123.15357208]
[-28.36049652 -110.04405212]
[-21.07074547 -96.93453217]
[-13.15614128 -84.19251251]
[-4.63517046 -71.84775543]
[4.03433752 -59.60685349]
[12.85111618 -47.47159958]
[21.66789436 -35.33634186]
[30.48467445 -23.20108795]
[39.30145264 -11.06583405]
[48.11823273 1.06942117]
[56.93500900 13.20467567]
[65.75179291 25.33993149]
[69.81340790 10.90028858]
[82.78512573 3.36805773]
[97.33924103 6.99818516]
[105.25414276 19.74001694]
[102.05872345 34.39570999]
[89.55805969 42.68627548]
[74.81298065 39.92787933]
[81.78382874 53.20972061]
[88.75467682 66.49156189]
[95.72551727 79.77339935]
[102.69636536 93.05524445]
[107.10324860 89.44704437]
[113.08763123 87.65399170]
[120.02256012 88.15667725]
[127.15609741 91.23994446]
[140.75921631 97.56095886]
[154.36233521 103.88198090]
[167.96543884 110.20299530]
[182.72145081 104.54295349]
[197.12356567 111.05099487]
[202.62727356 125.86601257]
[195.96733093 140.19851685]
[181.09495544 145.54528809]
[166.83366394 138.73419189]
[161.64442444 123.80610657]
[148.04130554 117.48509216]
[134.43820190 111.16407776]
[120.83508301 104.84306335]
[108.49032593 113.36402893]
[109.57684326 128.32463074]
[110.66336823 143.28523254]
[111.74989319 158.24581909]
[112.83641052 173.20642090]
[113.92293549 188.16702271]
[115.00945282 203.12760925]
[116.09597778 218.08821106]
[127.76834106 228.40295410]
[128.65710449 243.59059143]
[118.75164795 254.65484619]
[119.83817291 269.61544800]
[120.92469788 284.57604980]
[130.57420349 297.83572388]
[123.66938019 312.71035767]
[107.31331635 313.89822388]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 126]
[2 125]
[3 124]
[6 121]
[7 120]
[8 119]
[9 118]
[10 117]
[11 116]
[12 115]
[13 114]
[14 96]
[15 95]
[16 94]
[17 93]
[18 92]
[19 85]
[20 84]
[21 83]
[22 82]
[23 81]
[24 80]
[25 79]
[26 78]
[28 77]
[29 76]
[34 75]
[35 74]
[36 73]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[100 113]
[101 112]
[102 111]
[103 110]
] def

init

% Start Annotations
1 126 0.0 0.6 colorpair
2 125 0.0 0.6 colorpair
3 124 0.0 0.6 colorpair
6 121 0.0 1 colorpair
7 120 0.16 1 colorpair
8 119 0.0 1 colorpair
9 118 0.0 1 colorpair
10 117 0.0 1 colorpair
11 116 0.0 1 colorpair
12 115 0.0 1 colorpair
13 114 0.0 1 colorpair
14 96 0.16 1 colorpair
15 95 0.0 1 colorpair
16 94 0.0 0.6 colorpair
17 93 0.16 1 colorpair
18 92 0.0 1 colorpair
19 85 0.0 1 colorpair
20 84 0.16 1 colorpair
21 83 0.0 0.6 colorpair
22 82 0.16 1 colorpair
23 81 0.0 1 colorpair
24 80 0.0 1 colorpair
25 79 0.0 0.6 colorpair
26 78 0.0 1 colorpair
28 77 0.0 1 colorpair
29 76 0.0 1 colorpair
34 75 0.0 0.6 colorpair
35 74 0.0 1 colorpair
36 73 0.0 1 colorpair
44 67 0.0 0.6 colorpair
45 66 0.32 1 colorpair
46 65 0.0 0.6 colorpair
47 64 0.0 0.6 colorpair
48 63 0.0 0.6 colorpair
49 62 0.0 1 colorpair
50 61 0.0 0.6 colorpair
100 113 0.0 0.6 colorpair
101 112 0.0 1 colorpair
102 111 0.0 1 colorpair
103 110 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
1 126 1 gmark
2 125 1 gmark
3 124 1 gmark
7 cmark
96 cmark
16 94 1 gmark
93 cmark
20 cmark
21 83 1 gmark
22 cmark
25 79 1 gmark
34 75 1 gmark
44 67 1 gmark
45 cmark
66 cmark
46 65 1 gmark
47 64 1 gmark
48 63 1 gmark
50 61 1 gmark
100 113 1 gmark

% End Annotations
showpage
end
%%EOF
