%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGGUGCCUCCUGUUUUAGGUGAUUUUAGUACUGUCCACGGCUUGAGCUUUGACUUGCUUCCCACCGACUUUCGCCGGUAAGAAAAACUCCUCAUUGAGCCUGCCUGACUCAAGCUUAC\
) } def
/len { sequence length } bind def

/coor [
[-81.62507629 241.22885132]
[-93.76033783 250.04563904]
[-105.89559174 258.86242676]
[-118.03084564 267.67919922]
[-130.16609192 276.49597168]
[-142.30136108 285.31274414]
[-154.43661499 294.12951660]
[-165.84269714 303.87124634]
[-170.12979126 319.10055542]
[-184.60043335 322.62899780]
[-195.20703125 333.23559570]
[-205.81364441 343.84219360]
[-216.42024231 354.44879150]
[-223.34478760 369.92416382]
[-240.13227844 367.55422974]
[-242.50221252 350.76672363]
[-227.02684021 343.84219360]
[-216.42024231 333.23559570]
[-205.81364441 322.62899780]
[-195.20703125 312.02236938]
[-191.67858887 297.55175781]
[-176.44929504 293.26464844]
[-191.32881165 291.36718750]
[-200.69839478 279.65347290]
[-199.28120422 264.72058105]
[-187.87538147 254.97854614]
[-172.90458679 255.91398621]
[-162.80020142 267.00009155]
[-163.25338745 281.99426270]
[-151.11813354 273.17749023]
[-138.98287964 264.36071777]
[-126.84762573 255.54393005]
[-114.71237183 246.72715759]
[-102.57711029 237.91038513]
[-90.44185638 229.09359741]
[-92.13457489 214.29493713]
[-86.15287018 200.54447937]
[-74.01138306 191.57505798]
[-58.91137695 189.87605286]
[-44.89694595 196.00328064]
[-32.76169205 187.18650818]
[-20.62643623 178.36972046]
[-8.49118137 169.55294800]
[3.64407325 160.73617554]
[15.77932835 151.91938782]
[27.91458321 143.10261536]
[40.04983902 134.28582764]
[34.10905457 120.68631744]
[31.21087456 106.13158417]
[31.48911858 91.29371643]
[34.93094254 76.85787964]
[41.37741089 63.49065399]
[50.53085709 51.80929565]
[61.96860504 42.35320282]
[75.16249847 35.55902863]
[89.50329590 31.74049950]
[104.32879639 31.07394028]
[118.95440674 33.59012985]
[132.70477295 39.17288208]
[141.20086670 26.81098938]
[149.69696045 14.44909763]
[147.02433777 -0.89674520]
[155.81669617 -13.31243229]
[170.46307373 -15.76579094]
[178.95916748 -28.12768364]
[187.45526123 -40.48957825]
[195.95135498 -52.85147095]
[190.64489746 -67.43300629]
[194.95506287 -82.33945465]
[207.22447205 -91.83898163]
[222.73532104 -92.27882385]
[235.52334595 -83.48986053]
[240.67129517 -68.85161591]
[236.19969177 -53.99280167]
[223.82794189 -44.62693024]
[208.31324768 -44.35537720]
[199.81715393 -31.99348259]
[191.32106018 -19.63158989]
[182.82496643 -7.26969767]
[185.78335571 7.28308678]
[177.34321594 19.94083405]
[162.05885315 22.94519043]
[153.56275940 35.30708313]
[145.06666565 47.66897583]
[155.95516968 59.52088928]
[163.80484009 73.57117462]
[168.18933105 89.05677032]
[168.87055969 105.13668060]
[183.61938477 107.87020874]
[198.36820984 110.60374451]
[211.24934387 101.44667053]
[226.81857300 104.16231537]
[235.83894348 117.13954163]
[232.95884705 132.67918396]
[219.88697815 141.56185913]
[204.37864685 138.51762390]
[195.63467407 125.35256958]
[180.88584900 122.61903381]
[166.13703918 119.88549805]
[160.49751282 133.31053162]
[152.16850281 145.25469971]
[141.52027893 155.18701172]
[129.02622986 162.66592407]
[115.24177551 167.35894775]
[100.77973175 169.05744934]
[86.28302765 167.68592834]
[72.39612579 163.30534363]
[59.73638916 156.11044312]
[48.86661530 146.42108154]
[36.73136139 155.23786926]
[24.59610748 164.05464172]
[12.46085167 172.87142944]
[0.32559714 181.68820190]
[-11.80965805 190.50497437]
[-23.94491196 199.32176208]
[-36.08016586 208.13853455]
[-34.58352280 223.36047363]
[-40.86552429 237.19641113]
[-53.14788437 245.97195435]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 35]
[2 34]
[3 33]
[4 32]
[5 31]
[6 30]
[7 29]
[8 22]
[10 20]
[11 19]
[12 18]
[13 17]
[40 116]
[41 115]
[42 114]
[43 113]
[44 112]
[45 111]
[46 110]
[47 109]
[59 84]
[60 83]
[61 82]
[64 79]
[65 78]
[66 77]
[67 76]
[88 99]
[89 98]
[90 97]
] def

init

% Start Annotations
1 35 0.0 1 colorpair
2 34 0.0 1 colorpair
3 33 0.0 1 colorpair
4 32 0.16 1 colorpair
5 31 0.0 1 colorpair
6 30 0.0 1 colorpair
7 29 0.0 1 colorpair
8 22 0.0 1 colorpair
10 20 0.0 1 colorpair
11 19 0.0 1 colorpair
12 18 0.0 1 colorpair
13 17 0.0 1 colorpair
40 116 0.0 1 colorpair
41 115 0.0 1 colorpair
42 114 0.0 1 colorpair
43 113 0.0 1 colorpair
44 112 0.0 1 colorpair
45 111 0.0 1 colorpair
46 110 0.0 1 colorpair
47 109 0.0 1 colorpair
59 84 0.0 1 colorpair
60 83 0.0 0.6 colorpair
61 82 0.0 1 colorpair
64 79 0.0 1 colorpair
65 78 0.16 1 colorpair
66 77 0.0 1 colorpair
67 76 0.0 0.6 colorpair
88 99 0.0 1 colorpair
89 98 0.0 0.6 colorpair
90 97 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
32 cmark
60 83 1 gmark
65 cmark
78 cmark
67 76 1 gmark
89 98 1 gmark

% End Annotations
showpage
end
%%EOF
