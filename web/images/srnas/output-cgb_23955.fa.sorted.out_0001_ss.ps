%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UAUACCGUACGUCUUAGAAGAGGUAGAAGCAUUCAUAGGCUUCGCAGACUGAGCUUUAACGUGAGAAUCAGCUUGUGCUUUAGCUGGAGUUUUAUCUGGUUCUGGCAGUUUAGGGGGAACAAGAGUCCAUCCCAGCACUGGAACUCGCGAGAUCAGAUAGGUCAGG\
) } def
/len { sequence length } bind def

/coor [
[96.76693726 203.16865540]
[91.75881958 188.48197937]
[96.37194061 173.66648865]
[108.83245087 164.41903687]
[108.55029297 149.42169189]
[108.26812744 134.42434692]
[85.76857758 138.29507446]
[62.40705872 127.03485107]
[53.68184280 139.23611450]
[44.95663071 151.43736267]
[43.22298431 167.16329956]
[29.52611923 173.01524353]
[20.80090332 185.21649170]
[12.07568932 197.41775513]
[11.02368069 213.78311157]
[-3.79312754 220.81121826]
[-17.13247299 211.27215576]
[-15.27198124 194.97888184]
[-0.12556607 188.69253540]
[8.59964848 176.49127197]
[17.32486343 164.29002380]
[18.43442535 149.43679810]
[32.75537491 142.71214294]
[41.48059082 130.51089478]
[50.20580292 118.30963898]
[41.59573746 106.02685547]
[27.15032578 110.06790161]
[12.70491219 114.10894775]
[-1.74050128 118.14998627]
[-16.18591499 122.19103241]
[-21.46099091 136.78395081]
[-34.32497406 145.46136475]
[-49.83140182 144.88664246]
[-62.01773453 135.28076172]
[-66.19808197 120.33738708]
[-60.76501083 105.80255127]
[-47.80765152 97.26519775]
[-32.30836868 98.00811005]
[-20.22695923 107.74562073]
[-5.78154564 103.70457458]
[8.66386700 99.66352844]
[23.10927963 95.62248993]
[37.55469513 91.58144379]
[40.63655853 76.90145111]
[29.03580856 67.39237213]
[17.43506050 57.88328934]
[5.83431101 48.37421036]
[-9.74348545 45.60964203]
[-14.68157101 31.55743408]
[-26.28232002 22.04835320]
[-37.88306808 12.53927135]
[-49.48381805 3.03019047]
[-67.70117950 0.48469144]
[-73.28744507 -16.13216972]
[-85.06501770 -25.42134857]
[-96.84258270 -34.71052551]
[-112.50638580 -32.60795212]
[-125.01824188 -42.26346970]
[-126.95509338 -57.94862747]
[-117.16783905 -70.35769653]
[-101.46308136 -72.12860870]
[-89.15817261 -62.21070099]
[-87.55340576 -46.48809814]
[-75.77583313 -37.19891739]
[-63.99826431 -27.90973854]
[-51.92506409 -29.01178169]
[-42.03096771 -21.33214188]
[-39.97473526 -8.57055855]
[-28.37398720 0.93852264]
[-16.77323914 10.44760418]
[-5.17248964 19.95668411]
[9.57554436 22.04109764]
[15.34339237 36.77346039]
[26.94414139 46.28253937]
[38.54489136 55.79162216]
[50.14563751 65.30070496]
[63.70359421 58.88339233]
[63.70359421 43.88339233]
[63.70359421 28.88339043]
[63.70359421 13.88339138]
[63.70359421 -1.11660886]
[55.03989029 -15.04041195]
[63.00401688 -29.37584686]
[79.40316772 -29.37584686]
[87.36729431 -15.04041195]
[78.70359039 -1.11660886]
[78.70359039 13.88339138]
[78.70359039 28.88339043]
[78.70359039 43.88339233]
[78.70359039 58.88339233]
[112.06694031 59.07093430]
[133.88713074 80.62069702]
[134.34506226 108.59155273]
[149.33908081 109.01476288]
[164.33311462 109.43798065]
[179.32713318 109.86119080]
[194.32116699 110.28440094]
[209.31520081 110.70761871]
[224.30921936 111.13082886]
[239.30325317 111.55403900]
[248.01284790 108.65842438]
[254.57461548 112.12887573]
[269.55801392 112.83406830]
[283.70669556 105.75410461]
[296.05615234 114.08118439]
[311.03955078 114.78637695]
[326.02893066 115.35060120]
[341.02297974 115.77381134]
[356.01699829 116.19702148]
[371.01101685 116.62023926]
[386.00506592 117.04344940]
[400.01803589 109.69858551]
[412.52194214 117.79190063]
[427.51596069 118.21511078]
[442.51528931 118.07402039]
[457.49871826 117.36883545]
[472.48214722 116.66365051]
[487.46554565 115.95845795]
[502.42309570 114.83081055]
[517.34289551 113.28159332]
[530.29742432 103.22615814]
[545.37872314 109.66711426]
[547.07244873 125.97856140]
[533.63623047 135.38067627]
[518.89208984 128.20137024]
[503.97232056 129.75059509]
[501.46258545 132.28451538]
[497.58401489 133.70730591]
[492.88238525 133.38139343]
[488.17074585 130.94187927]
[473.18731689 131.64706421]
[458.20391846 132.35224915]
[443.22048950 133.05743408]
[441.22476196 135.08361816]
[438.28912354 136.42370605]
[434.67739868 136.70922852]
[430.78393555 135.67642212]
[427.09274292 133.20913696]
[412.09872437 132.78591919]
[399.15823364 140.16105652]
[385.58184814 132.03747559]
[370.58779907 131.61425781]
[355.59378052 131.19105530]
[340.59976196 130.76783752]
[325.60574341 130.34463501]
[318.80163574 133.31196594]
[310.33438110 129.76979065]
[295.35095215 129.06460571]
[282.27401733 136.19500732]
[268.85284424 127.81748199]
[253.86943054 127.11228943]
[238.88003540 126.54806519]
[223.88601685 126.12485504]
[208.89198303 125.70164490]
[193.89794922 125.27843475]
[178.90393066 124.85521698]
[163.90989685 124.43200684]
[148.91587830 124.00879669]
[133.92184448 123.58557892]
[123.26547241 134.14218140]
[123.54763794 149.13952637]
[123.82980347 164.13687134]
[136.62933350 172.90907288]
[141.79647827 187.54055786]
[137.34434509 202.40522766]
[124.98488617 211.78729248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 162]
[5 161]
[6 160]
[8 25]
[9 24]
[10 23]
[12 21]
[13 20]
[14 19]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[44 76]
[45 75]
[46 74]
[47 73]
[49 71]
[50 70]
[51 69]
[52 68]
[54 65]
[55 64]
[56 63]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
[93 159]
[94 158]
[95 157]
[96 156]
[97 155]
[98 154]
[99 153]
[100 152]
[102 151]
[103 150]
[105 148]
[106 147]
[107 145]
[108 144]
[109 143]
[110 142]
[111 141]
[113 139]
[114 138]
[115 133]
[116 132]
[117 131]
[118 130]
[119 126]
[120 125]
] def

init

% Start Annotations
4 162 0.0 1 colorpair
5 161 0.0 1 colorpair
6 160 0.0 1 colorpair
8 25 0.0 1 colorpair
9 24 0.0 1 colorpair
10 23 0.0 1 colorpair
12 21 0.0 1 colorpair
13 20 0.0 1 colorpair
14 19 0.0 1 colorpair
26 43 0.0 1 colorpair
27 42 0.0 1 colorpair
28 41 0.0 1 colorpair
29 40 0.0 1 colorpair
30 39 0.0 1 colorpair
44 76 0.0 1 colorpair
45 75 0.0 1 colorpair
46 74 0.0 1 colorpair
47 73 0.0 1 colorpair
49 71 0.0 1 colorpair
50 70 0.0 1 colorpair
51 69 0.0 1 colorpair
52 68 0.0 1 colorpair
54 65 0.0 1 colorpair
55 64 0.0 1 colorpair
56 63 0.0 1 colorpair
77 90 0.0 1 colorpair
78 89 0.0 1 colorpair
79 88 0.0 1 colorpair
80 87 0.0 1 colorpair
81 86 0.0 1 colorpair
93 159 0.0 1 colorpair
94 158 0.0 1 colorpair
95 157 0.0 1 colorpair
96 156 0.0 1 colorpair
97 155 0.0 1 colorpair
98 154 0.0 1 colorpair
99 153 0.0 1 colorpair
100 152 0.0 1 colorpair
102 151 0.0 1 colorpair
103 150 0.0 1 colorpair
105 148 0.0 1 colorpair
106 147 0.0 1 colorpair
107 145 0.0 1 colorpair
108 144 0.0 1 colorpair
109 143 0.0 1 colorpair
110 142 0.0 1 colorpair
111 141 0.0 1 colorpair
113 139 0.0 1 colorpair
114 138 0.0 1 colorpair
115 133 0.0 1 colorpair
116 132 0.0 1 colorpair
117 131 0.0 1 colorpair
118 130 0.0 1 colorpair
119 126 0.0 1 colorpair
120 125 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
