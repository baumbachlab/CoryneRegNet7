%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
___AAAGAAAACGGGUGCUUAAGGGGCUAUACGCCUUGAGCUGAGAUGGGUCGCUAUACGGUGCGUCGUAAAGCCCCAAACCGUAGGAACCUGAUCCGGAUAAUGCCGGCGAUAGGGAGAAAACAUGAGUACAU_\
) } def
/len { sequence length } bind def

/coor [
[15.83901691 234.23443604]
[19.75782204 219.75537109]
[25.86675835 206.05570984]
[34.01910019 193.46446228]
[44.01903915 182.28407288]
[55.62639618 172.78306580]
[68.56238556 165.18962097]
[82.51629639 159.68615723]
[97.15299225 156.40481567]
[112.12091827 155.42443848]
[127.06057739 156.76856995]
[141.61059570 160.40406799]
[131.76390076 149.08848572]
[121.91721344 137.77288818]
[112.07051849 126.45729828]
[102.22382355 115.14170837]
[87.94730377 110.53942108]
[73.34573364 113.97367859]
[58.74416351 117.40793610]
[44.14259338 120.84219360]
[29.54102135 124.27645111]
[14.93945026 127.71070862]
[0.33787939 131.14497375]
[-14.26369095 134.57922363]
[-25.92584610 145.27056885]
[-40.08651352 140.65269470]
[-49.72060776 153.48094177]
[-65.76042938 153.80293274]
[-75.90160370 141.37167358]
[-72.36468506 125.72336578]
[-57.86289978 118.86203766]
[-43.52077484 126.05113220]
[-32.90302277 115.60543060]
[-17.69795036 119.97765350]
[-3.09637880 116.54339600]
[11.50519180 113.10913849]
[26.10676193 109.67488098]
[40.70833206 106.24062347]
[55.30990601 102.80636597]
[69.91147614 99.37210846]
[84.51304626 95.93785095]
[88.38737488 89.51604462]
[73.77791595 86.11550140]
[72.49747467 71.17024994]
[86.31558990 65.33416748]
[96.13603210 76.67243195]
[100.01036835 70.25063324]
[96.23975372 55.73228073]
[92.46914673 41.21392822]
[88.69853973 26.69557762]
[84.24307251 21.61552811]
[83.24288177 15.90596676]
[85.10563660 11.41947556]
[82.00955963 -3.25752354]
[78.91348267 -17.93452263]
[68.49436951 -29.84051323]
[73.43807983 -43.89074326]
[70.34200287 -58.56774139]
[67.24592590 -73.24474335]
[64.14985657 -87.92173767]
[50.77336884 -96.33869934]
[47.34797287 -111.76731873]
[55.90588760 -125.05406189]
[71.36985779 -128.31614685]
[84.56538391 -119.61824036]
[87.66378784 -104.12064362]
[78.82685089 -91.01781464]
[81.92292786 -76.34082031]
[85.01900482 -61.66381836]
[88.11508179 -46.98681641]
[98.31274414 -36.13062668]
[93.59048462 -21.03059959]
[96.68656158 -6.35360003]
[99.78263855 8.32339954]
[103.21689606 22.92497063]
[106.98750305 37.44332123]
[110.75811005 51.96167374]
[114.52871704 66.48002625]
[126.09915161 56.93407822]
[140.69523621 53.47656631]
[155.31837463 56.81779861]
[166.96441650 66.27135468]
[173.24081421 79.89511108]
[172.85816956 94.89022827]
[165.89506531 108.17613983]
[153.78202820 117.02339935]
[139.00750732 119.61445618]
[124.60676575 115.41699219]
[113.53941345 105.29501343]
[123.38610840 116.61060333]
[133.23280334 127.92619324]
[143.07949829 139.24179077]
[152.92619324 150.55737305]
[156.60887146 151.18563843]
[159.81047058 152.72546387]
[162.32452393 154.96928406]
[177.32052612 155.31576538]
[192.31651306 155.66223145]
[207.31251526 156.00869751]
[218.56846619 144.91458130]
[234.37150574 145.11256409]
[245.34599304 156.48516846]
[244.98095703 172.28524780]
[233.49295044 183.13887024]
[217.69761658 182.60681152]
[206.96604919 171.00469971]
[191.97004700 170.65821838]
[176.97406006 170.31175232]
[161.97805786 169.96528625]
[174.07223511 178.83833313]
[184.65017700 189.47352600]
[193.45780945 201.61540222]
[200.28361511 214.97236633]
[204.96362305 229.22360229]
[207.38543701 244.02679443]
[207.49089050 259.02642822]
[205.27745056 273.86221313]
[200.79829407 288.17785645]
[194.16096497 301.62945557]
[185.52491760 313.89398193]
[175.09756470 324.67684937]
[163.12934875 333.71908569]
[149.90771484 340.80346680]
[135.75024414 345.75988770]
[120.99697113 348.46926880]
[106.00222778 348.86654663]
[91.12618256 346.94219971]
[76.72612000 342.74240112]
[63.14790344 336.36807251]
[50.71766663 327.97229004]
[39.73395538 317.75671387]
[30.46058655 305.96667480]
[23.12028313 292.88540649]
[17.88935089 278.82705688]
[14.89342499 264.12927246]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 93]
[13 92]
[14 91]
[15 90]
[16 89]
[17 41]
[18 40]
[19 39]
[20 38]
[21 37]
[22 36]
[23 35]
[24 34]
[26 32]
[47 78]
[48 77]
[49 76]
[50 75]
[53 74]
[54 73]
[55 72]
[57 70]
[58 69]
[59 68]
[60 67]
[96 109]
[97 108]
[98 107]
[99 106]
] def

init

% Start Annotations
12 93 0.0 1 colorpair
13 92 0.0 1 colorpair
14 91 0.0 1 colorpair
15 90 0.0 1 colorpair
16 89 0.0 1 colorpair
17 41 0.0 1 colorpair
18 40 0.0 0.6 colorpair
19 39 0.0 0.6 colorpair
20 38 0.16 1 colorpair
21 37 0.0 0.6 colorpair
22 36 0.0 1 colorpair
23 35 0.0 0.6 colorpair
24 34 0.16 1 colorpair
26 32 0.0 0.6 colorpair
47 78 0.0 0.6 colorpair
48 77 0.0 1 colorpair
49 76 0.0 0.6 colorpair
50 75 0.0 1 colorpair
53 74 0.16 1 colorpair
54 73 0.0 0.6 colorpair
55 72 0.16 1 colorpair
57 70 0.0 0.6 colorpair
58 69 0.0 0.6 colorpair
59 68 0.16 1 colorpair
60 67 0.0 0.6 colorpair
96 109 0.0 1 colorpair
97 108 0.0 1 colorpair
98 107 0.0 1 colorpair
99 106 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
18 40 1 gmark
19 39 1 gmark
20 cmark
38 cmark
21 37 1 gmark
23 35 1 gmark
34 cmark
26 32 1 gmark
47 78 1 gmark
49 76 1 gmark
53 cmark
74 cmark
54 73 1 gmark
55 cmark
72 cmark
57 70 1 gmark
58 69 1 gmark
59 cmark
68 cmark
60 67 1 gmark

% End Annotations
showpage
end
%%EOF
