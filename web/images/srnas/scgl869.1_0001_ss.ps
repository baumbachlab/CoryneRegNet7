%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUCGUGUGGGACAUAUUGCAGACAGGGACGGGGAAACCACCCGCCAUC______________________UUUUCACUAAAGAAGGCACGGAGGCCAACUCCUUGGGGUGAAGCCAGACAUCCACUGGCAGAGCAACUCCUC_CGCUCUAACCCGACAGCUAACCUCGACGGCGACAAAUGAGAGGAAAA\
) } def
/len { sequence length } bind def

/coor [
[114.44833374 367.60937500]
[102.10176086 359.09103394]
[106.38743591 344.71697998]
[106.02122498 329.72143555]
[105.65501404 314.72592163]
[105.28880310 299.73037720]
[97.79103851 299.91348267]
[90.97030640 313.27304077]
[84.14956665 326.63259888]
[77.32883453 339.99215698]
[70.50810242 353.35171509]
[75.61747742 368.30728149]
[68.58024597 382.45837402]
[53.57146454 387.40933228]
[39.49558640 380.22286987]
[34.70357513 365.16259766]
[42.03844452 351.16348267]
[57.14855194 346.53097534]
[63.96928787 333.17141724]
[70.79001617 319.81185913]
[77.61074829 306.45230103]
[84.43148804 293.09277344]
[71.13436890 283.26138306]
[61.11755371 270.34811401]
[55.04759979 255.38348389]
[53.28145218 239.52673340]
[55.84697723 223.97616577]
[62.44859695 209.87855530]
[72.49713135 198.24461365]
[85.16091919 189.87666321]
[99.43400574 185.31362915]
[98.21452332 170.36328125]
[96.99504852 155.41293335]
[95.77556610 140.46258545]
[81.64242554 136.30517578]
[69.91652679 127.38706207]
[62.13548279 114.87767029]
[59.31962967 100.41735077]
[61.83821106 85.90231323]
[69.36096954 73.23590851]
[60.07695770 61.45426559]
[50.79294586 49.67262268]
[41.50893021 37.89097977]
[32.22491837 26.10933685]
[5.17276573 26.37469482]
[-10.34846973 -3.03422546]
[-22.63963890 -11.63231564]
[-38.38272476 -13.20262527]
[-44.37652588 -26.83800507]
[-56.66769791 -35.43609619]
[-49.78039169 -22.11074257]
[-46.52003098 -7.46936035]
[-47.10233307 7.51933289]
[-51.48876572 21.86364174]
[-59.38911438 34.61450577]
[-70.28066254 44.92828751]
[-83.44280243 52.12259674]
[-98.00468445 55.72144318]
[-113.00284576 55.48670959]
[-127.44496918 51.43392944]
[-140.37551880 43.83124542]
[-150.93898010 33.18167496]
[-158.43643188 20.18982124]
[-162.37182617 5.71526957]
[-162.48478699 -9.28430557]
[-158.76783752 -23.81648636]
[-151.46690369 -36.91978073]
[-141.06503296 -47.72723770]
[-128.25045776 -55.52380371]
[-113.87100220 -59.79363632]
[-98.87807465 -60.25422668]
[-84.26364899 -56.87510681]
[-70.99369812 -49.87916946]
[-79.49147034 -62.23991013]
[-87.98923492 -74.60065460]
[-103.43872070 -78.92419434]
[-109.55808258 -93.75433350]
[-101.65307617 -107.71465302]
[-85.78774261 -110.09598541]
[-74.13261414 -99.07158661]
[-75.62850189 -83.09841919]
[-67.13072968 -70.73767853]
[-58.63295746 -58.37694168]
[-48.06960678 -47.72726440]
[-35.77843857 -39.12917328]
[-20.91449928 -38.17385864]
[-14.04154873 -23.92348480]
[-1.75037944 -15.32539558]
[4.98402166 -18.62658310]
[6.00028658 -33.59211731]
[18.45282364 -25.22896004]
[25.18722534 -28.53014755]
[25.91942978 -43.51226807]
[26.65163422 -58.49438477]
[27.38383865 -73.47650146]
[17.71547699 -86.27893829]
[21.83611870 -101.78377533]
[36.58475876 -108.09702301]
[50.64750671 -100.37570190]
[53.23662186 -84.54295349]
[42.36595535 -72.74430084]
[41.63375092 -57.76218033]
[40.90154648 -42.78006363]
[40.16934204 -27.79794312]
[49.54658890 -16.56852531]
[52.88142395 -3.64134121]
[50.53927994 8.20714188]
[44.00656128 16.82532501]
[53.29057693 28.60696793]
[62.57458878 40.38861084]
[71.85859680 52.17025375]
[81.14260864 63.95189667]
[95.86201477 57.69118118]
[112.55049133 57.47446442]
[128.72180176 63.85507202]
[140.11598206 54.09943390]
[151.51017761 44.34379578]
[162.90435791 34.58815765]
[174.29855347 24.83251953]
[173.96208191 9.19855595]
[183.79391479 -2.96159339]
[199.15173340 -5.90627813]
[212.78407288 1.75489211]
[218.25413513 16.40454674]
[212.97914124 31.12556648]
[199.44976807 38.96713638]
[184.05418396 36.22670746]
[172.66000366 45.98234558]
[161.26580811 55.73798370]
[149.87162781 65.49362183]
[138.47743225 75.24925995]
[144.41447449 89.02429199]
[159.33059692 87.44017792]
[174.24671936 85.85606384]
[189.16282654 84.27194977]
[204.07894897 82.68783569]
[210.23731995 68.61765289]
[222.61523438 59.52463150]
[237.88307190 57.85475159]
[251.93388367 64.05719757]
[260.98806763 76.46354675]
[262.61007690 91.73654938]
[256.36361694 105.76784515]
[243.92895508 114.78308868]
[228.65093994 116.35722351]
[214.63928223 110.06681824]
[205.66307068 97.60395050]
[190.74694824 99.18806458]
[175.83082581 100.77217865]
[160.91470337 102.35629272]
[145.99859619 103.94040680]
[139.08749390 120.93093109]
[126.49781036 133.24191284]
[110.72591400 139.24310303]
[111.94539642 154.19345093]
[113.16487122 169.14379883]
[114.38435364 184.09414673]
[129.86752319 186.51475525]
[144.21478271 193.30783081]
[156.20242310 204.02091980]
[164.77267456 217.86254883]
[169.12649536 233.76014709]
[168.79689026 250.44284058]
[163.69615173 266.54309082]
[154.13227844 280.70867920]
[140.79277039 291.71633911]
[148.25750732 304.72702026]
[155.72222900 317.73770142]
[163.18696594 330.74838257]
[175.41844177 334.87268066]
[181.36531067 345.87545776]
[178.31576538 357.59112549]
[185.56773376 370.72158813]
[200.98225403 372.50262451]
[212.38319397 383.02868652]
[215.38667297 398.25231934]
[208.83775330 412.31970215]
[195.25466919 419.82165527]
[179.86036682 417.87353516]
[168.57429504 407.22439575]
[165.73614502 391.96908569]
[172.43727112 377.97357178]
[165.18530273 364.84310913]
[149.69268799 356.61392212]
[150.17628479 338.21310425]
[142.71154785 325.20242310]
[135.24682617 312.19174194]
[127.78209686 299.18106079]
[120.28433228 299.36416626]
[120.65054321 314.35971069]
[121.01675415 329.35522461]
[121.38296509 344.35076904]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 22]
[8 21]
[9 20]
[10 19]
[11 18]
[31 157]
[32 156]
[33 155]
[34 154]
[40 112]
[41 111]
[42 110]
[43 109]
[44 108]
[46 88]
[47 87]
[49 85]
[50 84]
[73 83]
[74 82]
[75 81]
[92 104]
[93 103]
[94 102]
[95 101]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[166 188]
[167 187]
[168 186]
[169 185]
[172 183]
[173 182]
] def

init

% Start Annotations
7 22 0.0 1 colorpair
8 21 0.0 1 colorpair
9 20 0.16 1 colorpair
10 19 0.0 1 colorpair
11 18 0.0 1 colorpair
31 157 0.0 1 colorpair
32 156 0.0 1 colorpair
33 155 0.0 1 colorpair
34 154 0.0 1 colorpair
40 112 0.0 1 colorpair
41 111 0.0 1 colorpair
42 110 0.0 1 colorpair
43 109 0.0 1 colorpair
44 108 0.0 1 colorpair
46 88 0.0 0.6 colorpair
47 87 0.0 0.6 colorpair
49 85 0.16 1 colorpair
50 84 0.0 1 colorpair
73 83 0.16 1 colorpair
74 82 0.0 1 colorpair
75 81 0.0 0.6 colorpair
92 104 0.0 1 colorpair
93 103 0.0 1 colorpair
94 102 0.0 1 colorpair
95 101 0.0 1 colorpair
115 131 0.0 1 colorpair
116 130 0.0 1 colorpair
117 129 0.0 1 colorpair
118 128 0.0 1 colorpair
119 127 0.0 1 colorpair
132 151 0.0 1 colorpair
133 150 0.0 1 colorpair
134 149 0.0 1 colorpair
135 148 0.0 1 colorpair
136 147 0.0 1 colorpair
166 188 0.0 1 colorpair
167 187 0.0 1 colorpair
168 186 0.0 1 colorpair
169 185 0.0 1 colorpair
172 183 0.0 1 colorpair
173 182 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
9 cmark
46 88 1 gmark
47 87 1 gmark
49 cmark
85 cmark
73 cmark
83 cmark
75 81 1 gmark

% End Annotations
showpage
end
%%EOF
