%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUGGGGAAAGCUACUCGGCACCCAUCCUUGUCGCGUGCAUCACAAACUUUGCUAAACUGUGCACCAGUCCACUUAUUGUGGGAUUUUUAAUGCCUUAAAGGCCAGCAUUUUCACCCUCUAGCGGGGUUGAAU\
) } def
/len { sequence length } bind def

/coor [
[82.99343109 247.33953857]
[90.63090515 234.42950439]
[103.62349701 226.93333435]
[118.62274170 226.78294373]
[131.76307678 234.01712036]
[126.26737976 220.06013489]
[120.77168274 206.10316467]
[115.27597809 192.14617920]
[109.78028107 178.18920898]
[97.91796875 169.18171692]
[100.06114960 153.50633240]
[94.56545258 139.54936218]
[89.06974792 125.59237671]
[75.31462860 119.60935211]
[61.35765076 125.10504913]
[51.35186005 137.36044312]
[36.67478180 134.82417297]
[22.71780396 140.31987000]
[8.76082420 145.81558228]
[-5.19615507 151.31127930]
[-19.15313530 156.80697632]
[-22.90973854 171.86245728]
[-34.81989288 181.80870056]
[-50.30390167 182.82118225]
[-63.40784836 174.51057434]
[-69.09299469 160.07247925]
[-65.17328644 145.05862427]
[-53.15593338 135.24217224]
[-37.66185379 134.39772034]
[-24.64883614 142.85000610]
[-10.69185543 137.35429382]
[3.26512361 131.85859680]
[17.22210312 126.36289978]
[31.17908287 120.86719513]
[40.18657684 109.00489044]
[55.86194992 111.14807129]
[69.81893158 105.65236664]
[71.22354889 90.71827698]
[58.53606796 82.71653748]
[45.84858704 74.71480560]
[32.29511642 81.93968201]
[16.94557381 81.40383911]
[3.92891216 73.25141144]
[-3.25345182 59.67536163]
[-2.66949868 44.32757187]
[5.52369118 31.33653069]
[19.12219048 24.19675446]
[34.46807098 24.82881355]
[47.43336868 33.06268311]
[54.53048325 46.68349838]
[53.85032654 62.02732086]
[66.53781128 70.02906036]
[79.22528839 78.03079987]
[85.42443848 73.80935669]
[84.31180573 58.85068130]
[97.82273102 65.36647797]
[104.02188110 61.14503860]
[101.22498322 46.40810013]
[98.42807770 31.67115974]
[95.63117981 16.93422318]
[83.23342896 6.75211382]
[83.60831451 -9.28655910]
[96.46825409 -18.87829781]
[111.94820404 -14.66514301]
[118.17327118 0.12093458]
[110.36811829 14.13732147]
[113.16501617 28.87425995]
[115.96192169 43.61119843]
[118.75881958 58.34813690]
[133.65588379 60.10246658]
[139.79972839 46.41842270]
[145.94358826 32.73437881]
[152.08744812 19.05033684]
[147.75189209 3.60421729]
[157.24154663 -9.33123970]
[173.27674866 -9.83306026]
[183.55667114 2.48371077]
[180.19543457 18.17070007]
[165.77148438 25.19419098]
[159.62763977 38.87823486]
[153.48377991 52.56227875]
[147.33992004 66.24632263]
[151.77671814 72.29321289]
[163.72892761 63.22985458]
[175.68115234 54.16649628]
[182.04872131 40.58511353]
[196.97779846 39.12814713]
[205.85110474 51.22213745]
[199.98065186 65.02568054]
[185.11494446 67.02379608]
[172.88262939 75.70539093]
[160.65029907 84.38699341]
[165.08708191 90.43388367]
[179.98414612 88.67955017]
[194.88121033 86.92522430]
[209.77825928 85.17089081]
[224.80154419 77.31357574]
[236.51065063 89.57462311]
[227.97016907 104.22032166]
[211.53259277 100.06794739]
[196.63552856 101.82228088]
[181.73847961 103.57660675]
[166.84141541 105.33094025]
[131.95301819 129.79411316]
[103.02673340 120.09667969]
[108.52243042 134.05364990]
[114.01813507 148.01063538]
[126.27352905 158.01641846]
[123.73725891 172.69349670]
[129.23295593 186.65048218]
[134.72865295 200.60746765]
[140.22436523 214.56443787]
[145.72006226 228.52142334]
[152.81039429 241.73986816]
[161.39802551 254.03834534]
[169.98565674 266.33682251]
[178.57328796 278.63528442]
[187.16093445 290.93377686]
[202.64151001 295.14459229]
[208.86880493 309.92974854]
[201.06575012 323.94729614]
[185.21820068 326.44421387]
[173.48301697 315.50503540]
[174.86245728 299.52139282]
[166.27481079 287.22293091]
[157.68717957 274.92443848]
[149.09954834 262.62597656]
[140.51191711 250.32749939]
[139.27035522 265.27603149]
[130.84854126 277.68862915]
[117.41693115 284.36636353]
[102.43712616 283.58819580]
[89.76972961 275.55468750]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 113]
[6 112]
[7 111]
[8 110]
[9 109]
[11 107]
[12 106]
[13 105]
[14 37]
[15 36]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[38 53]
[39 52]
[40 51]
[57 69]
[58 68]
[59 67]
[60 66]
[70 82]
[71 81]
[72 80]
[73 79]
[93 103]
[94 102]
[95 101]
[96 100]
[114 128]
[115 127]
[116 126]
[117 125]
[118 124]
] def

init

% Start Annotations
5 113 0.0 1 colorpair
6 112 0.0 1 colorpair
7 111 0.0 1 colorpair
8 110 0.0 1 colorpair
9 109 0.0 1 colorpair
11 107 0.0 1 colorpair
12 106 0.0 1 colorpair
13 105 0.0 1 colorpair
14 37 0.0 1 colorpair
15 36 0.0 1 colorpair
17 34 0.0 1 colorpair
18 33 0.0 1 colorpair
19 32 0.0 1 colorpair
20 31 0.0 1 colorpair
21 30 0.0 1 colorpair
38 53 0.0 1 colorpair
39 52 0.0 1 colorpair
40 51 0.0 1 colorpair
57 69 0.0 1 colorpair
58 68 0.0 1 colorpair
59 67 0.0 1 colorpair
60 66 0.0 1 colorpair
70 82 0.0 1 colorpair
71 81 0.0 1 colorpair
72 80 0.0 1 colorpair
73 79 0.0 1 colorpair
93 103 0.0 1 colorpair
94 102 0.0 1 colorpair
95 101 0.0 1 colorpair
96 100 0.0 1 colorpair
114 128 0.0 1 colorpair
115 127 0.0 1 colorpair
116 126 0.0 1 colorpair
117 125 0.0 1 colorpair
118 124 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
