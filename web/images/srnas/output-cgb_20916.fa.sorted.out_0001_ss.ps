%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGCACUUAAGAAACAUCUCUCAUGGAAAGAAGCUAGGCGGAAAGGGCGUUAAGUACUUGCCAUUUAAUCCUCAGCAUCACUCGGAUCAGUCGGAGAUGUCGAUGAAAAUGCACCAGGAGC\
) } def
/len { sequence length } bind def

/coor [
[133.30065918 469.46072388]
[135.76942444 454.43325806]
[144.14241028 441.71267700]
[156.96893311 433.50292969]
[154.67919922 418.67871094]
[152.38945007 403.85449219]
[136.95466614 401.52578735]
[122.96942902 394.54913330]
[111.79796600 383.59176636]
[104.53410339 369.70980835]
[101.89418793 354.24664307]
[104.14648438 338.70272827]
[111.08394623 324.59008789]
[122.04318237 313.28524780]
[135.96789551 305.89495850]
[133.30032349 291.13406372]
[130.63273621 276.37316895]
[127.96514893 261.61227417]
[125.29756927 246.85139465]
[122.62998962 232.09049988]
[119.96240234 217.32960510]
[117.29482269 202.56871033]
[103.10656738 193.63769531]
[99.64432526 176.89050293]
[109.50823975 162.51097107]
[106.46455383 147.82301331]
[102.67485809 133.30963135]
[98.14905548 119.00868988]
[85.33827972 112.23887634]
[80.96649170 98.42462158]
[87.55000305 85.51712036]
[83.02419281 71.21617126]
[71.48368073 60.39364243]
[75.02031708 45.92500305]
[70.49450684 31.62405777]
[65.96869659 17.32311249]
[61.26063156 3.08112931]
[56.37107086 -11.09956932]
[51.48151016 -25.28026772]
[36.78688431 -29.90347672]
[27.73796272 -42.14971924]
[27.63639641 -57.19809723]
[36.31156158 -69.27615356]
[31.42200089 -83.45685577]
[26.53244209 -97.63755035]
[14.71930218 -108.16182709]
[17.88527489 -122.71606445]
[12.99571514 -136.89675903]
[8.10615540 -151.07746887]
[3.21659613 -165.25816345]
[-11.79568768 -168.81272888]
[-22.48662186 -179.93510437]
[-25.44476700 -195.07620239]
[-19.72619247 -209.40455627]
[-7.15567160 -218.34802246]
[8.25558567 -219.05278015]
[21.58990479 -211.29394531]
[28.59235191 -197.54733276]
[27.02847290 -182.19944763]
[17.39729500 -170.14772034]
[22.28685379 -155.96702576]
[27.17641258 -141.78633118]
[32.06597137 -127.60562897]
[43.52937698 -118.09564972]
[40.71313858 -102.52711487]
[45.60269928 -88.34641266]
[50.49225998 -74.16571808]
[64.76792908 -70.00119019]
[73.96274567 -58.08819962]
[74.38459778 -42.86731339]
[65.66220856 -30.16982651]
[70.55177307 -15.98912811]
[75.44132996 -1.80843008]
[80.65674591 3.55165005]
[80.26964569 12.79730415]
[84.79545593 27.09824944]
[89.32126617 41.39919662]
[100.53805542 51.19882965]
[97.32514191 66.69036865]
[101.85094452 80.99131012]
[114.66172028 87.76112366]
[119.03350830 101.57537842]
[112.44999695 114.48287964]
[116.97580719 128.78382874]
[120.50242615 131.75508118]
[122.61293030 135.35560608]
[123.28698730 139.03701782]
[122.69316864 142.30509949]
[121.15250397 144.77932739]
[124.19618988 159.46728516]
[136.28694153 165.55882263]
[142.53713989 177.34771729]
[140.84426880 190.38624573]
[132.05570984 199.90112305]
[134.72329712 214.66201782]
[137.39088440 229.42291260]
[140.05847168 244.18380737]
[142.72604370 258.94470215]
[145.39363098 273.70559692]
[148.06121826 288.46649170]
[150.72879028 303.22738647]
[165.08518982 304.91757202]
[178.36236572 310.59359741]
[189.47926331 319.78350830]
[197.53347778 331.72961426]
[201.87454224 345.45092773]
[202.15644836 359.82385254]
[198.36518860 373.67401123]
[190.81921387 385.87240601]
[180.14263916 395.42727661]
[167.21366882 401.56475830]
[169.50340271 416.38897705]
[171.79313660 431.21316528]
[186.49896240 435.17031860]
[198.31979370 444.77175903]
[205.20761108 458.35400391]
[205.96905518 473.56387329]
[200.47219849 487.76614380]
[189.66941833 498.50021362]
[175.43234253 503.90628052]
[160.22764587 503.04776001]
[146.68962097 496.07339478]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 113]
[5 112]
[6 111]
[15 101]
[16 100]
[17 99]
[18 98]
[19 97]
[20 96]
[21 95]
[22 94]
[25 90]
[26 89]
[27 84]
[28 83]
[31 80]
[32 79]
[34 77]
[35 76]
[36 75]
[37 73]
[38 72]
[39 71]
[43 67]
[44 66]
[45 65]
[47 63]
[48 62]
[49 61]
[50 60]
] def

init

% Start Annotations
4 113 0.0 1 colorpair
5 112 0.0 1 colorpair
6 111 0.0 1 colorpair
15 101 0.0 1 colorpair
16 100 0.0 1 colorpair
17 99 0.0 1 colorpair
18 98 0.0 1 colorpair
19 97 0.0 1 colorpair
20 96 0.0 1 colorpair
21 95 0.0 1 colorpair
22 94 0.0 1 colorpair
25 90 0.0 1 colorpair
26 89 0.0 1 colorpair
27 84 0.0 1 colorpair
28 83 0.0 1 colorpair
31 80 0.0 1 colorpair
32 79 0.0 1 colorpair
34 77 0.0 1 colorpair
35 76 0.0 1 colorpair
36 75 0.0 1 colorpair
37 73 0.0 1 colorpair
38 72 0.0 1 colorpair
39 71 0.0 1 colorpair
43 67 0.0 1 colorpair
44 66 0.0 1 colorpair
45 65 0.0 1 colorpair
47 63 0.0 1 colorpair
48 62 0.0 1 colorpair
49 61 0.0 1 colorpair
50 60 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
