%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUGGGUCGGGAUCAUAUCGUCAGUGAUGUAGAGAUGGUCACGGUCGGCAAUGCUGAUGCAUUGCACGGUAUCGCGGCGGGAGAAUUCUACAGAGACGAUUUCAUUGUCUGCUGCGGGCACGUCGAGACGUGCCCGAUCUGCUGGAUCGAAGUUGUCGAGGAUCUCUGGCGCCCGCGCUGCGACAC\
) } def
/len { sequence length } bind def

/coor [
[71.70182037 428.60153198]
[70.95016479 413.62039185]
[70.19850159 398.63922119]
[69.44683838 383.65808105]
[68.69517517 368.67691040]
[67.94351196 353.69577026]
[56.75903320 343.92626953]
[55.78332901 328.74395752]
[66.10630035 317.07888794]
[65.35464478 302.09771729]
[64.60298157 287.11657715]
[63.85131836 272.13540649]
[53.74419785 283.21902466]
[38.89669037 285.35244751]
[26.07771492 277.56311035]
[21.13138390 263.40209961]
[26.31271172 249.32539368]
[39.25955200 241.75048828]
[54.06949234 244.13073730]
[63.99129868 255.38238525]
[64.99318695 240.41587830]
[65.99507904 225.44938660]
[66.99696350 210.48287964]
[67.99885559 195.51637268]
[69.00074768 180.54986572]
[62.13080978 167.33422852]
[70.77258301 154.08166504]
[71.77447510 139.11515808]
[72.77635956 124.14865875]
[65.34883881 111.11669922]
[51.96105576 104.35154724]
[38.57327271 97.58640289]
[25.18548965 90.82125092]
[11.79770660 84.05609894]
[-7.68184900 91.92510986]
[-26.38839340 83.02440643]
[-32.39772034 63.50518799]
[-48.12340546 65.24109650]
[-56.82020569 53.14915848]
[-70.62995911 47.29331970]
[-84.43970490 41.43748093]
[-100.16539001 43.17338562]
[-108.86219025 31.08145142]
[-122.67194366 25.22561264]
[-136.48168945 19.36977196]
[-150.29144287 13.51393414]
[-164.19711304 7.88967085]
[-178.19482422 2.49855399]
[-192.23707581 -2.77542067]
[-206.32292175 -7.93188524]
[-220.40875244 -13.08835030]
[-234.49459839 -18.24481392]
[-248.58044434 -23.40127945]
[-262.66629028 -28.55774498]
[-276.75210571 -33.71421051]
[-292.80563354 -30.36501312]
[-303.52960205 -42.77178574]
[-297.89218140 -58.17150497]
[-281.69259644 -60.72225571]
[-271.59564209 -47.80004883]
[-257.50982666 -42.64358521]
[-243.42398071 -37.48711777]
[-229.33813477 -32.33065414]
[-215.25228882 -27.17418861]
[-201.16645813 -22.01772499]
[-187.08061218 -16.86125946]
[-179.70391846 -17.51557922]
[-172.80369568 -11.49915504]
[-158.80598450 -6.10803843]
[-154.13838196 -7.20151424]
[-148.73536682 -5.36036587]
[-144.43559265 -0.29581454]
[-130.62585449 5.56002474]
[-116.81610107 11.41586399]
[-103.00635529 17.27170372]
[-88.26843262 15.11694908]
[-78.58386230 27.62773323]
[-64.77411652 33.48357010]
[-50.96436691 39.33941269]
[-36.22644806 37.18465805]
[-26.54187965 49.69544220]
[-19.33498573 43.66220474]
[-10.36719227 40.66032791]
[-0.86467284 41.14492798]
[7.85688591 45.09131241]
[14.57445431 51.99256897]
[18.32912636 60.92430115]
[18.56285858 70.66831207]
[31.95064163 77.43346405]
[45.33842468 84.19861603]
[58.72620773 90.96376801]
[72.11399078 97.72891998]
[78.64414215 83.87564850]
[91.03545380 76.08441162]
[104.99441528 76.19670105]
[116.12024689 83.45088959]
[129.50802612 76.68573761]
[142.89581299 69.92058563]
[156.28359985 63.15542984]
[169.67137146 56.39027786]
[183.05915833 49.62512970]
[196.44694519 42.85997772]
[209.83473206 36.09482574]
[223.22250366 29.32967186]
[226.02372742 18.79365730]
[234.00447083 11.69313049]
[244.35971069 10.19968128]
[253.62380981 14.56853867]
[267.23016357 8.25451756]
[280.83654785 1.94049597]
[294.44290161 -4.37352562]
[307.99603271 -10.80101013]
[321.49499512 -17.34151077]
[327.00506592 -35.45135117]
[343.70718384 -43.66086960]
[360.81506348 -37.18706894]
[374.08792114 -44.17498398]
[387.36080933 -51.16289902]
[400.63366699 -58.15081406]
[413.90652466 -65.13872528]
[427.17941284 -72.12664032]
[440.45227051 -79.11455536]
[453.72515869 -86.10247040]
[466.99801636 -93.09038544]
[475.28253174 -107.24308777]
[491.67752075 -106.87428284]
[499.31723022 -92.36337280]
[490.34259033 -78.63793182]
[473.98593140 -79.81752014]
[460.71307373 -72.82960510]
[447.44018555 -65.84169006]
[434.16732788 -58.85377502]
[420.89443970 -51.86585999]
[407.62158203 -44.87794495]
[394.34872437 -37.89002991]
[381.07583618 -30.90211487]
[367.80297852 -23.91419983]
[366.85986328 -12.52091885]
[360.46026611 -2.90325069]
[350.10241699 2.47784901]
[338.31399536 2.17852902]
[328.03549194 -3.84255242]
[314.53652954 2.69794726]
[309.87866211 8.45536995]
[300.75692749 9.23283863]
[287.15054321 15.54685974]
[273.54418945 21.86088181]
[259.93783569 28.17490196]
[250.02870178 44.76559448]
[229.98765564 42.71745682]
[216.59988403 49.48260498]
[203.21209717 56.24775696]
[189.82431030 63.01290894]
[176.43652344 69.77806091]
[163.04875183 76.54321289]
[149.66096497 83.30836487]
[136.27317810 90.07351685]
[122.88539886 96.83866882]
[123.03745270 107.00130463]
[118.71306610 116.65749359]
[110.40224457 123.85906219]
[99.42842102 126.99716187]
[87.74286652 125.15055084]
[86.74097443 140.11705017]
[85.73908234 155.08355713]
[92.53736115 169.36970520]
[83.96724701 181.55175781]
[82.96536255 196.51826477]
[81.96347046 211.48477173]
[80.96157837 226.45126343]
[79.95969391 241.41777039]
[78.95780182 256.38427734]
[78.83247375 271.38375854]
[79.58413696 286.36489868]
[80.33580017 301.34606934]
[81.08745575 316.32720947]
[92.52621460 326.90042114]
[93.07509613 342.10415649]
[82.92466736 352.94409180]
[83.67633057 367.92526245]
[84.42799377 382.90640259]
[85.17965698 397.88757324]
[85.93131256 412.86871338]
[86.68297577 427.84988403]
[96.03353119 441.32202148]
[88.79776764 456.03854370]
[72.41921997 456.86032104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 184]
[2 183]
[3 182]
[4 181]
[5 180]
[6 179]
[9 176]
[10 175]
[11 174]
[12 173]
[20 172]
[21 171]
[22 170]
[23 169]
[24 168]
[25 167]
[27 165]
[28 164]
[29 163]
[30 92]
[31 91]
[32 90]
[33 89]
[34 88]
[37 81]
[39 79]
[40 78]
[41 77]
[43 75]
[44 74]
[45 73]
[46 72]
[47 69]
[48 68]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
[96 158]
[97 157]
[98 156]
[99 155]
[100 154]
[101 153]
[102 152]
[103 151]
[104 150]
[108 148]
[109 147]
[110 146]
[111 145]
[112 143]
[113 142]
[116 137]
[117 136]
[118 135]
[119 134]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
] def

init

% Start Annotations
1 184 0.0 1 colorpair
2 183 0.0 1 colorpair
3 182 0.0 1 colorpair
4 181 0.0 1 colorpair
5 180 0.0 1 colorpair
6 179 0.0 1 colorpair
9 176 0.0 1 colorpair
10 175 0.0 1 colorpair
11 174 0.0 1 colorpair
12 173 0.0 1 colorpair
20 172 0.0 1 colorpair
21 171 0.0 1 colorpair
22 170 0.0 1 colorpair
23 169 0.0 1 colorpair
24 168 0.0 1 colorpair
25 167 0.0 1 colorpair
27 165 0.0 1 colorpair
28 164 0.0 1 colorpair
29 163 0.0 1 colorpair
30 92 0.0 1 colorpair
31 91 0.0 1 colorpair
32 90 0.0 1 colorpair
33 89 0.0 1 colorpair
34 88 0.0 1 colorpair
37 81 0.0 1 colorpair
39 79 0.0 1 colorpair
40 78 0.0 1 colorpair
41 77 0.0 1 colorpair
43 75 0.0 1 colorpair
44 74 0.0 1 colorpair
45 73 0.0 1 colorpair
46 72 0.0 1 colorpair
47 69 0.0 1 colorpair
48 68 0.0 1 colorpair
49 66 0.0 1 colorpair
50 65 0.0 1 colorpair
51 64 0.0 1 colorpair
52 63 0.0 1 colorpair
53 62 0.0 1 colorpair
54 61 0.0 1 colorpair
55 60 0.0 1 colorpair
96 158 0.0 1 colorpair
97 157 0.0 1 colorpair
98 156 0.0 1 colorpair
99 155 0.0 1 colorpair
100 154 0.0 1 colorpair
101 153 0.0 1 colorpair
102 152 0.0 1 colorpair
103 151 0.0 1 colorpair
104 150 0.0 1 colorpair
108 148 0.0 1 colorpair
109 147 0.0 1 colorpair
110 146 0.0 1 colorpair
111 145 0.0 1 colorpair
112 143 0.0 1 colorpair
113 142 0.0 1 colorpair
116 137 0.0 1 colorpair
117 136 0.0 1 colorpair
118 135 0.0 1 colorpair
119 134 0.0 1 colorpair
120 133 0.0 1 colorpair
121 132 0.0 1 colorpair
122 131 0.0 1 colorpair
123 130 0.0 1 colorpair
124 129 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
