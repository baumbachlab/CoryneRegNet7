%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:35:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGGCUGCAGGUCUGGGAGACGGAUCUCGCCAAGACCGGUCAGUGGGCCGGAGCCCAUGAGGCGGAUAUCGUUAGCGAUCUUGUACAAGGAGACAGCGAUAACGCGCAUUGCGCCGGAGAACUCAACAAGAG\
) } def
/len { sequence length } bind def

/coor [
[114.58239746 256.08413696]
[123.60623169 239.50985718]
[118.77076721 225.31062317]
[113.93529510 211.11138916]
[109.09983063 196.91215515]
[104.26436615 182.71292114]
[99.08187103 177.34515381]
[99.48622894 168.12377930]
[94.98495483 153.81509399]
[90.48368835 139.50640869]
[76.79964447 133.36254883]
[63.11560059 139.50640869]
[49.43155670 145.65025330]
[35.74751282 151.79411316]
[22.06347084 157.93797302]
[8.45238686 164.24180603]
[-5.08386803 170.70475769]
[-18.54343414 177.32594299]
[-31.92445946 184.10446167]
[-45.30548477 190.88296509]
[-58.68651199 197.66146851]
[-67.19236755 211.68225098]
[-83.57955170 211.05589294]
[-90.99033356 196.42672729]
[-81.80113220 182.84399414]
[-65.46501923 184.28044128]
[-52.08399200 177.50193787]
[-38.70296478 170.72343445]
[-25.32193756 163.94491577]
[-20.73380280 158.06101990]
[-11.54682446 157.16850281]
[1.98943090 150.70555115]
[6.71423864 144.93083191]
[15.91961575 144.25392151]
[29.60365868 138.11007690]
[43.28770065 131.96621704]
[56.97174454 125.82235718]
[70.65579224 119.67850494]
[67.15486145 106.81568146]
[68.76371765 94.26702881]
[74.72906494 83.88624573]
[64.50194550 72.91327667]
[54.27482986 61.94030762]
[46.05366516 57.74392700]
[43.94030762 50.58816528]
[33.97323227 39.37845993]
[24.00616264 28.16875458]
[14.03909016 16.95905113]
[4.07201767 5.74934626]
[-11.65445518 1.10068166]
[-15.22824097 -14.90432072]
[-2.97293425 -25.80108643]
[12.50425529 -20.37995720]
[15.28172207 -4.21772575]
[25.24879456 6.99197865]
[35.21586609 18.20168304]
[45.18293762 29.41138649]
[55.15000916 40.62109375]
[65.24780273 51.71319199]
[75.47491455 62.68616104]
[85.70203400 73.65913391]
[101.05377960 70.04732513]
[116.11375427 74.72906494]
[127.08672333 64.50194550]
[138.05969238 54.27482986]
[139.31072998 41.37614822]
[148.73937988 33.08266830]
[160.88847351 33.46342087]
[172.09817505 23.49634933]
[183.30787659 13.52927780]
[194.51759338 3.56220555]
[205.72729492 -6.40486670]
[216.93699646 -16.37193871]
[228.14669800 -26.33901024]
[229.22752380 -41.87830353]
[240.73773193 -51.82664490]
[255.54541016 -50.70048904]
[257.09848022 -63.56629944]
[266.71896362 -71.63646698]
[278.85580444 -70.97100830]
[290.29608154 -80.67256165]
[301.73635864 -90.37410736]
[313.17663574 -100.07565308]
[318.19268799 -115.68882751]
[334.27706909 -118.88643646]
[344.88354492 -106.37905121]
[339.10107422 -91.03319550]
[322.87817383 -88.63537598]
[311.43789673 -78.93383026]
[299.99761963 -69.23228455]
[288.55734253 -59.53073120]
[283.59365845 -42.74001312]
[265.51248169 -39.49078369]
[264.89907837 -24.65301704]
[253.67282104 -14.38530254]
[238.11376953 -15.12930679]
[226.90406799 -5.16223431]
[215.69436646 4.80483770]
[204.48466492 14.77190971]
[193.27494812 24.73898125]
[182.06524658 34.70605469]
[170.85554504 44.67312622]
[166.28684998 61.57559586]
[148.28680420 65.24780273]
[137.31384277 75.47491455]
[126.34086609 85.70203400]
[130.85261536 96.56451416]
[130.90417480 108.73669434]
[126.17871094 120.39813232]
[117.09619904 129.68902588]
[104.79237366 135.00512695]
[109.29364777 149.31382751]
[113.79491425 163.62251282]
[118.46360016 177.87745667]
[123.29907227 192.07669067]
[128.13453674 206.27592468]
[132.97000122 220.47515869]
[137.80546570 234.67439270]
[149.39506531 237.78500366]
[157.92611694 246.05174255]
[161.33001709 257.30712891]
[158.86090088 268.68057251]
[151.25546265 277.33038330]
[155.42005920 291.74066162]
[159.58465576 306.15093994]
[172.88139343 315.12738037]
[174.01004028 331.13067627]
[162.10479736 341.88449097]
[146.29833984 339.13940430]
[138.71603394 325.00122070]
[145.17437744 310.31555176]
[141.00978088 295.90527344]
[136.84518433 281.49499512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 118]
[3 117]
[4 116]
[5 115]
[6 114]
[8 113]
[9 112]
[10 111]
[11 38]
[12 37]
[13 36]
[14 35]
[15 34]
[16 32]
[17 31]
[18 29]
[19 28]
[20 27]
[21 26]
[41 61]
[42 60]
[43 59]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[63 106]
[64 105]
[65 104]
[68 102]
[69 101]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[77 93]
[80 91]
[81 90]
[82 89]
[83 88]
[123 133]
[124 132]
[125 131]
] def

init

% Start Annotations
2 118 0.0 1 colorpair
3 117 0.0 1 colorpair
4 116 0.0 1 colorpair
5 115 0.0 1 colorpair
6 114 0.0 1 colorpair
8 113 0.0 1 colorpair
9 112 0.0 1 colorpair
10 111 0.0 1 colorpair
11 38 0.0 1 colorpair
12 37 0.0 1 colorpair
13 36 0.0 1 colorpair
14 35 0.0 1 colorpair
15 34 0.0 1 colorpair
16 32 0.0 1 colorpair
17 31 0.0 1 colorpair
18 29 0.0 1 colorpair
19 28 0.0 1 colorpair
20 27 0.0 1 colorpair
21 26 0.0 1 colorpair
41 61 0.0 1 colorpair
42 60 0.0 1 colorpair
43 59 0.0 1 colorpair
45 58 0.0 1 colorpair
46 57 0.0 1 colorpair
47 56 0.0 1 colorpair
48 55 0.0 1 colorpair
49 54 0.0 1 colorpair
63 106 0.0 1 colorpair
64 105 0.0 1 colorpair
65 104 0.0 1 colorpair
68 102 0.0 1 colorpair
69 101 0.0 1 colorpair
70 100 0.0 1 colorpair
71 99 0.0 1 colorpair
72 98 0.0 1 colorpair
73 97 0.0 1 colorpair
74 96 0.0 1 colorpair
77 93 0.0 1 colorpair
80 91 0.0 1 colorpair
81 90 0.0 1 colorpair
82 89 0.0 1 colorpair
83 88 0.0 1 colorpair
123 133 0.0 1 colorpair
124 132 0.0 1 colorpair
125 131 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
