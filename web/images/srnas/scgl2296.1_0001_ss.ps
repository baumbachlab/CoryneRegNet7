%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGGAGCGCGUGUAUGGACUCUGCUCGAGAAGUGGCUCUGGUGUACUUCCCCGACAUCAGAUCGAAACUUUUCGAGUGGGGCCCUGUACGCACUCCGUGAUUUG\
) } def
/len { sequence length } bind def

/coor [
[111.19049072 361.89874268]
[122.04029846 350.63748169]
[120.28270721 335.74081421]
[111.10741425 324.00781250]
[117.17440796 309.39608765]
[115.41681671 294.49942017]
[113.65922546 279.60275269]
[111.90162659 264.70608521]
[102.72633362 252.97308350]
[108.79332733 238.36137390]
[107.03573608 223.46469116]
[105.27814484 208.56802368]
[103.52054596 193.67135620]
[101.76295471 178.77467346]
[100.00536346 163.87800598]
[98.24776459 148.98133850]
[89.07247162 137.24833679]
[95.13946533 122.63661957]
[93.38187408 107.73994446]
[89.32842255 100.61326599]
[91.79797363 92.38100433]
[90.47845459 77.43915558]
[89.15892792 62.49731064]
[87.83940887 47.55545807]
[86.51988220 32.61360931]
[85.20036316 17.67176056]
[83.88083649 2.72991204]
[82.56131744 -12.21193695]
[81.24179077 -27.15378571]
[79.92227173 -42.09563446]
[78.60274506 -57.03748322]
[77.28322601 -71.97933197]
[75.96369934 -86.92118073]
[74.64418030 -101.86302948]
[73.32465363 -116.80488586]
[60.95569229 -132.58839417]
[69.47614288 -149.84136963]
[59.80342484 -162.36131287]
[65.59579468 -176.08346558]
[63.40164566 -190.92211914]
[61.20749664 -205.76078796]
[59.01334763 -220.59944153]
[56.81919479 -235.43809509]
[54.62504578 -250.27674866]
[52.43089676 -265.11541748]
[50.23674774 -279.95407104]
[45.82327271 -288.13629150]
[48.20264435 -295.25988770]
[35.64118195 -304.85076904]
[33.62351227 -320.52575684]
[43.34667587 -332.98510742]
[59.04209900 -334.83694458]
[71.39795685 -324.98257446]
[73.08374786 -309.26846313]
[63.09931946 -297.01748657]
[65.07540131 -282.14822388]
[67.26955414 -267.30957031]
[69.46369934 -252.47090149]
[71.65785217 -237.63224792]
[73.85200500 -222.79359436]
[76.04615021 -207.95492554]
[78.24030304 -193.11627197]
[80.43445587 -178.27761841]
[89.95023346 -166.81903076]
[84.31479645 -152.03550720]
[93.18429565 -146.58351135]
[97.60247803 -136.91218567]
[95.84565735 -126.20100403]
[88.26650238 -118.12440491]
[89.58602905 -103.18255615]
[90.90554810 -88.24070740]
[92.22507477 -73.29885864]
[93.54459381 -58.35700607]
[94.86412048 -43.41515732]
[96.18363953 -28.47330856]
[97.50316620 -13.53145981]
[98.82268524 1.41038918]
[100.14221191 16.35223770]
[101.46173096 31.29408836]
[102.78125763 46.23593521]
[104.10077667 61.17778778]
[105.42030334 76.11963654]
[106.73982239 91.06148529]
[108.27854919 105.98235321]
[110.03614044 120.87902832]
[119.33715057 133.67753601]
[113.14443970 147.22373962]
[114.90203094 162.12040710]
[116.65962982 177.01708984]
[118.41722107 191.91375732]
[120.17481232 206.81042480]
[121.93241119 221.70710754]
[123.69000244 236.60377502]
[132.99101257 249.40228271]
[126.79830170 262.94848633]
[128.55589294 277.84515381]
[130.31349182 292.74182129]
[132.07107544 307.63851929]
[141.37208557 320.43701172]
[135.17938232 333.98321533]
[136.93698120 348.87988281]
[150.10971069 357.30682373]
[154.73451233 372.24487305]
[148.62771606 386.64071655]
[134.67274475 393.69714355]
[119.45871735 390.08224487]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 101]
[3 100]
[5 98]
[6 97]
[7 96]
[8 95]
[10 93]
[11 92]
[12 91]
[13 90]
[14 89]
[15 88]
[16 87]
[18 85]
[19 84]
[21 83]
[22 82]
[23 81]
[24 80]
[25 79]
[26 78]
[27 77]
[28 76]
[29 75]
[30 74]
[31 73]
[32 72]
[33 71]
[34 70]
[35 69]
[37 65]
[39 63]
[40 62]
[41 61]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[48 55]
] def

init

% Start Annotations
2 101 0.0 1 colorpair
3 100 0.0 1 colorpair
5 98 0.0 1 colorpair
6 97 0.0 0.6 colorpair
7 96 0.0 1 colorpair
8 95 0.0 1 colorpair
10 93 0.0 1 colorpair
11 92 0.0 1 colorpair
12 91 0.0 1 colorpair
13 90 0.0 1 colorpair
14 89 0.0 1 colorpair
15 88 0.0 1 colorpair
16 87 0.0 1 colorpair
18 85 0.0 1 colorpair
19 84 0.0 1 colorpair
21 83 0.0 1 colorpair
22 82 0.0 1 colorpair
23 81 0.0 1 colorpair
24 80 0.0 1 colorpair
25 79 0.0 1 colorpair
26 78 0.0 1 colorpair
27 77 0.0 1 colorpair
28 76 0.0 1 colorpair
29 75 0.0 1 colorpair
30 74 0.0 1 colorpair
31 73 0.0 1 colorpair
32 72 0.16 1 colorpair
33 71 0.0 1 colorpair
34 70 0.0 1 colorpair
35 69 0.0 1 colorpair
37 65 0.0 1 colorpair
39 63 0.0 1 colorpair
40 62 0.0 1 colorpair
41 61 0.0 1 colorpair
42 60 0.0 1 colorpair
43 59 0.0 1 colorpair
44 58 0.0 1 colorpair
45 57 0.16 1 colorpair
46 56 0.0 1 colorpair
48 55 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
6 97 1 gmark
32 cmark
57 cmark

% End Annotations
showpage
end
%%EOF
