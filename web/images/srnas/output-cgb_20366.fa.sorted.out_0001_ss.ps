%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCAUUGACGAACUGUUCAAUUCCAUCCCCAGUACGAAUAAUGAUCGAAUGGUCUGGCGAACUACCAUCAUAUACAGCCAGCUUAUCCCUAUUAAGGGGUUCAGCCGAUUUAACAGUAAUUGAUUCCAUAUUUUCAUAGAGAUAGUUACUGGGGUUCUC\
) } def
/len { sequence length } bind def

/coor [
[32.89006805 239.81750488]
[24.89200020 252.50729370]
[16.89393425 265.19708252]
[8.89586735 277.88690186]
[8.08320522 293.68722534]
[-5.24868393 300.32873535]
[-13.24675083 313.01855469]
[-21.24481773 325.70834351]
[-29.24288368 338.39813232]
[-37.24095154 351.08792114]
[-31.35915756 365.44705200]
[-35.07345963 380.51303101]
[-46.95563126 390.49267578]
[-62.43673706 391.54864502]
[-75.56397247 383.27487183]
[-81.28964996 368.85281372]
[-77.41212463 353.82800293]
[-65.42239380 343.97784424]
[-49.93074799 343.08987427]
[-41.93267822 330.40008545]
[-33.93461227 317.71026611]
[-25.93654633 305.02047729]
[-17.93848038 292.33068848]
[-17.69789314 277.43801880]
[-3.79392934 269.88882446]
[4.20413685 257.19903564]
[12.20220375 244.50923157]
[20.20026970 231.81944275]
[27.44695854 218.68606567]
[33.91775131 205.15354919]
[40.38854218 191.62104797]
[46.85933304 178.08853149]
[53.33012390 164.55601501]
[59.80091476 151.02351379]
[66.27170563 137.49099731]
[72.74249268 123.95848083]
[70.04116058 116.96185303]
[57.87467957 125.73548889]
[46.41443253 135.41343689]
[31.88266373 131.69488525]
[26.47965240 117.70175934]
[34.74154663 105.18213654]
[49.73272705 104.64731598]
[64.63849640 102.96859741]
[61.93716431 95.97196960]
[48.05130386 90.29897308]
[34.16544342 84.62597656]
[20.27958488 78.95298004]
[4.11337614 81.70719910]
[-6.14524698 68.91294861]
[0.05690840 53.73186874]
[16.33959579 51.78094101]
[25.95258331 65.06712341]
[39.83844376 70.74011993]
[53.72430420 76.41311646]
[67.61016083 82.08611298]
[77.90378571 71.17550659]
[71.43299866 57.64299774]
[64.96220398 44.11048508]
[58.49141312 30.57797432]
[43.49720764 32.58519745]
[28.61696815 29.85872269]
[15.30851078 22.66565895]
[4.87566280 11.71071148]
[-1.65947235 -1.93286526]
[-3.65664816 -16.92841339]
[-0.92020208 -31.80682182]
[6.28177691 -45.11045837]
[17.24371147 -55.53596115]
[30.89166641 -62.06195450]
[45.88854980 -64.04907990]
[60.76512146 -61.30266571]
[74.06392670 -54.09177399]
[84.48208618 -43.12285614]
[90.99893188 -29.47053146]
[92.97600555 -14.47232056]
[90.21962738 0.40240771]
[82.99982452 13.69637871]
[72.02392578 24.10718346]
[78.49471283 37.63969421]
[84.96550751 51.17220688]
[91.43629456 64.70471954]
[106.41867065 65.43165588]
[114.16916656 52.58914948]
[121.91965485 39.74664688]
[121.82840729 21.35547447]
[137.46879578 13.44283009]
[144.96879578 0.45244911]
[152.46879578 -12.53793240]
[159.96879578 -25.52831268]
[167.46879578 -38.51869583]
[174.96879578 -51.50907516]
[174.42770386 -67.89929199]
[188.49255371 -76.33207703]
[202.69464111 -68.13250732]
[202.42405701 -51.73559189]
[187.95916748 -44.00907516]
[180.45916748 -31.01869392]
[172.95916748 -18.02831268]
[165.45916748 -5.03793192]
[157.95916748 7.95244932]
[150.45916748 20.94283104]
[153.28483582 32.73641586]
[147.10165405 43.63319778]
[134.76216125 47.49713516]
[127.01166534 60.33964157]
[119.26117706 73.18214417]
[127.98355865 85.38542175]
[142.64356995 82.20986938]
[157.30357361 79.03430939]
[171.96357727 75.85874939]
[186.62359619 72.68318939]
[193.75080872 58.76425934]
[208.17752075 52.73069382]
[223.09187317 57.43135452]
[231.45176697 70.64673615]
[229.30990601 86.13694000]
[217.67761230 96.58796692]
[202.04731750 97.06515503]
[189.79914856 87.34320068]
[175.13914490 90.51876068]
[160.47912598 93.69431305]
[145.81912231 96.86987305]
[131.15911865 100.04543304]
[129.50033569 107.35969543]
[144.12886047 110.67725372]
[158.75733948 113.99504852]
[155.43930054 128.62345886]
[140.81130981 125.30577850]
[126.18278503 121.98822784]
[124.52400970 129.30249023]
[136.37989807 138.49150085]
[148.23579407 147.68051147]
[160.09167480 156.86950684]
[171.94757080 166.05851746]
[183.80345154 175.24752808]
[200.11611938 176.92953491]
[206.56791687 192.00621033]
[196.52178955 204.96798706]
[180.31233215 202.48088074]
[174.61445618 187.10342407]
[162.75856018 177.91441345]
[150.90266418 168.72540283]
[139.04678345 159.53639221]
[127.19088745 150.34738159]
[115.33499908 141.15838623]
[103.89447021 140.22059631]
[93.99092865 136.40240479]
[86.27500916 130.42927551]
[79.80421448 143.96179199]
[73.33342743 157.49429321]
[66.86263275 171.02680969]
[60.39184189 184.55932617]
[53.92105103 198.09182739]
[47.45026016 211.62434387]
[40.97946930 225.15686035]
[55.53036880 221.51385498]
[68.48677063 229.07240295]
[72.47695160 243.53195190]
[65.23064423 256.66552734]
[50.87073898 261.00061035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[34 151]
[35 150]
[36 149]
[45 56]
[46 55]
[47 54]
[48 53]
[57 82]
[58 81]
[59 80]
[60 79]
[83 107]
[84 106]
[85 105]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[92 97]
[108 124]
[109 123]
[110 122]
[111 121]
[112 120]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[136 141]
] def

init

% Start Annotations
1 28 0.0 1 colorpair
2 27 0.0 1 colorpair
3 26 0.0 1 colorpair
4 25 0.0 1 colorpair
6 23 0.0 1 colorpair
7 22 0.0 1 colorpair
8 21 0.0 1 colorpair
9 20 0.0 1 colorpair
10 19 0.0 1 colorpair
29 156 0.0 1 colorpair
30 155 0.0 1 colorpair
31 154 0.0 1 colorpair
32 153 0.0 1 colorpair
33 152 0.0 1 colorpair
34 151 0.0 1 colorpair
35 150 0.0 1 colorpair
36 149 0.0 1 colorpair
45 56 0.0 1 colorpair
46 55 0.0 1 colorpair
47 54 0.0 1 colorpair
48 53 0.0 1 colorpair
57 82 0.0 1 colorpair
58 81 0.0 1 colorpair
59 80 0.0 1 colorpair
60 79 0.0 1 colorpair
83 107 0.0 1 colorpair
84 106 0.0 1 colorpair
85 105 0.0 1 colorpair
87 102 0.0 1 colorpair
88 101 0.0 1 colorpair
89 100 0.0 1 colorpair
90 99 0.0 1 colorpair
91 98 0.0 1 colorpair
92 97 0.0 1 colorpair
108 124 0.0 1 colorpair
109 123 0.0 1 colorpair
110 122 0.0 1 colorpair
111 121 0.0 1 colorpair
112 120 0.0 1 colorpair
131 146 0.0 1 colorpair
132 145 0.0 1 colorpair
133 144 0.0 1 colorpair
134 143 0.0 1 colorpair
135 142 0.0 1 colorpair
136 141 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
