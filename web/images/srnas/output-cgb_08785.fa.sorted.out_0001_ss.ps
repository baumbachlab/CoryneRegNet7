%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGUGGCCUGAAGAGUGGAUUUCACAACCCGCGAUCGAUAAAUACGGACGCUCUUUGCGUCCUGCCGUUUACCUGGGGUUCAUCUUGCGCUGCACCGGUGUUAAGAAUCAGUUUUUUCUGAGUUCUUUUUGGUAC\
) } def
/len { sequence length } bind def

/coor [
[60.61364365 309.86480713]
[45.47751236 312.84826660]
[31.13962173 307.15368652]
[22.17513847 294.59814453]
[21.44459724 279.18807983]
[29.18111038 265.84078979]
[42.91598511 258.81536865]
[44.28993607 243.87841797]
[45.66388702 228.94148254]
[37.45122910 213.47528076]
[48.09159088 198.49645996]
[49.12268829 183.53193665]
[50.15378189 168.56742859]
[51.18487930 153.60290527]
[52.21597672 138.63838196]
[39.80397034 130.21566772]
[26.27879524 136.70178223]
[12.75361919 143.18789673]
[-0.77155584 149.67401123]
[-1.86439323 164.99397278]
[-10.48408699 177.70602417]
[-24.31198120 184.39070129]
[-39.62844467 183.24984741]
[-52.31342316 174.59034729]
[-58.95472336 160.74157715]
[-57.76586533 145.42875671]
[-49.06665039 132.77099609]
[-35.19712067 126.17313385]
[-19.88810921 127.40998077]
[-7.25766706 136.14883423]
[6.26750803 129.66271973]
[19.79268265 123.17660522]
[33.31785965 116.69049835]
[35.18969345 109.42783356]
[20.21063042 108.63562012]
[5.23156452 107.84340668]
[-8.55592155 113.75146484]
[-23.15506172 110.30689240]
[-32.84748840 98.85888672]
[-33.83675766 83.89154053]
[-25.73538208 71.26744843]
[-11.71660137 65.93136597]
[2.72853804 69.97338867]
[11.94152737 81.80899048]
[25.43744850 88.35575104]
[38.93336868 94.90251923]
[40.80520630 87.63985443]
[32.10010529 75.42424011]
[23.39500809 63.20862579]
[14.68990993 50.99301147]
[5.98481131 38.77739716]
[-2.72028732 26.56177902]
[-18.24051285 22.49949646]
[-24.60920334 7.77471066]
[-16.94084549 -6.31698322]
[-1.11794543 -8.96564293]
[10.72152042 1.86055672]
[9.49532795 17.85668182]
[18.20042610 30.07229614]
[26.90552521 42.28791428]
[35.61062241 54.50352859]
[44.31572342 66.71914673]
[53.02082062 78.93476105]
[74.86121368 61.20528412]
[99.97332001 59.03066635]
[102.70967102 44.28236771]
[105.44602203 29.53406525]
[100.35602570 14.55399418]
[110.28524780 3.45174932]
[101.13063049 -9.43113041]
[103.84925842 -24.99983788]
[116.82820129 -34.01773453]
[132.36729431 -31.13466072]
[141.24746704 -18.06109619]
[138.20027161 -2.55335236]
[125.03354645 6.18810081]
[130.31925964 20.11327362]
[120.19432068 32.27041626]
[117.45796967 47.01871872]
[114.72161865 61.76701736]
[121.03611755 64.84365082]
[126.73226166 68.95369720]
[131.64262390 73.97633362]
[135.62286377 79.76392365]
[149.80128479 74.86775970]
[163.97969055 69.97158813]
[178.15811157 65.07542419]
[192.33653259 60.17925262]
[206.45788574 55.12084579]
[220.52030945 49.90086365]
[234.58273315 44.68088150]
[248.64515686 39.46089554]
[262.70758057 34.24091339]
[275.45257568 23.06050301]
[289.72421265 32.21236420]
[284.88079834 48.45975113]
[267.92755127 48.30334091]
[253.86514282 53.52332306]
[239.80271912 58.74330521]
[225.74029541 63.96328735]
[211.67787170 69.18326569]
[206.45597839 74.50676727]
[197.23269653 74.35767365]
[183.05429077 79.25383759]
[168.87586975 84.15000916]
[154.69744873 89.04617310]
[140.51902771 93.94234467]
[140.64392090 105.15345764]
[137.72492981 115.97863007]
[150.23269653 124.25847626]
[162.74044800 132.53833008]
[175.24821472 140.81817627]
[190.68351746 137.42309570]
[203.95344543 146.00708008]
[207.18515015 161.47743225]
[198.46133423 174.65585327]
[182.95768738 177.72381592]
[169.87223816 168.86116028]
[166.96835327 153.32594299]
[154.46060181 145.04609680]
[141.95283508 136.76623535]
[129.44508362 128.48638916]
[113.32309723 142.43235779]
[90.77494049 147.08512878]
[67.18049622 139.66947937]
[66.14939880 154.63400269]
[65.11830139 169.59852600]
[64.08720398 184.56303406]
[63.05611038 199.52755737]
[70.94956970 209.80081177]
[69.72943115 222.29490662]
[60.60083008 230.31542969]
[59.22687912 245.25236511]
[57.85292816 260.18930054]
[70.07572937 269.60241699]
[75.24756622 284.13705444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 134]
[8 133]
[9 132]
[11 129]
[12 128]
[13 127]
[14 126]
[15 125]
[16 33]
[17 32]
[18 31]
[19 30]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[65 80]
[66 79]
[67 78]
[69 76]
[84 107]
[85 106]
[86 105]
[87 104]
[88 103]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[109 122]
[110 121]
[111 120]
[112 119]
] def

init

% Start Annotations
7 134 0.0 1 colorpair
8 133 0.0 1 colorpair
9 132 0.0 1 colorpair
11 129 0.0 1 colorpair
12 128 0.0 1 colorpair
13 127 0.0 1 colorpair
14 126 0.0 1 colorpair
15 125 0.0 1 colorpair
16 33 0.0 1 colorpair
17 32 0.0 1 colorpair
18 31 0.0 1 colorpair
19 30 0.0 1 colorpair
47 63 0.0 1 colorpair
48 62 0.0 1 colorpair
49 61 0.0 1 colorpair
50 60 0.0 1 colorpair
51 59 0.0 1 colorpair
52 58 0.0 1 colorpair
65 80 0.0 1 colorpair
66 79 0.0 1 colorpair
67 78 0.0 1 colorpair
69 76 0.0 1 colorpair
84 107 0.0 1 colorpair
85 106 0.0 1 colorpair
86 105 0.0 1 colorpair
87 104 0.0 1 colorpair
88 103 0.0 1 colorpair
89 101 0.0 1 colorpair
90 100 0.0 1 colorpair
91 99 0.0 1 colorpair
92 98 0.0 1 colorpair
93 97 0.0 1 colorpair
109 122 0.0 1 colorpair
110 121 0.0 1 colorpair
111 120 0.0 1 colorpair
112 119 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
