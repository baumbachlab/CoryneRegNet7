%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
__GUGUUCUCAGGGCGGGGUGAAAUUCCCCACCGGCGGUGAGACACUCCUCCAGAUGA_GGAGAGCUAAGCCCGCGAGCGCCAC_____GUAUUCAUAUAAAGAAGGGUGGGUCAGCAGAUCCGGUGUAAUUCCGGAGCCGACGGUCACAGUCCGGAUGGAAGAGAACC___\
) } def
/len { sequence length } bind def

/coor [
[85.20077515 242.30364990]
[75.12393188 230.62200928]
[72.98494720 215.34364319]
[79.46636963 201.34384155]
[92.50000000 193.08985901]
[92.50000000 178.08985901]
[92.50000000 163.08985901]
[92.50000000 148.08985901]
[92.50000000 133.08985901]
[92.50000000 118.08986664]
[85.64472198 115.04763794]
[71.93416595 108.96318054]
[65.07888031 105.92095184]
[53.95604706 115.98487091]
[48.91407776 130.98117065]
[34.28535080 133.78288269]
[23.16251183 143.84680176]
[12.03967476 153.91072083]
[0.91683686 163.97463989]
[1.68118489 179.59353638]
[-7.81404734 192.01828003]
[-23.08550072 195.38232422]
[-36.92246246 188.09722900]
[-42.79154205 173.60282898]
[-37.92154312 158.74290466]
[-24.61192322 150.53388977]
[-9.14708328 152.85180664]
[1.97575450 142.78788757]
[13.09859180 132.72395325]
[24.22142982 122.66004181]
[28.46781731 108.38357544]
[43.89212799 104.86203766]
[55.01496506 94.79811859]
[61.22365570 81.14336395]
[61.49603271 66.14584351]
[61.76840973 51.14831543]
[53.64838409 38.53620911]
[39.88314819 32.57649231]
[26.11791039 26.61677361]
[11.57267284 32.19116211]
[-2.30233741 25.95106888]
[-7.52702713 12.05005360]
[-21.29226494 6.09033585]
[-35.05750275 0.13061762]
[-48.82273865 -5.82910061]
[-64.56105804 -4.21172476]
[-73.16651154 -16.36883926]
[-86.93174744 -22.32855797]
[-100.69698334 -28.28827667]
[-114.51576996 -34.12276459]
[-128.38694763 -39.83154678]
[-143.68849182 -35.01051712]
[-156.91709900 -44.08705902]
[-157.92491150 -60.09842300]
[-145.93882751 -70.76206970]
[-130.15353394 -67.89775085]
[-122.67817688 -53.70273209]
[-108.80698395 -47.99395370]
[-101.39828491 -48.35734940]
[-94.73726654 -42.05351257]
[-80.97203064 -36.09379578]
[-67.20679474 -30.13407707]
[-52.45305634 -32.17773056]
[-42.86302185 -19.59433746]
[-29.09778404 -13.63461971]
[-15.33254623 -7.67490149]
[-1.56730902 -1.71518338]
[12.14471245 -7.41746807]
[26.18951988 -1.56955743]
[32.07762909 12.85153580]
[45.84286499 18.81125450]
[59.60810471 24.77097130]
[53.64974976 12.41490269]
[54.90057755 -3.18639088]
[59.71679688 -17.39216614]
[52.97372818 -31.43384743]
[58.06042480 -45.77191544]
[71.48857880 -52.11386490]
[76.30479431 -66.31964111]
[76.09941864 -75.48835754]
[81.33959198 -80.73825836]
[86.41297150 -94.85424042]
[91.48635101 -108.97021484]
[96.55973053 -123.08619690]
[95.61309052 -127.40719604]
[96.06668091 -131.39570618]
[97.63882446 -134.64714050]
[99.94416046 -136.89230347]
[102.54775238 -138.01971436]
[98.04217529 -147.96905518]
[99.74131012 -158.53524780]
[106.84111023 -166.24650574]
[116.80414581 -168.70503235]
[123.38243103 -182.18562317]
[129.96072388 -195.66619873]
[123.43834686 -209.87861633]
[127.62731171 -224.94468689]
[140.54971313 -233.75068665]
[156.10398865 -232.13868713]
[166.94587708 -220.86982727]
[167.95619202 -205.26490784]
[158.65786743 -192.69210815]
[143.44129944 -189.08792114]
[136.86302185 -175.60733032]
[130.28472900 -162.12675476]
[133.07177734 -143.01345825]
[116.25830841 -131.93525696]
[110.67571259 -118.01281738]
[105.60233307 -103.89683533]
[100.52895355 -89.78086090]
[95.45557404 -75.66487885]
[90.51056671 -61.50342178]
[85.69435120 -47.29764557]
[92.49687195 -34.09683990]
[87.81491089 -19.62155533]
[73.92256927 -12.57594776]
[69.10635376 1.62982702]
[73.55870056 7.66527319]
[88.46470642 5.98871946]
[82.46339417 19.73616600]
[86.91574097 25.77161026]
[101.91017151 25.36307335]
[116.90460968 24.95453453]
[131.89904785 24.54599762]
[146.89347839 24.13745880]
[156.47276306 11.77739048]
[171.76669312 8.51701832]
[185.55392456 15.89578915]
[191.32455444 30.42967415]
[186.35386658 45.25621414]
[172.98887634 53.37477493]
[157.54011536 50.95201874]
[147.30201721 39.13189316]
[132.30758667 39.54043198]
[117.31314850 39.94897079]
[102.31871033 40.35750961]
[87.32427979 40.76604843]
[76.76593781 51.42069244]
[76.49356079 66.41822052]
[76.22118378 81.41574860]
[95.57656097 65.24041748]
[124.28197479 68.33905029]
[144.34902954 93.94409943]
[155.82995605 103.59750366]
[167.31089783 113.25090027]
[182.68136597 110.37297058]
[196.28028870 118.09329224]
[201.68666077 132.76657104]
[196.34774780 147.46453857]
[182.78443909 155.24725342]
[167.40090942 152.43997192]
[157.46078491 140.36817932]
[157.65748596 124.73183441]
[146.17655945 115.07843781]
[134.69563293 105.42503357]
[127.89672089 108.59123993]
[134.22914124 122.18905640]
[144.45355225 133.16453552]
[137.17475891 146.28013611]
[122.45180511 143.41050720]
[120.63132477 128.52146912]
[114.29890442 114.92366028]
[107.50000000 118.08986664]
[107.50000000 133.08985901]
[107.50000000 148.08985901]
[107.50000000 163.08985901]
[107.50000000 178.08985901]
[107.50000000 193.08985901]
[120.53363037 201.34384155]
[127.01505280 215.34364319]
[124.87606812 230.62200928]
[114.79922485 242.30364990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 168]
[6 167]
[7 166]
[8 165]
[9 164]
[10 163]
[13 33]
[14 32]
[16 30]
[17 29]
[18 28]
[19 27]
[34 140]
[35 139]
[36 138]
[37 72]
[38 71]
[39 70]
[42 67]
[43 66]
[44 65]
[45 64]
[47 62]
[48 61]
[49 60]
[50 58]
[51 57]
[74 117]
[75 116]
[78 113]
[79 112]
[81 111]
[82 110]
[83 109]
[84 108]
[89 107]
[93 105]
[94 104]
[95 103]
[121 137]
[122 136]
[123 135]
[124 134]
[125 133]
[143 155]
[144 154]
[145 153]
] def

init

% Start Annotations
5 168 0.16 1 colorpair
6 167 0.0 1 colorpair
7 166 0.0 1 colorpair
8 165 0.0 1 colorpair
9 164 0.0 1 colorpair
10 163 0.0 1 colorpair
13 33 0.0 1 colorpair
14 32 0.0 1 colorpair
16 30 0.0 1 colorpair
17 29 0.0 1 colorpair
18 28 0.0 1 colorpair
19 27 0.0 1 colorpair
34 140 0.0 1 colorpair
35 139 0.0 1 colorpair
36 138 0.0 1 colorpair
37 72 0.0 1 colorpair
38 71 0.0 1 colorpair
39 70 0.0 1 colorpair
42 67 0.32 1 colorpair
43 66 0.32 1 colorpair
44 65 0.16 1 colorpair
45 64 0.16 0.6 colorpair
47 62 0.16 1 colorpair
48 61 0.16 1 colorpair
49 60 0.0 1 colorpair
50 58 0.32 1 colorpair
51 57 0.16 0.6 colorpair
74 117 0.0 1 colorpair
75 116 0.0 1 colorpair
78 113 0.16 1 colorpair
79 112 0.0 0.6 colorpair
81 111 0.0 1 colorpair
82 110 0.16 1 colorpair
83 109 0.16 1 colorpair
84 108 0.16 1 colorpair
89 107 0.16 0.6 colorpair
93 105 0.16 1 colorpair
94 104 0.16 0.6 colorpair
95 103 0.16 1 colorpair
121 137 0.0 1 colorpair
122 136 0.0 1 colorpair
123 135 0.0 1 colorpair
124 134 0.0 1 colorpair
125 133 0.0 1 colorpair
143 155 0.0 1 colorpair
144 154 0.0 1 colorpair
145 153 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
168 cmark
42 cmark
67 cmark
43 cmark
66 cmark
44 cmark
65 cmark
45 64 1 gmark
45 cmark
64 cmark
62 cmark
48 cmark
61 cmark
50 cmark
58 cmark
51 57 1 gmark
51 cmark
57 cmark
113 cmark
79 112 1 gmark
82 cmark
83 cmark
109 cmark
84 cmark
89 107 1 gmark
89 cmark
107 cmark
93 cmark
105 cmark
94 104 1 gmark
104 cmark
95 cmark
103 cmark

% End Annotations
showpage
end
%%EOF
