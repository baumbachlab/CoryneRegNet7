%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
_UGCGGAGUGUACGUAUGAACUCUGC_UCGAAGCGAAACUCUGGUGUACUUCCCCGAUAUCAGAGUGGGUU___CUUCGUGCAGGGCUCUGUGUACACCCCGCUUUUA_\
) } def
/len { sequence length } bind def

/coor [
[101.37648010 357.70919800]
[106.21979523 343.06179810]
[118.22758484 333.37591553]
[116.51771545 318.47369385]
[114.80784607 303.57144165]
[113.09796906 288.66921997]
[103.96030426 276.90689087]
[110.07407379 262.31469727]
[108.36419678 247.41247559]
[106.65432739 232.51025391]
[104.94445801 217.60801697]
[103.23458862 202.70579529]
[101.52471924 187.80357361]
[99.81484222 172.90133667]
[98.10497284 157.99911499]
[96.39510345 143.09689331]
[92.44728851 136.71554565]
[94.85545349 127.74552155]
[93.57182312 112.80054474]
[85.72859955 101.22576904]
[91.48320007 88.48307800]
[90.19956970 73.53810120]
[88.91594696 58.59312820]
[87.63232422 43.64815140]
[86.34869385 28.70317459]
[85.06507111 13.75819874]
[75.66173553 4.78805685]
[74.97657776 -7.78606749]
[82.83127594 -17.10801315]
[81.97494507 -32.08354950]
[81.11861420 -47.05908585]
[80.26228333 -62.03462219]
[79.40594482 -77.01016235]
[62.00899887 -84.71191406]
[50.82730484 -100.00626373]
[48.78310394 -118.76148224]
[56.34333038 -135.95979309]
[71.41602325 -147.03985596]
[68.85819244 -161.82015991]
[66.30036163 -176.60046387]
[63.74252701 -191.38078308]
[61.18469238 -206.16108704]
[58.62685776 -220.94139099]
[56.06902695 -235.72169495]
[53.51119232 -250.50199890]
[50.95336151 -265.28231812]
[48.39552689 -280.06262207]
[43.78613663 -288.12573242]
[45.98199844 -295.30105591]
[33.18140411 -304.57037354]
[30.76695251 -320.18914795]
[40.17109680 -332.89102173]
[55.81451797 -335.14019775]
[68.41625977 -325.60229492]
[70.49992371 -309.93597412]
[60.82931900 -297.43579102]
[63.17583466 -282.62045288]
[65.73366547 -267.84014893]
[68.29150391 -253.05984497]
[70.84933472 -238.27952576]
[73.40716553 -223.49922180]
[75.96499634 -208.71891785]
[78.52283478 -193.93861389]
[81.08066559 -179.15829468]
[83.63849640 -164.37799072]
[86.19633484 -149.59768677]
[97.36824036 -147.46943665]
[107.35031128 -141.96377563]
[115.14726257 -133.61058044]
[119.97576904 -123.22454071]
[121.34314728 -111.82577515]
[119.09756470 -100.53959656]
[113.44470978 -90.48545837]
[104.92906189 -82.66587067]
[94.38148499 -77.86649323]
[95.23781586 -62.89095306]
[96.09414673 -47.91541672]
[96.95047760 -32.93988037]
[97.80681610 -17.96434402]
[108.22965240 -3.92556334]
[100.01004791 12.47457409]
[101.29367065 27.41954994]
[102.57730103 42.36452484]
[103.86092377 57.30950165]
[105.14454651 72.25447845]
[106.42817688 87.19945526]
[114.27140045 98.77423096]
[108.51679993 111.51692200]
[109.80043030 126.46189880]
[111.29732513 141.38702393]
[113.00720215 156.28924561]
[114.71707153 171.19146729]
[116.42694092 186.09370422]
[118.13681030 200.99592590]
[119.84668732 215.89814758]
[121.55655670 230.80036926]
[123.26642609 245.70260620]
[124.97629547 260.60482788]
[134.23626709 273.43307495]
[128.00019836 286.95935059]
[129.71006775 301.86157227]
[131.41993713 316.76382446]
[133.12980652 331.66604614]
[147.01936340 338.38049316]
[155.05439758 351.55023193]
[154.67095947 366.97280884]
[145.99140930 379.72698975]
[131.78535461 385.74291992]
[116.58589172 383.10095215]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 103]
[4 102]
[5 101]
[6 100]
[8 98]
[9 97]
[10 96]
[11 95]
[12 94]
[13 93]
[14 92]
[15 91]
[16 90]
[18 89]
[19 88]
[21 86]
[22 85]
[23 84]
[24 83]
[25 82]
[26 81]
[29 79]
[30 78]
[31 77]
[32 76]
[33 75]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[49 56]
] def

init

% Start Annotations
3 103 0.0 1 colorpair
4 102 0.0 1 colorpair
5 101 0.0 1 colorpair
6 100 0.0 1 colorpair
8 98 0.0 1 colorpair
9 97 0.0 1 colorpair
10 96 0.0 0.6 colorpair
11 95 0.0 1 colorpair
12 94 0.0 1 colorpair
13 93 0.0 1 colorpair
14 92 0.0 1 colorpair
15 91 0.16 1 colorpair
16 90 0.0 1 colorpair
18 89 0.0 1 colorpair
19 88 0.0 1 colorpair
21 86 0.0 1 colorpair
22 85 0.0 1 colorpair
23 84 0.0 1 colorpair
24 83 0.0 1 colorpair
25 82 0.0 1 colorpair
26 81 0.16 1 colorpair
29 79 0.0 0.6 colorpair
30 78 0.0 1 colorpair
31 77 0.0 0.6 colorpair
32 76 0.0 0.6 colorpair
33 75 0.16 1 colorpair
38 66 0.16 1 colorpair
39 65 0.0 1 colorpair
40 64 0.0 1 colorpair
41 63 0.0 1 colorpair
42 62 0.0 1 colorpair
43 61 0.0 1 colorpair
44 60 0.0 1 colorpair
45 59 0.0 1 colorpair
46 58 0.0 1 colorpair
47 57 0.0 1 colorpair
49 56 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
10 96 1 gmark
15 cmark
26 cmark
81 cmark
29 79 1 gmark
31 77 1 gmark
32 76 1 gmark
75 cmark
38 cmark
66 cmark

% End Annotations
showpage
end
%%EOF
