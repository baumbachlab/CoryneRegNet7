%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUUUUUCGCGUCGGAACUCGACCCAAAACGUCGGAAAUGAUCCGGUUCAUCGAUGAAUACCGGAAUCGUUUCUCUGUCGAGUUCAUCUGUAAGACGUUGAAGAAUAACCGGG\
) } def
/len { sequence length } bind def

/coor [
[145.21476746 481.20028687]
[142.01695251 466.31091309]
[145.15798950 451.40942383]
[154.09371948 439.07766724]
[167.27595520 431.45211792]
[165.65415955 416.54006958]
[164.03237915 401.62799072]
[162.41059875 386.71591187]
[160.78880310 371.80386353]
[159.16702271 356.89178467]
[157.54524231 341.97970581]
[155.72167969 327.09097290]
[153.69667053 312.22827148]
[151.67167664 297.36560059]
[149.64668274 282.50292969]
[132.41506958 266.09796143]
[140.24034119 242.91783142]
[135.45082092 228.70303345]
[130.66128540 214.48823547]
[125.87177277 200.27345276]
[121.08224487 186.05865479]
[116.29272461 171.84385681]
[111.50320435 157.62905884]
[106.71367645 143.41426086]
[101.92415619 129.19946289]
[94.40541840 128.72300720]
[87.25749969 126.34272766]
[80.95419312 122.21638489]
[75.91328430 116.61748505]
[72.46891022 109.91713715]
[70.84935760 102.55945587]
[71.16198730 95.03212738]
[73.38607025 87.83408356]
[77.37419891 81.44242096]
[82.86201477 76.28080750]
[89.48577881 72.69136047]
[87.86399841 57.77928925]
[86.24221039 42.86721802]
[84.62042236 27.95515060]
[82.99864197 13.04308128]
[81.37685394 -1.86898828]
[79.75507355 -16.78105736]
[78.13328552 -31.69312668]
[76.51149750 -46.60519791]
[74.68794250 -61.49393845]
[72.66294098 -76.35662079]
[70.63793945 -91.21930695]
[68.61293793 -106.08199310]
[66.58793640 -120.94467163]
[64.16120911 -135.74707031]
[61.33452988 -150.47833252]
[58.50785065 -165.20957947]
[47.37549210 -177.25128174]
[52.49548721 -192.83068848]
[68.60082245 -195.92103577]
[79.12371063 -183.34323120]
[73.23910522 -168.03625488]
[76.06578064 -153.30500793]
[78.89246368 -138.57374573]
[82.38317108 -135.13793945]
[83.66665649 -129.42839050]
[81.45062256 -122.96967316]
[83.47562408 -108.10698700]
[85.50062561 -93.24430847]
[87.52561951 -78.38162231]
[89.55062103 -63.51893997]
[93.62567902 -57.23271561]
[91.42356873 -48.22698212]
[93.04535675 -33.31491089]
[94.66713715 -18.40284348]
[96.28892517 -3.49077344]
[97.91071320 11.42129612]
[99.53249359 26.33336449]
[101.15428162 41.24543381]
[102.77606201 56.15750504]
[104.39785004 71.06957245]
[123.85449219 83.05084229]
[128.76651001 105.36639404]
[116.13895416 124.40993500]
[120.92847443 138.62472534]
[125.71799469 152.83952332]
[130.50752258 167.05432129]
[135.29704285 181.26911926]
[140.08656311 195.48391724]
[144.87608337 209.69871521]
[149.66561890 223.91351318]
[154.45513916 238.12831116]
[161.09938049 239.29460144]
[167.08273315 242.32057190]
[171.90083313 246.92459106]
[175.15527344 252.69323730]
[176.58653259 259.11825562]
[176.09454346 265.64138794]
[173.74526978 271.70288086]
[169.76306152 276.78948975]
[164.50935364 280.47790527]
[166.53436279 295.34060669]
[168.55935669 310.20327759]
[170.58436584 325.06597900]
[174.89480591 333.27404785]
[172.45730591 340.35791016]
[174.07908630 355.26998901]
[175.70088196 370.18206787]
[177.32266235 385.09414673]
[178.94444275 400.00619507]
[180.56623840 414.91827393]
[182.18801880 429.83035278]
[196.70130920 434.44381714]
[208.07910156 444.56634521]
[214.35008240 458.44421387]
[214.42779541 473.67291260]
[208.29878235 487.61404419]
[197.02490234 497.85217285]
[182.55944824 502.61352539]
[167.40863037 501.07315063]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 107]
[6 106]
[7 105]
[8 104]
[9 103]
[10 102]
[11 101]
[12 99]
[13 98]
[14 97]
[15 96]
[17 87]
[18 86]
[19 85]
[20 84]
[21 83]
[22 82]
[23 81]
[24 80]
[25 79]
[36 76]
[37 75]
[38 74]
[39 73]
[40 72]
[41 71]
[42 70]
[43 69]
[44 68]
[45 66]
[46 65]
[47 64]
[48 63]
[49 62]
[50 59]
[51 58]
[52 57]
] def

init

% Start Annotations
5 107 0.0 1 colorpair
6 106 0.16 1 colorpair
7 105 0.16 1 colorpair
8 104 0.0 1 colorpair
9 103 0.0 1 colorpair
10 102 0.0 1 colorpair
11 101 0.0 1 colorpair
12 99 0.0 1 colorpair
13 98 0.0 1 colorpair
14 97 0.0 1 colorpair
15 96 0.0 1 colorpair
17 87 0.0 1 colorpair
18 86 0.0 1 colorpair
19 85 0.0 1 colorpair
20 84 0.0 1 colorpair
21 83 0.0 1 colorpair
22 82 0.0 1 colorpair
23 81 0.0 1 colorpair
24 80 0.0 1 colorpair
25 79 0.0 1 colorpair
36 76 0.0 1 colorpair
37 75 0.0 1 colorpair
38 74 0.0 1 colorpair
39 73 0.0 1 colorpair
40 72 0.0 1 colorpair
41 71 0.0 1 colorpair
42 70 0.0 1 colorpair
43 69 0.0 1 colorpair
44 68 0.0 1 colorpair
45 66 0.0 1 colorpair
46 65 0.0 1 colorpair
47 64 0.0 1 colorpair
48 63 0.0 0.6 colorpair
49 62 0.0 1 colorpair
50 59 0.0 1 colorpair
51 58 0.0 1 colorpair
52 57 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
106 cmark
105 cmark
48 63 1 gmark

% End Annotations
showpage
end
%%EOF
