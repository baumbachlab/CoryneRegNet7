%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCAUCACUGUGUGAUGGGGACUAUUUAUUACGUCUAUUUGCGGUUUGUUCUGUUUUUAAGUUUGGCUUCAGAAGUGACAAAACCAAAGUUGAUUCGACGCUUAUU\
) } def
/len { sequence length } bind def

/coor [
[-65.47891235 298.99053955]
[-74.43628693 311.02239990]
[-83.39366913 323.05426025]
[-92.35105133 335.08609009]
[-101.30842590 347.11795044]
[-110.26580811 359.14978027]
[-119.22318268 371.18164062]
[-128.18055725 383.21350098]
[-137.13793945 395.24533081]
[-141.74650574 411.56088257]
[-158.70022583 411.64901733]
[-163.47817993 395.38226318]
[-149.16978455 386.28796387]
[-140.21241760 374.25610352]
[-131.25503540 362.22427368]
[-122.29765320 350.19241333]
[-113.34027100 338.16055298]
[-104.38289642 326.12872314]
[-95.42551422 314.09686279]
[-86.46813965 302.06503296]
[-77.51075745 290.03317261]
[-85.30290222 280.07577515]
[-90.42672729 268.50439453]
[-92.56581116 256.02005005]
[-91.58473969 243.38056946]
[-87.53767395 231.35458374]
[-80.66537476 220.67472839]
[-71.38091278 211.99307251]
[-60.24481201 205.84123230]
[-47.93124008 202.59793091]
[-35.18717194 202.46556091]
[-22.78709412 205.45767212]
[-11.48592758 211.39773560]
[-1.19230270 200.48713684]
[9.10132217 189.57652283]
[19.39494705 178.66592407]
[22.43248749 161.44940186]
[39.99186707 156.14892578]
[49.96380615 144.94355774]
[59.93574524 133.73817444]
[62.61682510 119.08686066]
[77.57108307 113.92151642]
[87.54301453 102.71614075]
[97.01669312 91.08645630]
[105.97407532 79.05461121]
[114.93144989 67.02275848]
[123.88883209 54.99091339]
[132.84620667 42.95906448]
[130.75567627 27.52315331]
[140.01112366 15.44874954]
[154.73979187 13.55087185]
[163.69717407 1.51902425]
[161.60664368 -13.91688919]
[170.86210632 -25.99129295]
[185.59075928 -27.88916969]
[194.54814148 -39.92101669]
[203.50552368 -51.95286560]
[212.46290588 -63.98471451]
[214.49752808 -79.67454529]
[228.30400085 -85.26299286]
[237.26136780 -97.29483795]
[246.21875000 -109.32669067]
[255.17613220 -121.35853577]
[259.78469849 -137.67408752]
[276.73840332 -137.76223755]
[281.51635742 -121.49546814]
[267.20797729 -112.40115356]
[258.25061035 -100.36930847]
[249.29322815 -88.33746338]
[240.33584595 -76.30561066]
[238.94190979 -61.47637939]
[224.49475098 -55.02733612]
[215.53736877 -42.99548721]
[206.57998657 -30.96363831]
[197.62261963 -18.93179131]
[200.02870178 -4.27756453]
[191.11604309 8.05204105]
[175.72901917 10.47640324]
[166.77165222 22.50825119]
[169.17773438 37.16247559]
[160.26507568 49.49208450]
[144.87805176 51.91644669]
[135.92068481 63.94829178]
[126.96330261 75.98014069]
[118.00592041 88.01198578]
[109.04853821 100.04383850]
[109.10334015 104.07528687]
[107.29922485 108.09400177]
[103.69422150 111.23251343]
[98.74839783 112.68807983]
[88.77645874 123.89345551]
[85.38211823 139.34625244]
[71.14112091 143.71011353]
[61.16918182 154.91549683]
[51.19724655 166.12086487]
[51.14537811 179.12014771]
[42.47911835 188.26164246]
[30.30555153 188.95954895]
[20.01192665 199.87014771]
[9.71830177 210.78076172]
[-0.57532263 221.69136047]
[7.78030825 237.18528748]
[10.45839119 254.56028748]
[7.16471863 271.80554199]
[-1.70472145 286.93060303]
[-15.11128330 298.19491577]
[-31.49527359 304.30834961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 21]
[2 20]
[3 19]
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[9 13]
[33 101]
[34 100]
[35 99]
[36 98]
[38 95]
[39 94]
[40 93]
[42 91]
[43 90]
[44 86]
[45 85]
[46 84]
[47 83]
[48 82]
[51 79]
[52 78]
[55 75]
[56 74]
[57 73]
[58 72]
[60 70]
[61 69]
[62 68]
[63 67]
] def

init

% Start Annotations
1 21 0.0 1 colorpair
2 20 0.0 1 colorpair
3 19 0.0 1 colorpair
4 18 0.0 1 colorpair
5 17 0.0 1 colorpair
6 16 0.0 1 colorpair
7 15 0.0 1 colorpair
8 14 0.0 1 colorpair
9 13 0.0 1 colorpair
33 101 0.0 1 colorpair
34 100 0.0 1 colorpair
35 99 0.0 1 colorpair
36 98 0.0 1 colorpair
38 95 0.0 1 colorpair
39 94 0.0 1 colorpair
40 93 0.0 1 colorpair
42 91 0.0 1 colorpair
43 90 0.0 1 colorpair
44 86 0.0 1 colorpair
45 85 0.0 1 colorpair
46 84 0.0 1 colorpair
47 83 0.0 1 colorpair
48 82 0.0 1 colorpair
51 79 0.0 1 colorpair
52 78 0.0 1 colorpair
55 75 0.0 1 colorpair
56 74 0.0 1 colorpair
57 73 0.0 1 colorpair
58 72 0.0 1 colorpair
60 70 0.0 1 colorpair
61 69 0.0 1 colorpair
62 68 0.0 1 colorpair
63 67 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations

% End Annotations
showpage
end
%%EOF
