%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 18:19:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGGCAACUCUGGAAAGACCUGCGCGCAGUCGUGUGCACGCGGG_CGCCGAAGGAGAAA____AGCCGGGUUGACCGGGUGAAGCUCUCAGGCACAAGCGACAGAGUGGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[85.08103180 297.50219727]
[72.17972565 289.50714111]
[63.04088593 277.38912964]
[58.90046310 262.78701782]
[60.31841660 247.67564392]
[67.10297394 234.09867859]
[78.33658600 223.89228821]
[92.50000000 218.43681335]
[92.50000000 203.43681335]
[92.50000000 188.43681335]
[92.50000000 173.43681335]
[92.50000000 158.43681335]
[92.50000000 143.43681335]
[83.91190338 141.03875732]
[75.98212433 136.96144104]
[69.03512573 131.37168884]
[63.35518646 124.49824524]
[59.17471695 116.62235260]
[56.66477966 108.06629181]
[55.92807770 99.18016052]
[41.19682312 96.35348511]
[26.46556664 93.52680206]
[11.73431206 90.70012665]
[-2.99694300 87.87344360]
[-17.79934120 85.44671631]
[-32.66202545 83.42171478]
[-47.52470779 81.39671326]
[-62.38739395 79.37171173]
[-77.25007629 77.34671021]
[-92.21601868 84.05139160]
[-105.34506226 74.22488403]
[-103.13117218 57.97586441]
[-87.85181427 52.01992416]
[-75.22507477 62.48403168]
[-60.36239243 64.50903320]
[-45.49971008 66.53402710]
[-30.63702393 68.55902863]
[-15.77434063 70.58403015]
[-11.40380192 68.37310791]
[-5.58330870 68.97988129]
[-0.17026314 73.14218903]
[14.56099224 75.96887207]
[29.29224777 78.79554749]
[44.02350235 81.62223053]
[58.75475693 84.44890594]
[74.06275940 64.35920715]
[97.88652039 55.97114944]
[122.40418243 62.03871536]
[132.11497498 50.60628510]
[141.82577515 39.17385483]
[139.19422913 25.88325310]
[144.65783691 13.69895458]
[155.99552917 7.02177620]
[168.91136169 8.11943340]
[178.92817688 -3.04584265]
[188.94499207 -14.21111870]
[198.96180725 -25.37639427]
[192.48710632 -36.59863281]
[189.47860718 -49.18201065]
[190.17518616 -62.08317566]
[194.50894165 -74.23542786]
[202.11167908 -84.63691711]
[212.34616089 -92.43325043]
[224.35949707 -96.98765564]
[237.15422058 -97.93298340]
[249.67114258 -95.20129395]
[260.87698364 -89.02861786]
[271.76690674 -99.34410858]
[282.65682983 -109.65959930]
[293.54675293 -119.97509003]
[295.41680908 -135.90878296]
[309.11575317 -144.25852966]
[324.13494873 -138.61912537]
[328.95297241 -123.31662750]
[319.87380981 -110.08981323]
[303.86224365 -109.08515930]
[292.97232056 -98.76966858]
[282.08239746 -88.45417786]
[271.19247437 -78.13867950]
[277.88150024 -62.28870392]
[278.05810547 -45.05126572]
[271.66946411 -29.00309753]
[259.64630127 -16.55314255]
[243.76708984 -9.58096313]
[226.39520264 -9.15300751]
[210.12709045 -15.35957813]
[200.11027527 -4.19430256]
[190.09346008 6.97097349]
[180.07664490 18.13624954]
[181.73739624 34.81120300]
[170.65541077 47.82561493]
[153.25819397 48.88464737]
[143.54740906 60.31707764]
[133.83660889 71.74951172]
[139.44194031 80.31903839]
[142.91873169 89.95067596]
[144.07937622 100.12463379]
[142.86122131 110.29187012]
[139.33000183 119.90369415]
[133.67631531 128.44139099]
[126.20523834 135.44421387]
[117.31996155 140.53425598]
[107.50000000 143.43681335]
[107.50000000 158.43681335]
[107.50000000 173.43681335]
[107.50000000 188.43681335]
[107.50000000 203.43681335]
[107.50000000 218.43681335]
[121.66341400 223.89228821]
[132.89701843 234.09867859]
[139.68157959 247.67564392]
[141.09953308 262.78701782]
[136.95912170 277.38912964]
[127.82027435 289.50714111]
[114.91896820 297.50219727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 108]
[9 107]
[10 106]
[11 105]
[12 104]
[13 103]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[48 94]
[49 93]
[50 92]
[54 89]
[55 88]
[56 87]
[57 86]
[67 79]
[68 78]
[69 77]
[70 76]
] def

init

% Start Annotations
8 108 0.0 0.6 colorpair
9 107 0.0 1 colorpair
10 106 0.0 1 colorpair
11 105 0.0 1 colorpair
12 104 0.0 1 colorpair
13 103 0.0 1 colorpair
20 45 0.0 1 colorpair
21 44 0.16 1 colorpair
22 43 0.0 0.6 colorpair
23 42 0.0 0.6 colorpair
24 41 0.0 0.6 colorpair
25 38 0.16 1 colorpair
26 37 0.0 1 colorpair
27 36 0.16 1 colorpair
28 35 0.0 0.6 colorpair
29 34 0.0 1 colorpair
48 94 0.0 1 colorpair
49 93 0.0 1 colorpair
50 92 0.0 1 colorpair
54 89 0.0 1 colorpair
55 88 0.0 1 colorpair
56 87 0.0 1 colorpair
57 86 0.0 1 colorpair
67 79 0.16 1 colorpair
68 78 0.0 0.6 colorpair
69 77 0.0 0.6 colorpair
70 76 0.0 0.6 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
8 108 1 gmark
21 cmark
22 43 1 gmark
23 42 1 gmark
24 41 1 gmark
38 cmark
27 cmark
36 cmark
28 35 1 gmark
67 cmark
79 cmark
68 78 1 gmark
69 77 1 gmark
70 76 1 gmark

% End Annotations
showpage
end
%%EOF
