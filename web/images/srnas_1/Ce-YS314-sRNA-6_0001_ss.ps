%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Thu May 14 14:40:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGAUGCCCUCCUGGAUGGGGAAUAUAGACCUUCGACAAGUCGUAUUAUCCCAGUUCAGAAGGGUAUUUCUCUUUUUCCCACGCCGCUACCCCAAAAUCACAUCGGUGGAUCCAG\
) } def
/len { sequence length } bind def

/coor [
[333.51269531 214.19538879]
[319.85317993 207.99720764]
[306.19366455 201.79902649]
[292.53414917 195.60084534]
[278.87463379 189.40266418]
[265.21508789 183.20448303]
[251.55558777 177.00630188]
[237.89605713 170.80812073]
[224.23654175 164.60993958]
[210.57701111 158.41174316]
[196.91749573 152.21356201]
[183.25796509 146.01538086]
[168.47093201 147.80216980]
[159.10116577 135.05392456]
[145.44163513 128.85574341]
[131.78211975 122.65755463]
[118.12259674 116.45937347]
[104.46307373 110.26119232]
[90.72225189 104.24538422]
[76.90257263 98.41302490]
[63.08289719 92.58065796]
[49.26321411 86.74829865]
[35.44353485 80.91593170]
[21.54744339 75.26805115]
[7.57740116 69.80564117]
[-6.39264154 64.34323120]
[-20.36268425 58.88082123]
[-34.33272552 53.41841125]
[-43.59584427 53.19118118]
[-48.59877396 47.62016296]
[-62.41845322 41.78779984]
[-76.23812866 35.95544052]
[-88.91040802 44.75413132]
[-104.32873535 45.28208160]
[-117.57318115 37.37081528]
[-124.41749573 23.54479218]
[-122.67768097 8.21584606]
[-112.90890503 -3.72461271]
[-98.22834778 -8.46642685]
[-83.32052612 -4.49650049]
[-72.94246674 6.91837645]
[-70.40576935 22.13575935]
[-56.58609009 27.96812248]
[-42.76641083 33.80048370]
[-28.87031746 39.44837189]
[-14.90027523 44.91077805]
[-0.93023270 50.37318802]
[13.03981018 55.83559799]
[27.00985336 61.29800415]
[34.48075485 60.79681396]
[41.27589798 67.09625244]
[55.09557724 72.92861938]
[68.91526031 78.76097870]
[82.73493958 84.59333801]
[96.55461884 90.42570496]
[104.72714996 90.42027283]
[110.66125488 96.60166931]
[124.32077789 102.79985046]
[137.98030090 108.99803162]
[151.63981628 115.19621277]
[165.29934692 121.39440155]
[181.06340027 120.05094147]
[189.45616150 132.35586548]
[203.11567688 138.55404663]
[216.77519226 144.75222778]
[230.43472290 150.95040894]
[244.09423828 157.14859009]
[257.75375366 163.34677124]
[271.41329956 169.54495239]
[285.07281494 175.74314880]
[298.73233032 181.94132996]
[312.39184570 188.13951111]
[326.05136108 194.33769226]
[339.71090698 200.53587341]
[349.26834106 189.68286133]
[361.49282837 181.98664856]
[375.38021851 178.06875610]
[389.79266357 178.24076843]
[403.55203247 182.47961426]
[415.53610229 190.43008423]
[424.77014160 201.43469238]
[430.50616455 214.58792114]
[432.28353882 228.81088257]
[429.96591187 242.93966675]
[443.45559692 249.49926758]
[456.94528198 256.05886841]
[470.43496704 262.61849976]
[483.92462158 269.17810059]
[494.59405518 258.43368530]
[508.17517090 251.73803711]
[523.19482422 249.81742859]
[538.02380371 252.88020325]
[551.05352783 260.59411621]
[560.87066650 272.12243652]
[566.41033936 286.21469116]
[567.07159424 301.34219360]
[562.78277588 315.86404419]
[554.00903320 328.20504761]
[541.70214844 337.02651978]
[527.19696045 341.37161255]
[512.06701660 340.76892090]
[497.95343018 335.28390503]
[486.38717651 325.51150513]
[478.62283325 312.51174927]
[475.50262451 297.69476318]
[477.36502075 282.66778564]
[463.87533569 276.10818481]
[450.38565063 269.54855347]
[436.89596558 262.98895264]
[423.40631104 256.42935181]
[412.70700073 267.78762817]
[399.01419067 275.31069946]
[383.65158081 278.25769043]
[368.10848999 276.33074951]
[353.89553833 269.70513916]
[342.39767456 259.01339722]
[334.73941040 245.28485107]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 74]
[2 73]
[3 72]
[4 71]
[5 70]
[6 69]
[7 68]
[8 67]
[9 66]
[10 65]
[11 64]
[12 63]
[14 61]
[15 60]
[16 59]
[17 58]
[18 57]
[19 55]
[20 54]
[21 53]
[22 52]
[23 51]
[24 49]
[25 48]
[26 47]
[27 46]
[28 45]
[30 44]
[31 43]
[32 42]
[84 110]
[85 109]
[86 108]
[87 107]
[88 106]
] def

init

% Start Annotations
1 74 0.0 1 colorpair
2 73 0.0 1 colorpair
3 72 0.0 1 colorpair
4 71 0.0 1 colorpair
5 70 0.0 1 colorpair
6 69 0.0 1 colorpair
7 68 0.16 1 colorpair
8 67 0.16 1 colorpair
9 66 0.0 1 colorpair
10 65 0.0 1 colorpair
11 64 0.0 1 colorpair
12 63 0.0 1 colorpair
14 61 0.0 1 colorpair
15 60 0.0 1 colorpair
16 59 0.0 1 colorpair
17 58 0.0 1 colorpair
18 57 0.0 1 colorpair
19 55 0.0 1 colorpair
20 54 0.0 1 colorpair
21 53 0.0 1 colorpair
22 52 0.0 1 colorpair
23 51 0.0 1 colorpair
24 49 0.0 1 colorpair
25 48 0.0 1 colorpair
26 47 0.0 1 colorpair
27 46 0.0 1 colorpair
28 45 0.16 1 colorpair
30 44 0.0 1 colorpair
31 43 0.0 1 colorpair
32 42 0.0 1 colorpair
84 110 0.0 1 colorpair
85 109 0.0 1 colorpair
86 108 0.0 1 colorpair
87 107 0.0 1 colorpair
88 106 0.0 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
68 cmark
67 cmark
28 cmark

% End Annotations
showpage
end
%%EOF
